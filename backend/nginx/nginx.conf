# üåê NGINX CONFIGURATION - SISTEMA PROCURA
# Load balancer y reverse proxy para escalabilidad horizontal

# ========================================
# EVENTS BLOCK
# ========================================
events {
    worker_connections 1024;
}

# ========================================
# HTTP BLOCK
# ========================================
http {
    # ========================================
    # BASIC SETTINGS
    # ========================================
    # Windows-friendly include; fallback to local mime.types if present
    include mime.types;
    default_type application/octet-stream;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ========================================
    # UPSTREAM SERVERS (LOAD BALANCING)
    # ========================================
    upstream procura_backend {
        # Load balancing method: least_conn (least connections)
        least_conn;
        
        # Health check configuration
        keepalive 32;
        
        # Backend servers (multiple instances)
        server localhost:3000 max_fails=3 fail_timeout=30s;
        server localhost:3001 max_fails=3 fail_timeout=30s;
        server localhost:3002 max_fails=3 fail_timeout=30s;
        server localhost:3003 max_fails=3 fail_timeout=30s;
        
        # Backup servers (if needed)
        # server backup1:3000 backup;
        # server backup2:3000 backup;
    }

    # ========================================
    # RATE LIMITING
    # ========================================
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # ========================================
    # LOGGING
    # ========================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log logs/access.log main;
    error_log logs/error.log warn;

    # ========================================
    # SECURITY HEADERS
    # ========================================
    # Security headers map
    map $http_x_forwarded_proto $redirect_scheme {
        default $scheme;
        https https;
    }

    # ========================================
    # MAIN SERVER BLOCK
    # ========================================
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;
        
        # Connection limiting
        limit_conn conn_limit_per_ip 10;
        
        # ========================================
        # HEALTH CHECK ENDPOINT
        # ========================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # ========================================
        # NGINX STATUS (for monitoring)
        # ========================================
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # ========================================
        # API ROUTES WITH LOAD BALANCING
        # ========================================
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://procura_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Error handling
            proxy_intercept_errors on;
            error_page 502 503 504 /50x.html;
        }
        
        # ========================================
        # AUTHENTICATION ENDPOINTS (STRICT RATE LIMITING)
        # ========================================
        location ~ ^/api/(auth|login|register|password-reset) {
            # Strict rate limiting for auth endpoints
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://procura_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Shorter timeouts for auth
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # ========================================
        # FILE UPLOAD ENDPOINTS
        # ========================================
        location ~ ^/api/(upload|files) {
            # Rate limiting for uploads
            limit_req zone=upload burst=3 nodelay;
            
            # Increase client body size for uploads
            client_max_body_size 50M;
            
            proxy_pass http://procura_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeouts for uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # ========================================
        # STATIC FILES
        # ========================================
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # ========================================
        # ERROR PAGES
        # ========================================
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # ========================================
        # DEFAULT LOCATION
        # ========================================
        # En dev Windows, mantener HTTP sin redirigir a HTTPS
        location / {
            proxy_pass http://procura_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # ========================================
    # HTTPS SERVER BLOCK
    # ========================================
    # Eliminar bloque HTTPS en Windows dev (certs no disponibles)
}
