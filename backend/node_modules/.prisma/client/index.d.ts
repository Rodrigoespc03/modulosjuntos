
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model organizaciones
 * 
 */
export type organizaciones = $Result.DefaultSelection<Prisma.$organizacionesPayload>
/**
 * Model usuarios
 * 
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>
/**
 * Model pacientes
 * 
 */
export type pacientes = $Result.DefaultSelection<Prisma.$pacientesPayload>
/**
 * Model consultorios
 * 
 */
export type consultorios = $Result.DefaultSelection<Prisma.$consultoriosPayload>
/**
 * Model cobros
 * 
 */
export type cobros = $Result.DefaultSelection<Prisma.$cobrosPayload>
/**
 * Model cobro_conceptos
 * 
 */
export type cobro_conceptos = $Result.DefaultSelection<Prisma.$cobro_conceptosPayload>
/**
 * Model historial_cobros
 * 
 */
export type historial_cobros = $Result.DefaultSelection<Prisma.$historial_cobrosPayload>
/**
 * Model metodos_pago_cobro
 * 
 */
export type metodos_pago_cobro = $Result.DefaultSelection<Prisma.$metodos_pago_cobroPayload>
/**
 * Model servicios
 * 
 */
export type servicios = $Result.DefaultSelection<Prisma.$serviciosPayload>
/**
 * Model precios_consultorio
 * 
 */
export type precios_consultorio = $Result.DefaultSelection<Prisma.$precios_consultorioPayload>
/**
 * Model configuracion_permisos
 * 
 */
export type configuracion_permisos = $Result.DefaultSelection<Prisma.$configuracion_permisosPayload>
/**
 * Model citas
 * 
 */
export type citas = $Result.DefaultSelection<Prisma.$citasPayload>
/**
 * Model disponibilidad_medico
 * 
 */
export type disponibilidad_medico = $Result.DefaultSelection<Prisma.$disponibilidad_medicoPayload>
/**
 * Model bloqueo_medico
 * 
 */
export type bloqueo_medico = $Result.DefaultSelection<Prisma.$bloqueo_medicoPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Sede
 * 
 */
export type Sede = $Result.DefaultSelection<Prisma.$SedePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model InventoryUsage
 * 
 */
export type InventoryUsage = $Result.DefaultSelection<Prisma.$InventoryUsagePayload>
/**
 * Model InventoryUsageDetail
 * 
 */
export type InventoryUsageDetail = $Result.DefaultSelection<Prisma.$InventoryUsageDetailPayload>
/**
 * Model Movement
 * 
 */
export type Movement = $Result.DefaultSelection<Prisma.$MovementPayload>
/**
 * Model StockBySede
 * 
 */
export type StockBySede = $Result.DefaultSelection<Prisma.$StockBySedePayload>
/**
 * Model ProductExpiration
 * 
 */
export type ProductExpiration = $Result.DefaultSelection<Prisma.$ProductExpirationPayload>
/**
 * Model Allergen
 * 
 */
export type Allergen = $Result.DefaultSelection<Prisma.$AllergenPayload>
/**
 * Model ProductAllergen
 * 
 */
export type ProductAllergen = $Result.DefaultSelection<Prisma.$ProductAllergenPayload>
/**
 * Model Supplier
 * 
 */
export type Supplier = $Result.DefaultSelection<Prisma.$SupplierPayload>
/**
 * Model whatsapp_config
 * 
 */
export type whatsapp_config = $Result.DefaultSelection<Prisma.$whatsapp_configPayload>
/**
 * Model whatsapp_templates
 * 
 */
export type whatsapp_templates = $Result.DefaultSelection<Prisma.$whatsapp_templatesPayload>
/**
 * Model whatsapp_messages
 * 
 */
export type whatsapp_messages = $Result.DefaultSelection<Prisma.$whatsapp_messagesPayload>
/**
 * Model whatsapp_reminders
 * 
 */
export type whatsapp_reminders = $Result.DefaultSelection<Prisma.$whatsapp_remindersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const MetodoPago: {
  EFECTIVO: 'EFECTIVO',
  TARJETA_DEBITO: 'TARJETA_DEBITO',
  TARJETA_CREDITO: 'TARJETA_CREDITO',
  TRANSFERENCIA: 'TRANSFERENCIA',
  OTRO: 'OTRO'
};

export type MetodoPago = (typeof MetodoPago)[keyof typeof MetodoPago]


export const EstadoCobro: {
  PENDIENTE: 'PENDIENTE',
  COMPLETADO: 'COMPLETADO',
  CANCELADO: 'CANCELADO'
};

export type EstadoCobro = (typeof EstadoCobro)[keyof typeof EstadoCobro]


export const Rol: {
  DOCTOR: 'DOCTOR',
  SECRETARIA: 'SECRETARIA',
  ADMINISTRADOR: 'ADMINISTRADOR',
  ENFERMERA: 'ENFERMERA',
  PACIENTE: 'PACIENTE'
};

export type Rol = (typeof Rol)[keyof typeof Rol]


export const TipoCambio: {
  CREACION: 'CREACION',
  EDICION: 'EDICION',
  ELIMINACION: 'ELIMINACION',
  ACTUALIZACION: 'ACTUALIZACION'
};

export type TipoCambio = (typeof TipoCambio)[keyof typeof TipoCambio]


export const EstadoCita: {
  PROGRAMADA: 'PROGRAMADA',
  EN_CURSO: 'EN_CURSO',
  COMPLETADA: 'COMPLETADA',
  CANCELADA: 'CANCELADA',
  NO_ASISTIO: 'NO_ASISTIO'
};

export type EstadoCita = (typeof EstadoCita)[keyof typeof EstadoCita]


export const AlxoidType: {
  A: 'A',
  B: 'B'
};

export type AlxoidType = (typeof AlxoidType)[keyof typeof AlxoidType]


export const MovementType: {
  ENTRY: 'ENTRY',
  EXIT: 'EXIT'
};

export type MovementType = (typeof MovementType)[keyof typeof MovementType]


export const ProductType: {
  SIMPLE: 'SIMPLE',
  COMPLEX: 'COMPLEX'
};

export type ProductType = (typeof ProductType)[keyof typeof ProductType]


export const ProductUnit: {
  ML: 'ML',
  PIECE: 'PIECE'
};

export type ProductUnit = (typeof ProductUnit)[keyof typeof ProductUnit]


export const TipoTratamiento: {
  INMUNOTERAPIA: 'INMUNOTERAPIA',
  PRUEBAS: 'PRUEBAS',
  GAMMAGLOBULINA: 'GAMMAGLOBULINA',
  VACUNAS_PEDIATRICAS: 'VACUNAS_PEDIATRICAS',
  MEDICAMENTOS_EXTRAS: 'MEDICAMENTOS_EXTRAS',
  CONSULTA: 'CONSULTA'
};

export type TipoTratamiento = (typeof TipoTratamiento)[keyof typeof TipoTratamiento]


export const UserRole: {
  DOCTOR: 'DOCTOR',
  NURSE: 'NURSE',
  SECRETARY: 'SECRETARY'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const WhatsAppMessageStatus: {
  PENDING: 'PENDING',
  SENT: 'SENT',
  DELIVERED: 'DELIVERED',
  READ: 'READ',
  FAILED: 'FAILED'
};

export type WhatsAppMessageStatus = (typeof WhatsAppMessageStatus)[keyof typeof WhatsAppMessageStatus]

}

export type MetodoPago = $Enums.MetodoPago

export const MetodoPago: typeof $Enums.MetodoPago

export type EstadoCobro = $Enums.EstadoCobro

export const EstadoCobro: typeof $Enums.EstadoCobro

export type Rol = $Enums.Rol

export const Rol: typeof $Enums.Rol

export type TipoCambio = $Enums.TipoCambio

export const TipoCambio: typeof $Enums.TipoCambio

export type EstadoCita = $Enums.EstadoCita

export const EstadoCita: typeof $Enums.EstadoCita

export type AlxoidType = $Enums.AlxoidType

export const AlxoidType: typeof $Enums.AlxoidType

export type MovementType = $Enums.MovementType

export const MovementType: typeof $Enums.MovementType

export type ProductType = $Enums.ProductType

export const ProductType: typeof $Enums.ProductType

export type ProductUnit = $Enums.ProductUnit

export const ProductUnit: typeof $Enums.ProductUnit

export type TipoTratamiento = $Enums.TipoTratamiento

export const TipoTratamiento: typeof $Enums.TipoTratamiento

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type WhatsAppMessageStatus = $Enums.WhatsAppMessageStatus

export const WhatsAppMessageStatus: typeof $Enums.WhatsAppMessageStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Organizaciones
 * const organizaciones = await prisma.organizaciones.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Organizaciones
   * const organizaciones = await prisma.organizaciones.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.organizaciones`: Exposes CRUD operations for the **organizaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organizaciones
    * const organizaciones = await prisma.organizaciones.findMany()
    * ```
    */
  get organizaciones(): Prisma.organizacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pacientes`: Exposes CRUD operations for the **pacientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pacientes
    * const pacientes = await prisma.pacientes.findMany()
    * ```
    */
  get pacientes(): Prisma.pacientesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.consultorios`: Exposes CRUD operations for the **consultorios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Consultorios
    * const consultorios = await prisma.consultorios.findMany()
    * ```
    */
  get consultorios(): Prisma.consultoriosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cobros`: Exposes CRUD operations for the **cobros** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cobros
    * const cobros = await prisma.cobros.findMany()
    * ```
    */
  get cobros(): Prisma.cobrosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cobro_conceptos`: Exposes CRUD operations for the **cobro_conceptos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cobro_conceptos
    * const cobro_conceptos = await prisma.cobro_conceptos.findMany()
    * ```
    */
  get cobro_conceptos(): Prisma.cobro_conceptosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historial_cobros`: Exposes CRUD operations for the **historial_cobros** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Historial_cobros
    * const historial_cobros = await prisma.historial_cobros.findMany()
    * ```
    */
  get historial_cobros(): Prisma.historial_cobrosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.metodos_pago_cobro`: Exposes CRUD operations for the **metodos_pago_cobro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Metodos_pago_cobros
    * const metodos_pago_cobros = await prisma.metodos_pago_cobro.findMany()
    * ```
    */
  get metodos_pago_cobro(): Prisma.metodos_pago_cobroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.servicios`: Exposes CRUD operations for the **servicios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Servicios
    * const servicios = await prisma.servicios.findMany()
    * ```
    */
  get servicios(): Prisma.serviciosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.precios_consultorio`: Exposes CRUD operations for the **precios_consultorio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Precios_consultorios
    * const precios_consultorios = await prisma.precios_consultorio.findMany()
    * ```
    */
  get precios_consultorio(): Prisma.precios_consultorioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configuracion_permisos`: Exposes CRUD operations for the **configuracion_permisos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configuracion_permisos
    * const configuracion_permisos = await prisma.configuracion_permisos.findMany()
    * ```
    */
  get configuracion_permisos(): Prisma.configuracion_permisosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.citas`: Exposes CRUD operations for the **citas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Citas
    * const citas = await prisma.citas.findMany()
    * ```
    */
  get citas(): Prisma.citasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.disponibilidad_medico`: Exposes CRUD operations for the **disponibilidad_medico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disponibilidad_medicos
    * const disponibilidad_medicos = await prisma.disponibilidad_medico.findMany()
    * ```
    */
  get disponibilidad_medico(): Prisma.disponibilidad_medicoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bloqueo_medico`: Exposes CRUD operations for the **bloqueo_medico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bloqueo_medicos
    * const bloqueo_medicos = await prisma.bloqueo_medico.findMany()
    * ```
    */
  get bloqueo_medico(): Prisma.bloqueo_medicoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sede`: Exposes CRUD operations for the **Sede** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sedes
    * const sedes = await prisma.sede.findMany()
    * ```
    */
  get sede(): Prisma.SedeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryUsage`: Exposes CRUD operations for the **InventoryUsage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryUsages
    * const inventoryUsages = await prisma.inventoryUsage.findMany()
    * ```
    */
  get inventoryUsage(): Prisma.InventoryUsageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryUsageDetail`: Exposes CRUD operations for the **InventoryUsageDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryUsageDetails
    * const inventoryUsageDetails = await prisma.inventoryUsageDetail.findMany()
    * ```
    */
  get inventoryUsageDetail(): Prisma.InventoryUsageDetailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.movement`: Exposes CRUD operations for the **Movement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Movements
    * const movements = await prisma.movement.findMany()
    * ```
    */
  get movement(): Prisma.MovementDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockBySede`: Exposes CRUD operations for the **StockBySede** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockBySedes
    * const stockBySedes = await prisma.stockBySede.findMany()
    * ```
    */
  get stockBySede(): Prisma.StockBySedeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productExpiration`: Exposes CRUD operations for the **ProductExpiration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductExpirations
    * const productExpirations = await prisma.productExpiration.findMany()
    * ```
    */
  get productExpiration(): Prisma.ProductExpirationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.allergen`: Exposes CRUD operations for the **Allergen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Allergens
    * const allergens = await prisma.allergen.findMany()
    * ```
    */
  get allergen(): Prisma.AllergenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productAllergen`: Exposes CRUD operations for the **ProductAllergen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductAllergens
    * const productAllergens = await prisma.productAllergen.findMany()
    * ```
    */
  get productAllergen(): Prisma.ProductAllergenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplier`: Exposes CRUD operations for the **Supplier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Suppliers
    * const suppliers = await prisma.supplier.findMany()
    * ```
    */
  get supplier(): Prisma.SupplierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.whatsapp_config`: Exposes CRUD operations for the **whatsapp_config** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Whatsapp_configs
    * const whatsapp_configs = await prisma.whatsapp_config.findMany()
    * ```
    */
  get whatsapp_config(): Prisma.whatsapp_configDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.whatsapp_templates`: Exposes CRUD operations for the **whatsapp_templates** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Whatsapp_templates
    * const whatsapp_templates = await prisma.whatsapp_templates.findMany()
    * ```
    */
  get whatsapp_templates(): Prisma.whatsapp_templatesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.whatsapp_messages`: Exposes CRUD operations for the **whatsapp_messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Whatsapp_messages
    * const whatsapp_messages = await prisma.whatsapp_messages.findMany()
    * ```
    */
  get whatsapp_messages(): Prisma.whatsapp_messagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.whatsapp_reminders`: Exposes CRUD operations for the **whatsapp_reminders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Whatsapp_reminders
    * const whatsapp_reminders = await prisma.whatsapp_reminders.findMany()
    * ```
    */
  get whatsapp_reminders(): Prisma.whatsapp_remindersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    organizaciones: 'organizaciones',
    usuarios: 'usuarios',
    pacientes: 'pacientes',
    consultorios: 'consultorios',
    cobros: 'cobros',
    cobro_conceptos: 'cobro_conceptos',
    historial_cobros: 'historial_cobros',
    metodos_pago_cobro: 'metodos_pago_cobro',
    servicios: 'servicios',
    precios_consultorio: 'precios_consultorio',
    configuracion_permisos: 'configuracion_permisos',
    citas: 'citas',
    disponibilidad_medico: 'disponibilidad_medico',
    bloqueo_medico: 'bloqueo_medico',
    Product: 'Product',
    Sede: 'Sede',
    User: 'User',
    InventoryUsage: 'InventoryUsage',
    InventoryUsageDetail: 'InventoryUsageDetail',
    Movement: 'Movement',
    StockBySede: 'StockBySede',
    ProductExpiration: 'ProductExpiration',
    Allergen: 'Allergen',
    ProductAllergen: 'ProductAllergen',
    Supplier: 'Supplier',
    whatsapp_config: 'whatsapp_config',
    whatsapp_templates: 'whatsapp_templates',
    whatsapp_messages: 'whatsapp_messages',
    whatsapp_reminders: 'whatsapp_reminders'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "organizaciones" | "usuarios" | "pacientes" | "consultorios" | "cobros" | "cobro_conceptos" | "historial_cobros" | "metodos_pago_cobro" | "servicios" | "precios_consultorio" | "configuracion_permisos" | "citas" | "disponibilidad_medico" | "bloqueo_medico" | "product" | "sede" | "user" | "inventoryUsage" | "inventoryUsageDetail" | "movement" | "stockBySede" | "productExpiration" | "allergen" | "productAllergen" | "supplier" | "whatsapp_config" | "whatsapp_templates" | "whatsapp_messages" | "whatsapp_reminders"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      organizaciones: {
        payload: Prisma.$organizacionesPayload<ExtArgs>
        fields: Prisma.organizacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.organizacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.organizacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>
          }
          findFirst: {
            args: Prisma.organizacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.organizacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>
          }
          findMany: {
            args: Prisma.organizacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>[]
          }
          create: {
            args: Prisma.organizacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>
          }
          createMany: {
            args: Prisma.organizacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.organizacionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>[]
          }
          delete: {
            args: Prisma.organizacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>
          }
          update: {
            args: Prisma.organizacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>
          }
          deleteMany: {
            args: Prisma.organizacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.organizacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.organizacionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>[]
          }
          upsert: {
            args: Prisma.organizacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$organizacionesPayload>
          }
          aggregate: {
            args: Prisma.OrganizacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganizaciones>
          }
          groupBy: {
            args: Prisma.organizacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.organizacionesCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizacionesCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuariosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
      pacientes: {
        payload: Prisma.$pacientesPayload<ExtArgs>
        fields: Prisma.pacientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pacientesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pacientesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>
          }
          findFirst: {
            args: Prisma.pacientesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pacientesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>
          }
          findMany: {
            args: Prisma.pacientesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>[]
          }
          create: {
            args: Prisma.pacientesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>
          }
          createMany: {
            args: Prisma.pacientesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pacientesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>[]
          }
          delete: {
            args: Prisma.pacientesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>
          }
          update: {
            args: Prisma.pacientesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>
          }
          deleteMany: {
            args: Prisma.pacientesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pacientesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pacientesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>[]
          }
          upsert: {
            args: Prisma.pacientesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pacientesPayload>
          }
          aggregate: {
            args: Prisma.PacientesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePacientes>
          }
          groupBy: {
            args: Prisma.pacientesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PacientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.pacientesCountArgs<ExtArgs>
            result: $Utils.Optional<PacientesCountAggregateOutputType> | number
          }
        }
      }
      consultorios: {
        payload: Prisma.$consultoriosPayload<ExtArgs>
        fields: Prisma.consultoriosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.consultoriosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.consultoriosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>
          }
          findFirst: {
            args: Prisma.consultoriosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.consultoriosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>
          }
          findMany: {
            args: Prisma.consultoriosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>[]
          }
          create: {
            args: Prisma.consultoriosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>
          }
          createMany: {
            args: Prisma.consultoriosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.consultoriosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>[]
          }
          delete: {
            args: Prisma.consultoriosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>
          }
          update: {
            args: Prisma.consultoriosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>
          }
          deleteMany: {
            args: Prisma.consultoriosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.consultoriosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.consultoriosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>[]
          }
          upsert: {
            args: Prisma.consultoriosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$consultoriosPayload>
          }
          aggregate: {
            args: Prisma.ConsultoriosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConsultorios>
          }
          groupBy: {
            args: Prisma.consultoriosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConsultoriosGroupByOutputType>[]
          }
          count: {
            args: Prisma.consultoriosCountArgs<ExtArgs>
            result: $Utils.Optional<ConsultoriosCountAggregateOutputType> | number
          }
        }
      }
      cobros: {
        payload: Prisma.$cobrosPayload<ExtArgs>
        fields: Prisma.cobrosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cobrosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cobrosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>
          }
          findFirst: {
            args: Prisma.cobrosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cobrosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>
          }
          findMany: {
            args: Prisma.cobrosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>[]
          }
          create: {
            args: Prisma.cobrosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>
          }
          createMany: {
            args: Prisma.cobrosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cobrosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>[]
          }
          delete: {
            args: Prisma.cobrosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>
          }
          update: {
            args: Prisma.cobrosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>
          }
          deleteMany: {
            args: Prisma.cobrosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cobrosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cobrosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>[]
          }
          upsert: {
            args: Prisma.cobrosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrosPayload>
          }
          aggregate: {
            args: Prisma.CobrosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCobros>
          }
          groupBy: {
            args: Prisma.cobrosGroupByArgs<ExtArgs>
            result: $Utils.Optional<CobrosGroupByOutputType>[]
          }
          count: {
            args: Prisma.cobrosCountArgs<ExtArgs>
            result: $Utils.Optional<CobrosCountAggregateOutputType> | number
          }
        }
      }
      cobro_conceptos: {
        payload: Prisma.$cobro_conceptosPayload<ExtArgs>
        fields: Prisma.cobro_conceptosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cobro_conceptosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cobro_conceptosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>
          }
          findFirst: {
            args: Prisma.cobro_conceptosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cobro_conceptosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>
          }
          findMany: {
            args: Prisma.cobro_conceptosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>[]
          }
          create: {
            args: Prisma.cobro_conceptosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>
          }
          createMany: {
            args: Prisma.cobro_conceptosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cobro_conceptosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>[]
          }
          delete: {
            args: Prisma.cobro_conceptosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>
          }
          update: {
            args: Prisma.cobro_conceptosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>
          }
          deleteMany: {
            args: Prisma.cobro_conceptosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cobro_conceptosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cobro_conceptosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>[]
          }
          upsert: {
            args: Prisma.cobro_conceptosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobro_conceptosPayload>
          }
          aggregate: {
            args: Prisma.Cobro_conceptosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCobro_conceptos>
          }
          groupBy: {
            args: Prisma.cobro_conceptosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cobro_conceptosGroupByOutputType>[]
          }
          count: {
            args: Prisma.cobro_conceptosCountArgs<ExtArgs>
            result: $Utils.Optional<Cobro_conceptosCountAggregateOutputType> | number
          }
        }
      }
      historial_cobros: {
        payload: Prisma.$historial_cobrosPayload<ExtArgs>
        fields: Prisma.historial_cobrosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historial_cobrosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historial_cobrosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>
          }
          findFirst: {
            args: Prisma.historial_cobrosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historial_cobrosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>
          }
          findMany: {
            args: Prisma.historial_cobrosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>[]
          }
          create: {
            args: Prisma.historial_cobrosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>
          }
          createMany: {
            args: Prisma.historial_cobrosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.historial_cobrosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>[]
          }
          delete: {
            args: Prisma.historial_cobrosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>
          }
          update: {
            args: Prisma.historial_cobrosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>
          }
          deleteMany: {
            args: Prisma.historial_cobrosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.historial_cobrosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.historial_cobrosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>[]
          }
          upsert: {
            args: Prisma.historial_cobrosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cobrosPayload>
          }
          aggregate: {
            args: Prisma.Historial_cobrosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorial_cobros>
          }
          groupBy: {
            args: Prisma.historial_cobrosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Historial_cobrosGroupByOutputType>[]
          }
          count: {
            args: Prisma.historial_cobrosCountArgs<ExtArgs>
            result: $Utils.Optional<Historial_cobrosCountAggregateOutputType> | number
          }
        }
      }
      metodos_pago_cobro: {
        payload: Prisma.$metodos_pago_cobroPayload<ExtArgs>
        fields: Prisma.metodos_pago_cobroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.metodos_pago_cobroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.metodos_pago_cobroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>
          }
          findFirst: {
            args: Prisma.metodos_pago_cobroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.metodos_pago_cobroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>
          }
          findMany: {
            args: Prisma.metodos_pago_cobroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>[]
          }
          create: {
            args: Prisma.metodos_pago_cobroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>
          }
          createMany: {
            args: Prisma.metodos_pago_cobroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.metodos_pago_cobroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>[]
          }
          delete: {
            args: Prisma.metodos_pago_cobroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>
          }
          update: {
            args: Prisma.metodos_pago_cobroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>
          }
          deleteMany: {
            args: Prisma.metodos_pago_cobroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.metodos_pago_cobroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.metodos_pago_cobroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>[]
          }
          upsert: {
            args: Prisma.metodos_pago_cobroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pago_cobroPayload>
          }
          aggregate: {
            args: Prisma.Metodos_pago_cobroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetodos_pago_cobro>
          }
          groupBy: {
            args: Prisma.metodos_pago_cobroGroupByArgs<ExtArgs>
            result: $Utils.Optional<Metodos_pago_cobroGroupByOutputType>[]
          }
          count: {
            args: Prisma.metodos_pago_cobroCountArgs<ExtArgs>
            result: $Utils.Optional<Metodos_pago_cobroCountAggregateOutputType> | number
          }
        }
      }
      servicios: {
        payload: Prisma.$serviciosPayload<ExtArgs>
        fields: Prisma.serviciosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.serviciosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.serviciosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          findFirst: {
            args: Prisma.serviciosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.serviciosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          findMany: {
            args: Prisma.serviciosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>[]
          }
          create: {
            args: Prisma.serviciosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          createMany: {
            args: Prisma.serviciosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.serviciosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>[]
          }
          delete: {
            args: Prisma.serviciosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          update: {
            args: Prisma.serviciosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          deleteMany: {
            args: Prisma.serviciosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.serviciosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.serviciosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>[]
          }
          upsert: {
            args: Prisma.serviciosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          aggregate: {
            args: Prisma.ServiciosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServicios>
          }
          groupBy: {
            args: Prisma.serviciosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiciosGroupByOutputType>[]
          }
          count: {
            args: Prisma.serviciosCountArgs<ExtArgs>
            result: $Utils.Optional<ServiciosCountAggregateOutputType> | number
          }
        }
      }
      precios_consultorio: {
        payload: Prisma.$precios_consultorioPayload<ExtArgs>
        fields: Prisma.precios_consultorioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.precios_consultorioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.precios_consultorioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>
          }
          findFirst: {
            args: Prisma.precios_consultorioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.precios_consultorioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>
          }
          findMany: {
            args: Prisma.precios_consultorioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>[]
          }
          create: {
            args: Prisma.precios_consultorioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>
          }
          createMany: {
            args: Prisma.precios_consultorioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.precios_consultorioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>[]
          }
          delete: {
            args: Prisma.precios_consultorioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>
          }
          update: {
            args: Prisma.precios_consultorioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>
          }
          deleteMany: {
            args: Prisma.precios_consultorioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.precios_consultorioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.precios_consultorioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>[]
          }
          upsert: {
            args: Prisma.precios_consultorioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$precios_consultorioPayload>
          }
          aggregate: {
            args: Prisma.Precios_consultorioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrecios_consultorio>
          }
          groupBy: {
            args: Prisma.precios_consultorioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Precios_consultorioGroupByOutputType>[]
          }
          count: {
            args: Prisma.precios_consultorioCountArgs<ExtArgs>
            result: $Utils.Optional<Precios_consultorioCountAggregateOutputType> | number
          }
        }
      }
      configuracion_permisos: {
        payload: Prisma.$configuracion_permisosPayload<ExtArgs>
        fields: Prisma.configuracion_permisosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.configuracion_permisosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.configuracion_permisosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>
          }
          findFirst: {
            args: Prisma.configuracion_permisosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.configuracion_permisosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>
          }
          findMany: {
            args: Prisma.configuracion_permisosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>[]
          }
          create: {
            args: Prisma.configuracion_permisosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>
          }
          createMany: {
            args: Prisma.configuracion_permisosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.configuracion_permisosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>[]
          }
          delete: {
            args: Prisma.configuracion_permisosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>
          }
          update: {
            args: Prisma.configuracion_permisosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>
          }
          deleteMany: {
            args: Prisma.configuracion_permisosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.configuracion_permisosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.configuracion_permisosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>[]
          }
          upsert: {
            args: Prisma.configuracion_permisosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracion_permisosPayload>
          }
          aggregate: {
            args: Prisma.Configuracion_permisosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracion_permisos>
          }
          groupBy: {
            args: Prisma.configuracion_permisosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Configuracion_permisosGroupByOutputType>[]
          }
          count: {
            args: Prisma.configuracion_permisosCountArgs<ExtArgs>
            result: $Utils.Optional<Configuracion_permisosCountAggregateOutputType> | number
          }
        }
      }
      citas: {
        payload: Prisma.$citasPayload<ExtArgs>
        fields: Prisma.citasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.citasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.citasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          findFirst: {
            args: Prisma.citasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.citasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          findMany: {
            args: Prisma.citasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>[]
          }
          create: {
            args: Prisma.citasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          createMany: {
            args: Prisma.citasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.citasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>[]
          }
          delete: {
            args: Prisma.citasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          update: {
            args: Prisma.citasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          deleteMany: {
            args: Prisma.citasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.citasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.citasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>[]
          }
          upsert: {
            args: Prisma.citasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          aggregate: {
            args: Prisma.CitasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCitas>
          }
          groupBy: {
            args: Prisma.citasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CitasGroupByOutputType>[]
          }
          count: {
            args: Prisma.citasCountArgs<ExtArgs>
            result: $Utils.Optional<CitasCountAggregateOutputType> | number
          }
        }
      }
      disponibilidad_medico: {
        payload: Prisma.$disponibilidad_medicoPayload<ExtArgs>
        fields: Prisma.disponibilidad_medicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disponibilidad_medicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disponibilidad_medicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>
          }
          findFirst: {
            args: Prisma.disponibilidad_medicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disponibilidad_medicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>
          }
          findMany: {
            args: Prisma.disponibilidad_medicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>[]
          }
          create: {
            args: Prisma.disponibilidad_medicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>
          }
          createMany: {
            args: Prisma.disponibilidad_medicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.disponibilidad_medicoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>[]
          }
          delete: {
            args: Prisma.disponibilidad_medicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>
          }
          update: {
            args: Prisma.disponibilidad_medicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>
          }
          deleteMany: {
            args: Prisma.disponibilidad_medicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.disponibilidad_medicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.disponibilidad_medicoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>[]
          }
          upsert: {
            args: Prisma.disponibilidad_medicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disponibilidad_medicoPayload>
          }
          aggregate: {
            args: Prisma.Disponibilidad_medicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDisponibilidad_medico>
          }
          groupBy: {
            args: Prisma.disponibilidad_medicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Disponibilidad_medicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.disponibilidad_medicoCountArgs<ExtArgs>
            result: $Utils.Optional<Disponibilidad_medicoCountAggregateOutputType> | number
          }
        }
      }
      bloqueo_medico: {
        payload: Prisma.$bloqueo_medicoPayload<ExtArgs>
        fields: Prisma.bloqueo_medicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bloqueo_medicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bloqueo_medicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>
          }
          findFirst: {
            args: Prisma.bloqueo_medicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bloqueo_medicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>
          }
          findMany: {
            args: Prisma.bloqueo_medicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>[]
          }
          create: {
            args: Prisma.bloqueo_medicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>
          }
          createMany: {
            args: Prisma.bloqueo_medicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.bloqueo_medicoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>[]
          }
          delete: {
            args: Prisma.bloqueo_medicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>
          }
          update: {
            args: Prisma.bloqueo_medicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>
          }
          deleteMany: {
            args: Prisma.bloqueo_medicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bloqueo_medicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.bloqueo_medicoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>[]
          }
          upsert: {
            args: Prisma.bloqueo_medicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bloqueo_medicoPayload>
          }
          aggregate: {
            args: Prisma.Bloqueo_medicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBloqueo_medico>
          }
          groupBy: {
            args: Prisma.bloqueo_medicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Bloqueo_medicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.bloqueo_medicoCountArgs<ExtArgs>
            result: $Utils.Optional<Bloqueo_medicoCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Sede: {
        payload: Prisma.$SedePayload<ExtArgs>
        fields: Prisma.SedeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SedeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SedeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          findFirst: {
            args: Prisma.SedeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SedeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          findMany: {
            args: Prisma.SedeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>[]
          }
          create: {
            args: Prisma.SedeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          createMany: {
            args: Prisma.SedeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SedeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>[]
          }
          delete: {
            args: Prisma.SedeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          update: {
            args: Prisma.SedeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          deleteMany: {
            args: Prisma.SedeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SedeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SedeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>[]
          }
          upsert: {
            args: Prisma.SedeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          aggregate: {
            args: Prisma.SedeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSede>
          }
          groupBy: {
            args: Prisma.SedeGroupByArgs<ExtArgs>
            result: $Utils.Optional<SedeGroupByOutputType>[]
          }
          count: {
            args: Prisma.SedeCountArgs<ExtArgs>
            result: $Utils.Optional<SedeCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      InventoryUsage: {
        payload: Prisma.$InventoryUsagePayload<ExtArgs>
        fields: Prisma.InventoryUsageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryUsageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryUsageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>
          }
          findFirst: {
            args: Prisma.InventoryUsageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryUsageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>
          }
          findMany: {
            args: Prisma.InventoryUsageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>[]
          }
          create: {
            args: Prisma.InventoryUsageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>
          }
          createMany: {
            args: Prisma.InventoryUsageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryUsageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>[]
          }
          delete: {
            args: Prisma.InventoryUsageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>
          }
          update: {
            args: Prisma.InventoryUsageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>
          }
          deleteMany: {
            args: Prisma.InventoryUsageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryUsageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryUsageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>[]
          }
          upsert: {
            args: Prisma.InventoryUsageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsagePayload>
          }
          aggregate: {
            args: Prisma.InventoryUsageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryUsage>
          }
          groupBy: {
            args: Prisma.InventoryUsageGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryUsageGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryUsageCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryUsageCountAggregateOutputType> | number
          }
        }
      }
      InventoryUsageDetail: {
        payload: Prisma.$InventoryUsageDetailPayload<ExtArgs>
        fields: Prisma.InventoryUsageDetailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryUsageDetailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryUsageDetailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>
          }
          findFirst: {
            args: Prisma.InventoryUsageDetailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryUsageDetailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>
          }
          findMany: {
            args: Prisma.InventoryUsageDetailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>[]
          }
          create: {
            args: Prisma.InventoryUsageDetailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>
          }
          createMany: {
            args: Prisma.InventoryUsageDetailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryUsageDetailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>[]
          }
          delete: {
            args: Prisma.InventoryUsageDetailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>
          }
          update: {
            args: Prisma.InventoryUsageDetailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>
          }
          deleteMany: {
            args: Prisma.InventoryUsageDetailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryUsageDetailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryUsageDetailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>[]
          }
          upsert: {
            args: Prisma.InventoryUsageDetailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryUsageDetailPayload>
          }
          aggregate: {
            args: Prisma.InventoryUsageDetailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryUsageDetail>
          }
          groupBy: {
            args: Prisma.InventoryUsageDetailGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryUsageDetailGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryUsageDetailCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryUsageDetailCountAggregateOutputType> | number
          }
        }
      }
      Movement: {
        payload: Prisma.$MovementPayload<ExtArgs>
        fields: Prisma.MovementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MovementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MovementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>
          }
          findFirst: {
            args: Prisma.MovementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MovementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>
          }
          findMany: {
            args: Prisma.MovementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>[]
          }
          create: {
            args: Prisma.MovementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>
          }
          createMany: {
            args: Prisma.MovementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MovementCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>[]
          }
          delete: {
            args: Prisma.MovementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>
          }
          update: {
            args: Prisma.MovementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>
          }
          deleteMany: {
            args: Prisma.MovementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MovementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MovementUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>[]
          }
          upsert: {
            args: Prisma.MovementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovementPayload>
          }
          aggregate: {
            args: Prisma.MovementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovement>
          }
          groupBy: {
            args: Prisma.MovementGroupByArgs<ExtArgs>
            result: $Utils.Optional<MovementGroupByOutputType>[]
          }
          count: {
            args: Prisma.MovementCountArgs<ExtArgs>
            result: $Utils.Optional<MovementCountAggregateOutputType> | number
          }
        }
      }
      StockBySede: {
        payload: Prisma.$StockBySedePayload<ExtArgs>
        fields: Prisma.StockBySedeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockBySedeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockBySedeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>
          }
          findFirst: {
            args: Prisma.StockBySedeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockBySedeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>
          }
          findMany: {
            args: Prisma.StockBySedeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>[]
          }
          create: {
            args: Prisma.StockBySedeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>
          }
          createMany: {
            args: Prisma.StockBySedeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StockBySedeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>[]
          }
          delete: {
            args: Prisma.StockBySedeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>
          }
          update: {
            args: Prisma.StockBySedeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>
          }
          deleteMany: {
            args: Prisma.StockBySedeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockBySedeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StockBySedeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>[]
          }
          upsert: {
            args: Prisma.StockBySedeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBySedePayload>
          }
          aggregate: {
            args: Prisma.StockBySedeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockBySede>
          }
          groupBy: {
            args: Prisma.StockBySedeGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockBySedeGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockBySedeCountArgs<ExtArgs>
            result: $Utils.Optional<StockBySedeCountAggregateOutputType> | number
          }
        }
      }
      ProductExpiration: {
        payload: Prisma.$ProductExpirationPayload<ExtArgs>
        fields: Prisma.ProductExpirationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductExpirationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductExpirationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>
          }
          findFirst: {
            args: Prisma.ProductExpirationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductExpirationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>
          }
          findMany: {
            args: Prisma.ProductExpirationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>[]
          }
          create: {
            args: Prisma.ProductExpirationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>
          }
          createMany: {
            args: Prisma.ProductExpirationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductExpirationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>[]
          }
          delete: {
            args: Prisma.ProductExpirationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>
          }
          update: {
            args: Prisma.ProductExpirationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>
          }
          deleteMany: {
            args: Prisma.ProductExpirationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductExpirationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductExpirationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>[]
          }
          upsert: {
            args: Prisma.ProductExpirationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductExpirationPayload>
          }
          aggregate: {
            args: Prisma.ProductExpirationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductExpiration>
          }
          groupBy: {
            args: Prisma.ProductExpirationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductExpirationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductExpirationCountArgs<ExtArgs>
            result: $Utils.Optional<ProductExpirationCountAggregateOutputType> | number
          }
        }
      }
      Allergen: {
        payload: Prisma.$AllergenPayload<ExtArgs>
        fields: Prisma.AllergenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AllergenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AllergenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>
          }
          findFirst: {
            args: Prisma.AllergenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AllergenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>
          }
          findMany: {
            args: Prisma.AllergenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>[]
          }
          create: {
            args: Prisma.AllergenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>
          }
          createMany: {
            args: Prisma.AllergenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AllergenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>[]
          }
          delete: {
            args: Prisma.AllergenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>
          }
          update: {
            args: Prisma.AllergenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>
          }
          deleteMany: {
            args: Prisma.AllergenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AllergenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AllergenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>[]
          }
          upsert: {
            args: Prisma.AllergenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AllergenPayload>
          }
          aggregate: {
            args: Prisma.AllergenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAllergen>
          }
          groupBy: {
            args: Prisma.AllergenGroupByArgs<ExtArgs>
            result: $Utils.Optional<AllergenGroupByOutputType>[]
          }
          count: {
            args: Prisma.AllergenCountArgs<ExtArgs>
            result: $Utils.Optional<AllergenCountAggregateOutputType> | number
          }
        }
      }
      ProductAllergen: {
        payload: Prisma.$ProductAllergenPayload<ExtArgs>
        fields: Prisma.ProductAllergenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductAllergenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductAllergenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>
          }
          findFirst: {
            args: Prisma.ProductAllergenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductAllergenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>
          }
          findMany: {
            args: Prisma.ProductAllergenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>[]
          }
          create: {
            args: Prisma.ProductAllergenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>
          }
          createMany: {
            args: Prisma.ProductAllergenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductAllergenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>[]
          }
          delete: {
            args: Prisma.ProductAllergenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>
          }
          update: {
            args: Prisma.ProductAllergenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>
          }
          deleteMany: {
            args: Prisma.ProductAllergenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductAllergenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductAllergenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>[]
          }
          upsert: {
            args: Prisma.ProductAllergenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAllergenPayload>
          }
          aggregate: {
            args: Prisma.ProductAllergenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductAllergen>
          }
          groupBy: {
            args: Prisma.ProductAllergenGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductAllergenGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductAllergenCountArgs<ExtArgs>
            result: $Utils.Optional<ProductAllergenCountAggregateOutputType> | number
          }
        }
      }
      Supplier: {
        payload: Prisma.$SupplierPayload<ExtArgs>
        fields: Prisma.SupplierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          findFirst: {
            args: Prisma.SupplierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          findMany: {
            args: Prisma.SupplierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>[]
          }
          create: {
            args: Prisma.SupplierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          createMany: {
            args: Prisma.SupplierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplierCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>[]
          }
          delete: {
            args: Prisma.SupplierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          update: {
            args: Prisma.SupplierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          deleteMany: {
            args: Prisma.SupplierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplierUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>[]
          }
          upsert: {
            args: Prisma.SupplierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          aggregate: {
            args: Prisma.SupplierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplier>
          }
          groupBy: {
            args: Prisma.SupplierGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplierGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplierCountArgs<ExtArgs>
            result: $Utils.Optional<SupplierCountAggregateOutputType> | number
          }
        }
      }
      whatsapp_config: {
        payload: Prisma.$whatsapp_configPayload<ExtArgs>
        fields: Prisma.whatsapp_configFieldRefs
        operations: {
          findUnique: {
            args: Prisma.whatsapp_configFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.whatsapp_configFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>
          }
          findFirst: {
            args: Prisma.whatsapp_configFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.whatsapp_configFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>
          }
          findMany: {
            args: Prisma.whatsapp_configFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>[]
          }
          create: {
            args: Prisma.whatsapp_configCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>
          }
          createMany: {
            args: Prisma.whatsapp_configCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.whatsapp_configCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>[]
          }
          delete: {
            args: Prisma.whatsapp_configDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>
          }
          update: {
            args: Prisma.whatsapp_configUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>
          }
          deleteMany: {
            args: Prisma.whatsapp_configDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.whatsapp_configUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.whatsapp_configUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>[]
          }
          upsert: {
            args: Prisma.whatsapp_configUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_configPayload>
          }
          aggregate: {
            args: Prisma.Whatsapp_configAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWhatsapp_config>
          }
          groupBy: {
            args: Prisma.whatsapp_configGroupByArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_configGroupByOutputType>[]
          }
          count: {
            args: Prisma.whatsapp_configCountArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_configCountAggregateOutputType> | number
          }
        }
      }
      whatsapp_templates: {
        payload: Prisma.$whatsapp_templatesPayload<ExtArgs>
        fields: Prisma.whatsapp_templatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.whatsapp_templatesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.whatsapp_templatesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>
          }
          findFirst: {
            args: Prisma.whatsapp_templatesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.whatsapp_templatesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>
          }
          findMany: {
            args: Prisma.whatsapp_templatesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>[]
          }
          create: {
            args: Prisma.whatsapp_templatesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>
          }
          createMany: {
            args: Prisma.whatsapp_templatesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.whatsapp_templatesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>[]
          }
          delete: {
            args: Prisma.whatsapp_templatesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>
          }
          update: {
            args: Prisma.whatsapp_templatesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>
          }
          deleteMany: {
            args: Prisma.whatsapp_templatesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.whatsapp_templatesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.whatsapp_templatesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>[]
          }
          upsert: {
            args: Prisma.whatsapp_templatesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_templatesPayload>
          }
          aggregate: {
            args: Prisma.Whatsapp_templatesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWhatsapp_templates>
          }
          groupBy: {
            args: Prisma.whatsapp_templatesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_templatesGroupByOutputType>[]
          }
          count: {
            args: Prisma.whatsapp_templatesCountArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_templatesCountAggregateOutputType> | number
          }
        }
      }
      whatsapp_messages: {
        payload: Prisma.$whatsapp_messagesPayload<ExtArgs>
        fields: Prisma.whatsapp_messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.whatsapp_messagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.whatsapp_messagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>
          }
          findFirst: {
            args: Prisma.whatsapp_messagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.whatsapp_messagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>
          }
          findMany: {
            args: Prisma.whatsapp_messagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>[]
          }
          create: {
            args: Prisma.whatsapp_messagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>
          }
          createMany: {
            args: Prisma.whatsapp_messagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.whatsapp_messagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>[]
          }
          delete: {
            args: Prisma.whatsapp_messagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>
          }
          update: {
            args: Prisma.whatsapp_messagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>
          }
          deleteMany: {
            args: Prisma.whatsapp_messagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.whatsapp_messagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.whatsapp_messagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>[]
          }
          upsert: {
            args: Prisma.whatsapp_messagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_messagesPayload>
          }
          aggregate: {
            args: Prisma.Whatsapp_messagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWhatsapp_messages>
          }
          groupBy: {
            args: Prisma.whatsapp_messagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_messagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.whatsapp_messagesCountArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_messagesCountAggregateOutputType> | number
          }
        }
      }
      whatsapp_reminders: {
        payload: Prisma.$whatsapp_remindersPayload<ExtArgs>
        fields: Prisma.whatsapp_remindersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.whatsapp_remindersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.whatsapp_remindersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>
          }
          findFirst: {
            args: Prisma.whatsapp_remindersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.whatsapp_remindersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>
          }
          findMany: {
            args: Prisma.whatsapp_remindersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>[]
          }
          create: {
            args: Prisma.whatsapp_remindersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>
          }
          createMany: {
            args: Prisma.whatsapp_remindersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.whatsapp_remindersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>[]
          }
          delete: {
            args: Prisma.whatsapp_remindersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>
          }
          update: {
            args: Prisma.whatsapp_remindersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>
          }
          deleteMany: {
            args: Prisma.whatsapp_remindersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.whatsapp_remindersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.whatsapp_remindersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>[]
          }
          upsert: {
            args: Prisma.whatsapp_remindersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsapp_remindersPayload>
          }
          aggregate: {
            args: Prisma.Whatsapp_remindersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWhatsapp_reminders>
          }
          groupBy: {
            args: Prisma.whatsapp_remindersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_remindersGroupByOutputType>[]
          }
          count: {
            args: Prisma.whatsapp_remindersCountArgs<ExtArgs>
            result: $Utils.Optional<Whatsapp_remindersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    organizaciones?: organizacionesOmit
    usuarios?: usuariosOmit
    pacientes?: pacientesOmit
    consultorios?: consultoriosOmit
    cobros?: cobrosOmit
    cobro_conceptos?: cobro_conceptosOmit
    historial_cobros?: historial_cobrosOmit
    metodos_pago_cobro?: metodos_pago_cobroOmit
    servicios?: serviciosOmit
    precios_consultorio?: precios_consultorioOmit
    configuracion_permisos?: configuracion_permisosOmit
    citas?: citasOmit
    disponibilidad_medico?: disponibilidad_medicoOmit
    bloqueo_medico?: bloqueo_medicoOmit
    product?: ProductOmit
    sede?: SedeOmit
    user?: UserOmit
    inventoryUsage?: InventoryUsageOmit
    inventoryUsageDetail?: InventoryUsageDetailOmit
    movement?: MovementOmit
    stockBySede?: StockBySedeOmit
    productExpiration?: ProductExpirationOmit
    allergen?: AllergenOmit
    productAllergen?: ProductAllergenOmit
    supplier?: SupplierOmit
    whatsapp_config?: whatsapp_configOmit
    whatsapp_templates?: whatsapp_templatesOmit
    whatsapp_messages?: whatsapp_messagesOmit
    whatsapp_reminders?: whatsapp_remindersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type OrganizacionesCountOutputType
   */

  export type OrganizacionesCountOutputType = {
    consultorios: number
    pacientes: number
    servicios: number
    usuarios: number
  }

  export type OrganizacionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | OrganizacionesCountOutputTypeCountConsultoriosArgs
    pacientes?: boolean | OrganizacionesCountOutputTypeCountPacientesArgs
    servicios?: boolean | OrganizacionesCountOutputTypeCountServiciosArgs
    usuarios?: boolean | OrganizacionesCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * OrganizacionesCountOutputType without action
   */
  export type OrganizacionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizacionesCountOutputType
     */
    select?: OrganizacionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrganizacionesCountOutputType without action
   */
  export type OrganizacionesCountOutputTypeCountConsultoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: consultoriosWhereInput
  }

  /**
   * OrganizacionesCountOutputType without action
   */
  export type OrganizacionesCountOutputTypeCountPacientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pacientesWhereInput
  }

  /**
   * OrganizacionesCountOutputType without action
   */
  export type OrganizacionesCountOutputTypeCountServiciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviciosWhereInput
  }

  /**
   * OrganizacionesCountOutputType without action
   */
  export type OrganizacionesCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
  }


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    citas: number
    cobros: number
    disponibilidad_medico: number
    historial_cobros: number
    whatsapp_messages: number
    whatsapp_reminders: number
    whatsapp_templates: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | UsuariosCountOutputTypeCountCitasArgs
    cobros?: boolean | UsuariosCountOutputTypeCountCobrosArgs
    disponibilidad_medico?: boolean | UsuariosCountOutputTypeCountDisponibilidad_medicoArgs
    historial_cobros?: boolean | UsuariosCountOutputTypeCountHistorial_cobrosArgs
    whatsapp_messages?: boolean | UsuariosCountOutputTypeCountWhatsapp_messagesArgs
    whatsapp_reminders?: boolean | UsuariosCountOutputTypeCountWhatsapp_remindersArgs
    whatsapp_templates?: boolean | UsuariosCountOutputTypeCountWhatsapp_templatesArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountCobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobrosWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountDisponibilidad_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disponibilidad_medicoWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountHistorial_cobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_cobrosWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountWhatsapp_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_messagesWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountWhatsapp_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_remindersWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountWhatsapp_templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_templatesWhereInput
  }


  /**
   * Count Type PacientesCountOutputType
   */

  export type PacientesCountOutputType = {
    InventoryUsage: number
    citas: number
    cobros: number
    whatsapp_messages: number
  }

  export type PacientesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsage?: boolean | PacientesCountOutputTypeCountInventoryUsageArgs
    citas?: boolean | PacientesCountOutputTypeCountCitasArgs
    cobros?: boolean | PacientesCountOutputTypeCountCobrosArgs
    whatsapp_messages?: boolean | PacientesCountOutputTypeCountWhatsapp_messagesArgs
  }

  // Custom InputTypes
  /**
   * PacientesCountOutputType without action
   */
  export type PacientesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PacientesCountOutputType
     */
    select?: PacientesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PacientesCountOutputType without action
   */
  export type PacientesCountOutputTypeCountInventoryUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageWhereInput
  }

  /**
   * PacientesCountOutputType without action
   */
  export type PacientesCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
  }

  /**
   * PacientesCountOutputType without action
   */
  export type PacientesCountOutputTypeCountCobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobrosWhereInput
  }

  /**
   * PacientesCountOutputType without action
   */
  export type PacientesCountOutputTypeCountWhatsapp_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_messagesWhereInput
  }


  /**
   * Count Type ConsultoriosCountOutputType
   */

  export type ConsultoriosCountOutputType = {
    citas: number
    cobro_conceptos: number
    precios_consultorio: number
    usuarios: number
  }

  export type ConsultoriosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | ConsultoriosCountOutputTypeCountCitasArgs
    cobro_conceptos?: boolean | ConsultoriosCountOutputTypeCountCobro_conceptosArgs
    precios_consultorio?: boolean | ConsultoriosCountOutputTypeCountPrecios_consultorioArgs
    usuarios?: boolean | ConsultoriosCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * ConsultoriosCountOutputType without action
   */
  export type ConsultoriosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultoriosCountOutputType
     */
    select?: ConsultoriosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConsultoriosCountOutputType without action
   */
  export type ConsultoriosCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
  }

  /**
   * ConsultoriosCountOutputType without action
   */
  export type ConsultoriosCountOutputTypeCountCobro_conceptosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobro_conceptosWhereInput
  }

  /**
   * ConsultoriosCountOutputType without action
   */
  export type ConsultoriosCountOutputTypeCountPrecios_consultorioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: precios_consultorioWhereInput
  }

  /**
   * ConsultoriosCountOutputType without action
   */
  export type ConsultoriosCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
  }


  /**
   * Count Type CobrosCountOutputType
   */

  export type CobrosCountOutputType = {
    cobro_conceptos: number
    historial_cobros: number
    metodos_pago_cobro: number
  }

  export type CobrosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobro_conceptos?: boolean | CobrosCountOutputTypeCountCobro_conceptosArgs
    historial_cobros?: boolean | CobrosCountOutputTypeCountHistorial_cobrosArgs
    metodos_pago_cobro?: boolean | CobrosCountOutputTypeCountMetodos_pago_cobroArgs
  }

  // Custom InputTypes
  /**
   * CobrosCountOutputType without action
   */
  export type CobrosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobrosCountOutputType
     */
    select?: CobrosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CobrosCountOutputType without action
   */
  export type CobrosCountOutputTypeCountCobro_conceptosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobro_conceptosWhereInput
  }

  /**
   * CobrosCountOutputType without action
   */
  export type CobrosCountOutputTypeCountHistorial_cobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_cobrosWhereInput
  }

  /**
   * CobrosCountOutputType without action
   */
  export type CobrosCountOutputTypeCountMetodos_pago_cobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: metodos_pago_cobroWhereInput
  }


  /**
   * Count Type ServiciosCountOutputType
   */

  export type ServiciosCountOutputType = {
    cobro_conceptos: number
  }

  export type ServiciosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobro_conceptos?: boolean | ServiciosCountOutputTypeCountCobro_conceptosArgs
  }

  // Custom InputTypes
  /**
   * ServiciosCountOutputType without action
   */
  export type ServiciosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiciosCountOutputType
     */
    select?: ServiciosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServiciosCountOutputType without action
   */
  export type ServiciosCountOutputTypeCountCobro_conceptosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobro_conceptosWhereInput
  }


  /**
   * Count Type CitasCountOutputType
   */

  export type CitasCountOutputType = {
    whatsapp_messages: number
    whatsapp_reminders: number
  }

  export type CitasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    whatsapp_messages?: boolean | CitasCountOutputTypeCountWhatsapp_messagesArgs
    whatsapp_reminders?: boolean | CitasCountOutputTypeCountWhatsapp_remindersArgs
  }

  // Custom InputTypes
  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CitasCountOutputType
     */
    select?: CitasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeCountWhatsapp_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_messagesWhereInput
  }

  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeCountWhatsapp_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_remindersWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    InventoryUsageDetail: number
    Movement: number
    ProductAllergen: number
    ProductExpiration: number
    StockBySede: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsageDetail?: boolean | ProductCountOutputTypeCountInventoryUsageDetailArgs
    Movement?: boolean | ProductCountOutputTypeCountMovementArgs
    ProductAllergen?: boolean | ProductCountOutputTypeCountProductAllergenArgs
    ProductExpiration?: boolean | ProductCountOutputTypeCountProductExpirationArgs
    StockBySede?: boolean | ProductCountOutputTypeCountStockBySedeArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountInventoryUsageDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageDetailWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountMovementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovementWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductAllergenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAllergenWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductExpirationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductExpirationWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountStockBySedeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBySedeWhereInput
  }


  /**
   * Count Type SedeCountOutputType
   */

  export type SedeCountOutputType = {
    InventoryUsage: number
    Movement: number
    ProductExpiration: number
    StockBySede: number
    User: number
  }

  export type SedeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsage?: boolean | SedeCountOutputTypeCountInventoryUsageArgs
    Movement?: boolean | SedeCountOutputTypeCountMovementArgs
    ProductExpiration?: boolean | SedeCountOutputTypeCountProductExpirationArgs
    StockBySede?: boolean | SedeCountOutputTypeCountStockBySedeArgs
    User?: boolean | SedeCountOutputTypeCountUserArgs
  }

  // Custom InputTypes
  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SedeCountOutputType
     */
    select?: SedeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountInventoryUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountMovementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovementWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountProductExpirationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductExpirationWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountStockBySedeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBySedeWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    InventoryUsage: number
    Movement: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsage?: boolean | UserCountOutputTypeCountInventoryUsageArgs
    Movement?: boolean | UserCountOutputTypeCountMovementArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInventoryUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMovementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovementWhereInput
  }


  /**
   * Count Type InventoryUsageCountOutputType
   */

  export type InventoryUsageCountOutputType = {
    details: number
  }

  export type InventoryUsageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    details?: boolean | InventoryUsageCountOutputTypeCountDetailsArgs
  }

  // Custom InputTypes
  /**
   * InventoryUsageCountOutputType without action
   */
  export type InventoryUsageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageCountOutputType
     */
    select?: InventoryUsageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InventoryUsageCountOutputType without action
   */
  export type InventoryUsageCountOutputTypeCountDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageDetailWhereInput
  }


  /**
   * Count Type MovementCountOutputType
   */

  export type MovementCountOutputType = {
    InventoryUsageDetail: number
  }

  export type MovementCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsageDetail?: boolean | MovementCountOutputTypeCountInventoryUsageDetailArgs
  }

  // Custom InputTypes
  /**
   * MovementCountOutputType without action
   */
  export type MovementCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovementCountOutputType
     */
    select?: MovementCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MovementCountOutputType without action
   */
  export type MovementCountOutputTypeCountInventoryUsageDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageDetailWhereInput
  }


  /**
   * Count Type AllergenCountOutputType
   */

  export type AllergenCountOutputType = {
    ProductAllergen: number
  }

  export type AllergenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAllergen?: boolean | AllergenCountOutputTypeCountProductAllergenArgs
  }

  // Custom InputTypes
  /**
   * AllergenCountOutputType without action
   */
  export type AllergenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AllergenCountOutputType
     */
    select?: AllergenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AllergenCountOutputType without action
   */
  export type AllergenCountOutputTypeCountProductAllergenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAllergenWhereInput
  }


  /**
   * Models
   */

  /**
   * Model organizaciones
   */

  export type AggregateOrganizaciones = {
    _count: OrganizacionesCountAggregateOutputType | null
    _min: OrganizacionesMinAggregateOutputType | null
    _max: OrganizacionesMaxAggregateOutputType | null
  }

  export type OrganizacionesMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    ruc: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
    logo_url: string | null
    color_primario: string | null
    color_secundario: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OrganizacionesMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    ruc: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
    logo_url: string | null
    color_primario: string | null
    color_secundario: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OrganizacionesCountAggregateOutputType = {
    id: number
    nombre: number
    ruc: number
    direccion: number
    telefono: number
    email: number
    logo_url: number
    color_primario: number
    color_secundario: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type OrganizacionesMinAggregateInputType = {
    id?: true
    nombre?: true
    ruc?: true
    direccion?: true
    telefono?: true
    email?: true
    logo_url?: true
    color_primario?: true
    color_secundario?: true
    created_at?: true
    updated_at?: true
  }

  export type OrganizacionesMaxAggregateInputType = {
    id?: true
    nombre?: true
    ruc?: true
    direccion?: true
    telefono?: true
    email?: true
    logo_url?: true
    color_primario?: true
    color_secundario?: true
    created_at?: true
    updated_at?: true
  }

  export type OrganizacionesCountAggregateInputType = {
    id?: true
    nombre?: true
    ruc?: true
    direccion?: true
    telefono?: true
    email?: true
    logo_url?: true
    color_primario?: true
    color_secundario?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type OrganizacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which organizaciones to aggregate.
     */
    where?: organizacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizaciones to fetch.
     */
    orderBy?: organizacionesOrderByWithRelationInput | organizacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: organizacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned organizaciones
    **/
    _count?: true | OrganizacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizacionesMaxAggregateInputType
  }

  export type GetOrganizacionesAggregateType<T extends OrganizacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganizaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganizaciones[P]>
      : GetScalarType<T[P], AggregateOrganizaciones[P]>
  }




  export type organizacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: organizacionesWhereInput
    orderBy?: organizacionesOrderByWithAggregationInput | organizacionesOrderByWithAggregationInput[]
    by: OrganizacionesScalarFieldEnum[] | OrganizacionesScalarFieldEnum
    having?: organizacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizacionesCountAggregateInputType | true
    _min?: OrganizacionesMinAggregateInputType
    _max?: OrganizacionesMaxAggregateInputType
  }

  export type OrganizacionesGroupByOutputType = {
    id: string
    nombre: string
    ruc: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
    logo_url: string | null
    color_primario: string | null
    color_secundario: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: OrganizacionesCountAggregateOutputType | null
    _min: OrganizacionesMinAggregateOutputType | null
    _max: OrganizacionesMaxAggregateOutputType | null
  }

  type GetOrganizacionesGroupByPayload<T extends organizacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizacionesGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizacionesGroupByOutputType[P]>
        }
      >
    >


  export type organizacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    logo_url?: boolean
    color_primario?: boolean
    color_secundario?: boolean
    created_at?: boolean
    updated_at?: boolean
    consultorios?: boolean | organizaciones$consultoriosArgs<ExtArgs>
    pacientes?: boolean | organizaciones$pacientesArgs<ExtArgs>
    servicios?: boolean | organizaciones$serviciosArgs<ExtArgs>
    usuarios?: boolean | organizaciones$usuariosArgs<ExtArgs>
    _count?: boolean | OrganizacionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizaciones"]>

  export type organizacionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    logo_url?: boolean
    color_primario?: boolean
    color_secundario?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["organizaciones"]>

  export type organizacionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    logo_url?: boolean
    color_primario?: boolean
    color_secundario?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["organizaciones"]>

  export type organizacionesSelectScalar = {
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    logo_url?: boolean
    color_primario?: boolean
    color_secundario?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type organizacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "ruc" | "direccion" | "telefono" | "email" | "logo_url" | "color_primario" | "color_secundario" | "created_at" | "updated_at", ExtArgs["result"]["organizaciones"]>
  export type organizacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | organizaciones$consultoriosArgs<ExtArgs>
    pacientes?: boolean | organizaciones$pacientesArgs<ExtArgs>
    servicios?: boolean | organizaciones$serviciosArgs<ExtArgs>
    usuarios?: boolean | organizaciones$usuariosArgs<ExtArgs>
    _count?: boolean | OrganizacionesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type organizacionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type organizacionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $organizacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "organizaciones"
    objects: {
      consultorios: Prisma.$consultoriosPayload<ExtArgs>[]
      pacientes: Prisma.$pacientesPayload<ExtArgs>[]
      servicios: Prisma.$serviciosPayload<ExtArgs>[]
      usuarios: Prisma.$usuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
      ruc: string | null
      direccion: string | null
      telefono: string | null
      email: string | null
      logo_url: string | null
      color_primario: string | null
      color_secundario: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["organizaciones"]>
    composites: {}
  }

  type organizacionesGetPayload<S extends boolean | null | undefined | organizacionesDefaultArgs> = $Result.GetResult<Prisma.$organizacionesPayload, S>

  type organizacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<organizacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrganizacionesCountAggregateInputType | true
    }

  export interface organizacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['organizaciones'], meta: { name: 'organizaciones' } }
    /**
     * Find zero or one Organizaciones that matches the filter.
     * @param {organizacionesFindUniqueArgs} args - Arguments to find a Organizaciones
     * @example
     * // Get one Organizaciones
     * const organizaciones = await prisma.organizaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends organizacionesFindUniqueArgs>(args: SelectSubset<T, organizacionesFindUniqueArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Organizaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {organizacionesFindUniqueOrThrowArgs} args - Arguments to find a Organizaciones
     * @example
     * // Get one Organizaciones
     * const organizaciones = await prisma.organizaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends organizacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, organizacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organizaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizacionesFindFirstArgs} args - Arguments to find a Organizaciones
     * @example
     * // Get one Organizaciones
     * const organizaciones = await prisma.organizaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends organizacionesFindFirstArgs>(args?: SelectSubset<T, organizacionesFindFirstArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organizaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizacionesFindFirstOrThrowArgs} args - Arguments to find a Organizaciones
     * @example
     * // Get one Organizaciones
     * const organizaciones = await prisma.organizaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends organizacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, organizacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Organizaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organizaciones
     * const organizaciones = await prisma.organizaciones.findMany()
     * 
     * // Get first 10 Organizaciones
     * const organizaciones = await prisma.organizaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizacionesWithIdOnly = await prisma.organizaciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends organizacionesFindManyArgs>(args?: SelectSubset<T, organizacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Organizaciones.
     * @param {organizacionesCreateArgs} args - Arguments to create a Organizaciones.
     * @example
     * // Create one Organizaciones
     * const Organizaciones = await prisma.organizaciones.create({
     *   data: {
     *     // ... data to create a Organizaciones
     *   }
     * })
     * 
     */
    create<T extends organizacionesCreateArgs>(args: SelectSubset<T, organizacionesCreateArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Organizaciones.
     * @param {organizacionesCreateManyArgs} args - Arguments to create many Organizaciones.
     * @example
     * // Create many Organizaciones
     * const organizaciones = await prisma.organizaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends organizacionesCreateManyArgs>(args?: SelectSubset<T, organizacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Organizaciones and returns the data saved in the database.
     * @param {organizacionesCreateManyAndReturnArgs} args - Arguments to create many Organizaciones.
     * @example
     * // Create many Organizaciones
     * const organizaciones = await prisma.organizaciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Organizaciones and only return the `id`
     * const organizacionesWithIdOnly = await prisma.organizaciones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends organizacionesCreateManyAndReturnArgs>(args?: SelectSubset<T, organizacionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Organizaciones.
     * @param {organizacionesDeleteArgs} args - Arguments to delete one Organizaciones.
     * @example
     * // Delete one Organizaciones
     * const Organizaciones = await prisma.organizaciones.delete({
     *   where: {
     *     // ... filter to delete one Organizaciones
     *   }
     * })
     * 
     */
    delete<T extends organizacionesDeleteArgs>(args: SelectSubset<T, organizacionesDeleteArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Organizaciones.
     * @param {organizacionesUpdateArgs} args - Arguments to update one Organizaciones.
     * @example
     * // Update one Organizaciones
     * const organizaciones = await prisma.organizaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends organizacionesUpdateArgs>(args: SelectSubset<T, organizacionesUpdateArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Organizaciones.
     * @param {organizacionesDeleteManyArgs} args - Arguments to filter Organizaciones to delete.
     * @example
     * // Delete a few Organizaciones
     * const { count } = await prisma.organizaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends organizacionesDeleteManyArgs>(args?: SelectSubset<T, organizacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organizaciones
     * const organizaciones = await prisma.organizaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends organizacionesUpdateManyArgs>(args: SelectSubset<T, organizacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizaciones and returns the data updated in the database.
     * @param {organizacionesUpdateManyAndReturnArgs} args - Arguments to update many Organizaciones.
     * @example
     * // Update many Organizaciones
     * const organizaciones = await prisma.organizaciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Organizaciones and only return the `id`
     * const organizacionesWithIdOnly = await prisma.organizaciones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends organizacionesUpdateManyAndReturnArgs>(args: SelectSubset<T, organizacionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Organizaciones.
     * @param {organizacionesUpsertArgs} args - Arguments to update or create a Organizaciones.
     * @example
     * // Update or create a Organizaciones
     * const organizaciones = await prisma.organizaciones.upsert({
     *   create: {
     *     // ... data to create a Organizaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organizaciones we want to update
     *   }
     * })
     */
    upsert<T extends organizacionesUpsertArgs>(args: SelectSubset<T, organizacionesUpsertArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Organizaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizacionesCountArgs} args - Arguments to filter Organizaciones to count.
     * @example
     * // Count the number of Organizaciones
     * const count = await prisma.organizaciones.count({
     *   where: {
     *     // ... the filter for the Organizaciones we want to count
     *   }
     * })
    **/
    count<T extends organizacionesCountArgs>(
      args?: Subset<T, organizacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organizaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizacionesAggregateArgs>(args: Subset<T, OrganizacionesAggregateArgs>): Prisma.PrismaPromise<GetOrganizacionesAggregateType<T>>

    /**
     * Group by Organizaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends organizacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: organizacionesGroupByArgs['orderBy'] }
        : { orderBy?: organizacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, organizacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the organizaciones model
   */
  readonly fields: organizacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for organizaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__organizacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    consultorios<T extends organizaciones$consultoriosArgs<ExtArgs> = {}>(args?: Subset<T, organizaciones$consultoriosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pacientes<T extends organizaciones$pacientesArgs<ExtArgs> = {}>(args?: Subset<T, organizaciones$pacientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    servicios<T extends organizaciones$serviciosArgs<ExtArgs> = {}>(args?: Subset<T, organizaciones$serviciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends organizaciones$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, organizaciones$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the organizaciones model
   */
  interface organizacionesFieldRefs {
    readonly id: FieldRef<"organizaciones", 'String'>
    readonly nombre: FieldRef<"organizaciones", 'String'>
    readonly ruc: FieldRef<"organizaciones", 'String'>
    readonly direccion: FieldRef<"organizaciones", 'String'>
    readonly telefono: FieldRef<"organizaciones", 'String'>
    readonly email: FieldRef<"organizaciones", 'String'>
    readonly logo_url: FieldRef<"organizaciones", 'String'>
    readonly color_primario: FieldRef<"organizaciones", 'String'>
    readonly color_secundario: FieldRef<"organizaciones", 'String'>
    readonly created_at: FieldRef<"organizaciones", 'DateTime'>
    readonly updated_at: FieldRef<"organizaciones", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * organizaciones findUnique
   */
  export type organizacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * Filter, which organizaciones to fetch.
     */
    where: organizacionesWhereUniqueInput
  }

  /**
   * organizaciones findUniqueOrThrow
   */
  export type organizacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * Filter, which organizaciones to fetch.
     */
    where: organizacionesWhereUniqueInput
  }

  /**
   * organizaciones findFirst
   */
  export type organizacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * Filter, which organizaciones to fetch.
     */
    where?: organizacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizaciones to fetch.
     */
    orderBy?: organizacionesOrderByWithRelationInput | organizacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for organizaciones.
     */
    cursor?: organizacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of organizaciones.
     */
    distinct?: OrganizacionesScalarFieldEnum | OrganizacionesScalarFieldEnum[]
  }

  /**
   * organizaciones findFirstOrThrow
   */
  export type organizacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * Filter, which organizaciones to fetch.
     */
    where?: organizacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizaciones to fetch.
     */
    orderBy?: organizacionesOrderByWithRelationInput | organizacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for organizaciones.
     */
    cursor?: organizacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of organizaciones.
     */
    distinct?: OrganizacionesScalarFieldEnum | OrganizacionesScalarFieldEnum[]
  }

  /**
   * organizaciones findMany
   */
  export type organizacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * Filter, which organizaciones to fetch.
     */
    where?: organizacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizaciones to fetch.
     */
    orderBy?: organizacionesOrderByWithRelationInput | organizacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing organizaciones.
     */
    cursor?: organizacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizaciones.
     */
    skip?: number
    distinct?: OrganizacionesScalarFieldEnum | OrganizacionesScalarFieldEnum[]
  }

  /**
   * organizaciones create
   */
  export type organizacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a organizaciones.
     */
    data: XOR<organizacionesCreateInput, organizacionesUncheckedCreateInput>
  }

  /**
   * organizaciones createMany
   */
  export type organizacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many organizaciones.
     */
    data: organizacionesCreateManyInput | organizacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * organizaciones createManyAndReturn
   */
  export type organizacionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * The data used to create many organizaciones.
     */
    data: organizacionesCreateManyInput | organizacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * organizaciones update
   */
  export type organizacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a organizaciones.
     */
    data: XOR<organizacionesUpdateInput, organizacionesUncheckedUpdateInput>
    /**
     * Choose, which organizaciones to update.
     */
    where: organizacionesWhereUniqueInput
  }

  /**
   * organizaciones updateMany
   */
  export type organizacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update organizaciones.
     */
    data: XOR<organizacionesUpdateManyMutationInput, organizacionesUncheckedUpdateManyInput>
    /**
     * Filter which organizaciones to update
     */
    where?: organizacionesWhereInput
    /**
     * Limit how many organizaciones to update.
     */
    limit?: number
  }

  /**
   * organizaciones updateManyAndReturn
   */
  export type organizacionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * The data used to update organizaciones.
     */
    data: XOR<organizacionesUpdateManyMutationInput, organizacionesUncheckedUpdateManyInput>
    /**
     * Filter which organizaciones to update
     */
    where?: organizacionesWhereInput
    /**
     * Limit how many organizaciones to update.
     */
    limit?: number
  }

  /**
   * organizaciones upsert
   */
  export type organizacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the organizaciones to update in case it exists.
     */
    where: organizacionesWhereUniqueInput
    /**
     * In case the organizaciones found by the `where` argument doesn't exist, create a new organizaciones with this data.
     */
    create: XOR<organizacionesCreateInput, organizacionesUncheckedCreateInput>
    /**
     * In case the organizaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<organizacionesUpdateInput, organizacionesUncheckedUpdateInput>
  }

  /**
   * organizaciones delete
   */
  export type organizacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
    /**
     * Filter which organizaciones to delete.
     */
    where: organizacionesWhereUniqueInput
  }

  /**
   * organizaciones deleteMany
   */
  export type organizacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which organizaciones to delete
     */
    where?: organizacionesWhereInput
    /**
     * Limit how many organizaciones to delete.
     */
    limit?: number
  }

  /**
   * organizaciones.consultorios
   */
  export type organizaciones$consultoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    where?: consultoriosWhereInput
    orderBy?: consultoriosOrderByWithRelationInput | consultoriosOrderByWithRelationInput[]
    cursor?: consultoriosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultoriosScalarFieldEnum | ConsultoriosScalarFieldEnum[]
  }

  /**
   * organizaciones.pacientes
   */
  export type organizaciones$pacientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    where?: pacientesWhereInput
    orderBy?: pacientesOrderByWithRelationInput | pacientesOrderByWithRelationInput[]
    cursor?: pacientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PacientesScalarFieldEnum | PacientesScalarFieldEnum[]
  }

  /**
   * organizaciones.servicios
   */
  export type organizaciones$serviciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    where?: serviciosWhereInput
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    cursor?: serviciosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * organizaciones.usuarios
   */
  export type organizaciones$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    cursor?: usuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * organizaciones without action
   */
  export type organizacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizaciones
     */
    select?: organizacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the organizaciones
     */
    omit?: organizacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: organizacionesInclude<ExtArgs> | null
  }


  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    email: string | null
    telefono: string | null
    password: string | null
    created_at: Date | null
    updated_at: Date | null
    rol: $Enums.Rol | null
    apellido: string | null
    consultorio_id: string | null
    googleAccessToken: string | null
    googleRefreshToken: string | null
    googleTokenExpiry: Date | null
    googleCalendarId: string | null
    organizacion_id: string | null
    puede_editar_cobros: boolean | null
    puede_eliminar_cobros: boolean | null
    puede_gestionar_usuarios: boolean | null
    puede_ver_historial: boolean | null
  }

  export type UsuariosMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    email: string | null
    telefono: string | null
    password: string | null
    created_at: Date | null
    updated_at: Date | null
    rol: $Enums.Rol | null
    apellido: string | null
    consultorio_id: string | null
    googleAccessToken: string | null
    googleRefreshToken: string | null
    googleTokenExpiry: Date | null
    googleCalendarId: string | null
    organizacion_id: string | null
    puede_editar_cobros: boolean | null
    puede_eliminar_cobros: boolean | null
    puede_gestionar_usuarios: boolean | null
    puede_ver_historial: boolean | null
  }

  export type UsuariosCountAggregateOutputType = {
    id: number
    nombre: number
    email: number
    telefono: number
    password: number
    created_at: number
    updated_at: number
    rol: number
    apellido: number
    consultorio_id: number
    googleAccessToken: number
    googleRefreshToken: number
    googleTokenExpiry: number
    googleCalendarId: number
    organizacion_id: number
    puede_editar_cobros: number
    puede_eliminar_cobros: number
    puede_gestionar_usuarios: number
    puede_ver_historial: number
    _all: number
  }


  export type UsuariosMinAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    telefono?: true
    password?: true
    created_at?: true
    updated_at?: true
    rol?: true
    apellido?: true
    consultorio_id?: true
    googleAccessToken?: true
    googleRefreshToken?: true
    googleTokenExpiry?: true
    googleCalendarId?: true
    organizacion_id?: true
    puede_editar_cobros?: true
    puede_eliminar_cobros?: true
    puede_gestionar_usuarios?: true
    puede_ver_historial?: true
  }

  export type UsuariosMaxAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    telefono?: true
    password?: true
    created_at?: true
    updated_at?: true
    rol?: true
    apellido?: true
    consultorio_id?: true
    googleAccessToken?: true
    googleRefreshToken?: true
    googleTokenExpiry?: true
    googleCalendarId?: true
    organizacion_id?: true
    puede_editar_cobros?: true
    puede_eliminar_cobros?: true
    puede_gestionar_usuarios?: true
    puede_ver_historial?: true
  }

  export type UsuariosCountAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    telefono?: true
    password?: true
    created_at?: true
    updated_at?: true
    rol?: true
    apellido?: true
    consultorio_id?: true
    googleAccessToken?: true
    googleRefreshToken?: true
    googleTokenExpiry?: true
    googleCalendarId?: true
    organizacion_id?: true
    puede_editar_cobros?: true
    puede_eliminar_cobros?: true
    puede_gestionar_usuarios?: true
    puede_ver_historial?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    id: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at: Date
    updated_at: Date
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken: string | null
    googleRefreshToken: string | null
    googleTokenExpiry: Date | null
    googleCalendarId: string | null
    organizacion_id: string
    puede_editar_cobros: boolean
    puede_eliminar_cobros: boolean
    puede_gestionar_usuarios: boolean
    puede_ver_historial: boolean
    _count: UsuariosCountAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    telefono?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    rol?: boolean
    apellido?: boolean
    consultorio_id?: boolean
    googleAccessToken?: boolean
    googleRefreshToken?: boolean
    googleTokenExpiry?: boolean
    googleCalendarId?: boolean
    organizacion_id?: boolean
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: boolean | usuarios$citasArgs<ExtArgs>
    cobros?: boolean | usuarios$cobrosArgs<ExtArgs>
    disponibilidad_medico?: boolean | usuarios$disponibilidad_medicoArgs<ExtArgs>
    historial_cobros?: boolean | usuarios$historial_cobrosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    whatsapp_config?: boolean | usuarios$whatsapp_configArgs<ExtArgs>
    whatsapp_messages?: boolean | usuarios$whatsapp_messagesArgs<ExtArgs>
    whatsapp_reminders?: boolean | usuarios$whatsapp_remindersArgs<ExtArgs>
    whatsapp_templates?: boolean | usuarios$whatsapp_templatesArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    telefono?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    rol?: boolean
    apellido?: boolean
    consultorio_id?: boolean
    googleAccessToken?: boolean
    googleRefreshToken?: boolean
    googleTokenExpiry?: boolean
    googleCalendarId?: boolean
    organizacion_id?: boolean
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    telefono?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    rol?: boolean
    apellido?: boolean
    consultorio_id?: boolean
    googleAccessToken?: boolean
    googleRefreshToken?: boolean
    googleTokenExpiry?: boolean
    googleCalendarId?: boolean
    organizacion_id?: boolean
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectScalar = {
    id?: boolean
    nombre?: boolean
    email?: boolean
    telefono?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    rol?: boolean
    apellido?: boolean
    consultorio_id?: boolean
    googleAccessToken?: boolean
    googleRefreshToken?: boolean
    googleTokenExpiry?: boolean
    googleCalendarId?: boolean
    organizacion_id?: boolean
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
  }

  export type usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "email" | "telefono" | "password" | "created_at" | "updated_at" | "rol" | "apellido" | "consultorio_id" | "googleAccessToken" | "googleRefreshToken" | "googleTokenExpiry" | "googleCalendarId" | "organizacion_id" | "puede_editar_cobros" | "puede_eliminar_cobros" | "puede_gestionar_usuarios" | "puede_ver_historial", ExtArgs["result"]["usuarios"]>
  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | usuarios$citasArgs<ExtArgs>
    cobros?: boolean | usuarios$cobrosArgs<ExtArgs>
    disponibilidad_medico?: boolean | usuarios$disponibilidad_medicoArgs<ExtArgs>
    historial_cobros?: boolean | usuarios$historial_cobrosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    whatsapp_config?: boolean | usuarios$whatsapp_configArgs<ExtArgs>
    whatsapp_messages?: boolean | usuarios$whatsapp_messagesArgs<ExtArgs>
    whatsapp_reminders?: boolean | usuarios$whatsapp_remindersArgs<ExtArgs>
    whatsapp_templates?: boolean | usuarios$whatsapp_templatesArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }
  export type usuariosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }

  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs>[]
      cobros: Prisma.$cobrosPayload<ExtArgs>[]
      disponibilidad_medico: Prisma.$disponibilidad_medicoPayload<ExtArgs>[]
      historial_cobros: Prisma.$historial_cobrosPayload<ExtArgs>[]
      organizaciones: Prisma.$organizacionesPayload<ExtArgs>
      consultorios: Prisma.$consultoriosPayload<ExtArgs>
      whatsapp_config: Prisma.$whatsapp_configPayload<ExtArgs> | null
      whatsapp_messages: Prisma.$whatsapp_messagesPayload<ExtArgs>[]
      whatsapp_reminders: Prisma.$whatsapp_remindersPayload<ExtArgs>[]
      whatsapp_templates: Prisma.$whatsapp_templatesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
      email: string
      telefono: string
      password: string
      created_at: Date
      updated_at: Date
      rol: $Enums.Rol
      apellido: string
      consultorio_id: string
      googleAccessToken: string | null
      googleRefreshToken: string | null
      googleTokenExpiry: Date | null
      googleCalendarId: string | null
      organizacion_id: string
      puede_editar_cobros: boolean
      puede_eliminar_cobros: boolean
      puede_gestionar_usuarios: boolean
      puede_ver_historial: boolean
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuariosFindUniqueArgs>(args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuariosFindFirstArgs>(args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usuariosFindManyArgs>(args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends usuariosCreateArgs>(args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuariosCreateManyArgs>(args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuariosCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, usuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends usuariosDeleteArgs>(args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuariosUpdateArgs>(args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuariosDeleteManyArgs>(args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuariosUpdateManyArgs>(args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuariosUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuariosUpdateManyAndReturnArgs>(args: SelectSubset<T, usuariosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends usuariosUpsertArgs>(args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    citas<T extends usuarios$citasArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cobros<T extends usuarios$cobrosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$cobrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    disponibilidad_medico<T extends usuarios$disponibilidad_medicoArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$disponibilidad_medicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historial_cobros<T extends usuarios$historial_cobrosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$historial_cobrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    organizaciones<T extends organizacionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, organizacionesDefaultArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    consultorios<T extends consultoriosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, consultoriosDefaultArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    whatsapp_config<T extends usuarios$whatsapp_configArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$whatsapp_configArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    whatsapp_messages<T extends usuarios$whatsapp_messagesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$whatsapp_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    whatsapp_reminders<T extends usuarios$whatsapp_remindersArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$whatsapp_remindersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    whatsapp_templates<T extends usuarios$whatsapp_templatesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$whatsapp_templatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuarios model
   */
  interface usuariosFieldRefs {
    readonly id: FieldRef<"usuarios", 'String'>
    readonly nombre: FieldRef<"usuarios", 'String'>
    readonly email: FieldRef<"usuarios", 'String'>
    readonly telefono: FieldRef<"usuarios", 'String'>
    readonly password: FieldRef<"usuarios", 'String'>
    readonly created_at: FieldRef<"usuarios", 'DateTime'>
    readonly updated_at: FieldRef<"usuarios", 'DateTime'>
    readonly rol: FieldRef<"usuarios", 'Rol'>
    readonly apellido: FieldRef<"usuarios", 'String'>
    readonly consultorio_id: FieldRef<"usuarios", 'String'>
    readonly googleAccessToken: FieldRef<"usuarios", 'String'>
    readonly googleRefreshToken: FieldRef<"usuarios", 'String'>
    readonly googleTokenExpiry: FieldRef<"usuarios", 'DateTime'>
    readonly googleCalendarId: FieldRef<"usuarios", 'String'>
    readonly organizacion_id: FieldRef<"usuarios", 'String'>
    readonly puede_editar_cobros: FieldRef<"usuarios", 'Boolean'>
    readonly puede_eliminar_cobros: FieldRef<"usuarios", 'Boolean'>
    readonly puede_gestionar_usuarios: FieldRef<"usuarios", 'Boolean'>
    readonly puede_ver_historial: FieldRef<"usuarios", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }

  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios createManyAndReturn
   */
  export type usuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios updateManyAndReturn
   */
  export type usuariosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }

  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuarios.citas
   */
  export type usuarios$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    cursor?: citasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }

  /**
   * usuarios.cobros
   */
  export type usuarios$cobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    where?: cobrosWhereInput
    orderBy?: cobrosOrderByWithRelationInput | cobrosOrderByWithRelationInput[]
    cursor?: cobrosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CobrosScalarFieldEnum | CobrosScalarFieldEnum[]
  }

  /**
   * usuarios.disponibilidad_medico
   */
  export type usuarios$disponibilidad_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    where?: disponibilidad_medicoWhereInput
    orderBy?: disponibilidad_medicoOrderByWithRelationInput | disponibilidad_medicoOrderByWithRelationInput[]
    cursor?: disponibilidad_medicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Disponibilidad_medicoScalarFieldEnum | Disponibilidad_medicoScalarFieldEnum[]
  }

  /**
   * usuarios.historial_cobros
   */
  export type usuarios$historial_cobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    where?: historial_cobrosWhereInput
    orderBy?: historial_cobrosOrderByWithRelationInput | historial_cobrosOrderByWithRelationInput[]
    cursor?: historial_cobrosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historial_cobrosScalarFieldEnum | Historial_cobrosScalarFieldEnum[]
  }

  /**
   * usuarios.whatsapp_config
   */
  export type usuarios$whatsapp_configArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    where?: whatsapp_configWhereInput
  }

  /**
   * usuarios.whatsapp_messages
   */
  export type usuarios$whatsapp_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    where?: whatsapp_messagesWhereInput
    orderBy?: whatsapp_messagesOrderByWithRelationInput | whatsapp_messagesOrderByWithRelationInput[]
    cursor?: whatsapp_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Whatsapp_messagesScalarFieldEnum | Whatsapp_messagesScalarFieldEnum[]
  }

  /**
   * usuarios.whatsapp_reminders
   */
  export type usuarios$whatsapp_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    where?: whatsapp_remindersWhereInput
    orderBy?: whatsapp_remindersOrderByWithRelationInput | whatsapp_remindersOrderByWithRelationInput[]
    cursor?: whatsapp_remindersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Whatsapp_remindersScalarFieldEnum | Whatsapp_remindersScalarFieldEnum[]
  }

  /**
   * usuarios.whatsapp_templates
   */
  export type usuarios$whatsapp_templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    where?: whatsapp_templatesWhereInput
    orderBy?: whatsapp_templatesOrderByWithRelationInput | whatsapp_templatesOrderByWithRelationInput[]
    cursor?: whatsapp_templatesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Whatsapp_templatesScalarFieldEnum | Whatsapp_templatesScalarFieldEnum[]
  }

  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
  }


  /**
   * Model pacientes
   */

  export type AggregatePacientes = {
    _count: PacientesCountAggregateOutputType | null
    _min: PacientesMinAggregateOutputType | null
    _max: PacientesMaxAggregateOutputType | null
  }

  export type PacientesMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    fecha_nacimiento: Date | null
    genero: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
    documento_identidad: string | null
    created_at: Date | null
    updated_at: Date | null
    apellido: string | null
    organizacion_id: string | null
  }

  export type PacientesMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    fecha_nacimiento: Date | null
    genero: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
    documento_identidad: string | null
    created_at: Date | null
    updated_at: Date | null
    apellido: string | null
    organizacion_id: string | null
  }

  export type PacientesCountAggregateOutputType = {
    id: number
    nombre: number
    fecha_nacimiento: number
    genero: number
    direccion: number
    telefono: number
    email: number
    documento_identidad: number
    created_at: number
    updated_at: number
    apellido: number
    organizacion_id: number
    _all: number
  }


  export type PacientesMinAggregateInputType = {
    id?: true
    nombre?: true
    fecha_nacimiento?: true
    genero?: true
    direccion?: true
    telefono?: true
    email?: true
    documento_identidad?: true
    created_at?: true
    updated_at?: true
    apellido?: true
    organizacion_id?: true
  }

  export type PacientesMaxAggregateInputType = {
    id?: true
    nombre?: true
    fecha_nacimiento?: true
    genero?: true
    direccion?: true
    telefono?: true
    email?: true
    documento_identidad?: true
    created_at?: true
    updated_at?: true
    apellido?: true
    organizacion_id?: true
  }

  export type PacientesCountAggregateInputType = {
    id?: true
    nombre?: true
    fecha_nacimiento?: true
    genero?: true
    direccion?: true
    telefono?: true
    email?: true
    documento_identidad?: true
    created_at?: true
    updated_at?: true
    apellido?: true
    organizacion_id?: true
    _all?: true
  }

  export type PacientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pacientes to aggregate.
     */
    where?: pacientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pacientes to fetch.
     */
    orderBy?: pacientesOrderByWithRelationInput | pacientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pacientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pacientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pacientes
    **/
    _count?: true | PacientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PacientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PacientesMaxAggregateInputType
  }

  export type GetPacientesAggregateType<T extends PacientesAggregateArgs> = {
        [P in keyof T & keyof AggregatePacientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePacientes[P]>
      : GetScalarType<T[P], AggregatePacientes[P]>
  }




  export type pacientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pacientesWhereInput
    orderBy?: pacientesOrderByWithAggregationInput | pacientesOrderByWithAggregationInput[]
    by: PacientesScalarFieldEnum[] | PacientesScalarFieldEnum
    having?: pacientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PacientesCountAggregateInputType | true
    _min?: PacientesMinAggregateInputType
    _max?: PacientesMaxAggregateInputType
  }

  export type PacientesGroupByOutputType = {
    id: string
    nombre: string
    fecha_nacimiento: Date
    genero: string
    direccion: string | null
    telefono: string
    email: string
    documento_identidad: string | null
    created_at: Date
    updated_at: Date
    apellido: string
    organizacion_id: string
    _count: PacientesCountAggregateOutputType | null
    _min: PacientesMinAggregateOutputType | null
    _max: PacientesMaxAggregateOutputType | null
  }

  type GetPacientesGroupByPayload<T extends pacientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PacientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PacientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PacientesGroupByOutputType[P]>
            : GetScalarType<T[P], PacientesGroupByOutputType[P]>
        }
      >
    >


  export type pacientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fecha_nacimiento?: boolean
    genero?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    documento_identidad?: boolean
    created_at?: boolean
    updated_at?: boolean
    apellido?: boolean
    organizacion_id?: boolean
    InventoryUsage?: boolean | pacientes$InventoryUsageArgs<ExtArgs>
    citas?: boolean | pacientes$citasArgs<ExtArgs>
    cobros?: boolean | pacientes$cobrosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    whatsapp_messages?: boolean | pacientes$whatsapp_messagesArgs<ExtArgs>
    _count?: boolean | PacientesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pacientes"]>

  export type pacientesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fecha_nacimiento?: boolean
    genero?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    documento_identidad?: boolean
    created_at?: boolean
    updated_at?: boolean
    apellido?: boolean
    organizacion_id?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pacientes"]>

  export type pacientesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fecha_nacimiento?: boolean
    genero?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    documento_identidad?: boolean
    created_at?: boolean
    updated_at?: boolean
    apellido?: boolean
    organizacion_id?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pacientes"]>

  export type pacientesSelectScalar = {
    id?: boolean
    nombre?: boolean
    fecha_nacimiento?: boolean
    genero?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    documento_identidad?: boolean
    created_at?: boolean
    updated_at?: boolean
    apellido?: boolean
    organizacion_id?: boolean
  }

  export type pacientesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "fecha_nacimiento" | "genero" | "direccion" | "telefono" | "email" | "documento_identidad" | "created_at" | "updated_at" | "apellido" | "organizacion_id", ExtArgs["result"]["pacientes"]>
  export type pacientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsage?: boolean | pacientes$InventoryUsageArgs<ExtArgs>
    citas?: boolean | pacientes$citasArgs<ExtArgs>
    cobros?: boolean | pacientes$cobrosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    whatsapp_messages?: boolean | pacientes$whatsapp_messagesArgs<ExtArgs>
    _count?: boolean | PacientesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type pacientesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }
  export type pacientesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }

  export type $pacientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pacientes"
    objects: {
      InventoryUsage: Prisma.$InventoryUsagePayload<ExtArgs>[]
      citas: Prisma.$citasPayload<ExtArgs>[]
      cobros: Prisma.$cobrosPayload<ExtArgs>[]
      organizaciones: Prisma.$organizacionesPayload<ExtArgs>
      whatsapp_messages: Prisma.$whatsapp_messagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
      fecha_nacimiento: Date
      genero: string
      direccion: string | null
      telefono: string
      email: string
      documento_identidad: string | null
      created_at: Date
      updated_at: Date
      apellido: string
      organizacion_id: string
    }, ExtArgs["result"]["pacientes"]>
    composites: {}
  }

  type pacientesGetPayload<S extends boolean | null | undefined | pacientesDefaultArgs> = $Result.GetResult<Prisma.$pacientesPayload, S>

  type pacientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pacientesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PacientesCountAggregateInputType | true
    }

  export interface pacientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pacientes'], meta: { name: 'pacientes' } }
    /**
     * Find zero or one Pacientes that matches the filter.
     * @param {pacientesFindUniqueArgs} args - Arguments to find a Pacientes
     * @example
     * // Get one Pacientes
     * const pacientes = await prisma.pacientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pacientesFindUniqueArgs>(args: SelectSubset<T, pacientesFindUniqueArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pacientes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pacientesFindUniqueOrThrowArgs} args - Arguments to find a Pacientes
     * @example
     * // Get one Pacientes
     * const pacientes = await prisma.pacientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pacientesFindUniqueOrThrowArgs>(args: SelectSubset<T, pacientesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pacientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pacientesFindFirstArgs} args - Arguments to find a Pacientes
     * @example
     * // Get one Pacientes
     * const pacientes = await prisma.pacientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pacientesFindFirstArgs>(args?: SelectSubset<T, pacientesFindFirstArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pacientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pacientesFindFirstOrThrowArgs} args - Arguments to find a Pacientes
     * @example
     * // Get one Pacientes
     * const pacientes = await prisma.pacientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pacientesFindFirstOrThrowArgs>(args?: SelectSubset<T, pacientesFindFirstOrThrowArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pacientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pacientesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pacientes
     * const pacientes = await prisma.pacientes.findMany()
     * 
     * // Get first 10 Pacientes
     * const pacientes = await prisma.pacientes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pacientesWithIdOnly = await prisma.pacientes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pacientesFindManyArgs>(args?: SelectSubset<T, pacientesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pacientes.
     * @param {pacientesCreateArgs} args - Arguments to create a Pacientes.
     * @example
     * // Create one Pacientes
     * const Pacientes = await prisma.pacientes.create({
     *   data: {
     *     // ... data to create a Pacientes
     *   }
     * })
     * 
     */
    create<T extends pacientesCreateArgs>(args: SelectSubset<T, pacientesCreateArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pacientes.
     * @param {pacientesCreateManyArgs} args - Arguments to create many Pacientes.
     * @example
     * // Create many Pacientes
     * const pacientes = await prisma.pacientes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pacientesCreateManyArgs>(args?: SelectSubset<T, pacientesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pacientes and returns the data saved in the database.
     * @param {pacientesCreateManyAndReturnArgs} args - Arguments to create many Pacientes.
     * @example
     * // Create many Pacientes
     * const pacientes = await prisma.pacientes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pacientes and only return the `id`
     * const pacientesWithIdOnly = await prisma.pacientes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pacientesCreateManyAndReturnArgs>(args?: SelectSubset<T, pacientesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pacientes.
     * @param {pacientesDeleteArgs} args - Arguments to delete one Pacientes.
     * @example
     * // Delete one Pacientes
     * const Pacientes = await prisma.pacientes.delete({
     *   where: {
     *     // ... filter to delete one Pacientes
     *   }
     * })
     * 
     */
    delete<T extends pacientesDeleteArgs>(args: SelectSubset<T, pacientesDeleteArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pacientes.
     * @param {pacientesUpdateArgs} args - Arguments to update one Pacientes.
     * @example
     * // Update one Pacientes
     * const pacientes = await prisma.pacientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pacientesUpdateArgs>(args: SelectSubset<T, pacientesUpdateArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pacientes.
     * @param {pacientesDeleteManyArgs} args - Arguments to filter Pacientes to delete.
     * @example
     * // Delete a few Pacientes
     * const { count } = await prisma.pacientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pacientesDeleteManyArgs>(args?: SelectSubset<T, pacientesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pacientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pacientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pacientes
     * const pacientes = await prisma.pacientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pacientesUpdateManyArgs>(args: SelectSubset<T, pacientesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pacientes and returns the data updated in the database.
     * @param {pacientesUpdateManyAndReturnArgs} args - Arguments to update many Pacientes.
     * @example
     * // Update many Pacientes
     * const pacientes = await prisma.pacientes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pacientes and only return the `id`
     * const pacientesWithIdOnly = await prisma.pacientes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pacientesUpdateManyAndReturnArgs>(args: SelectSubset<T, pacientesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pacientes.
     * @param {pacientesUpsertArgs} args - Arguments to update or create a Pacientes.
     * @example
     * // Update or create a Pacientes
     * const pacientes = await prisma.pacientes.upsert({
     *   create: {
     *     // ... data to create a Pacientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pacientes we want to update
     *   }
     * })
     */
    upsert<T extends pacientesUpsertArgs>(args: SelectSubset<T, pacientesUpsertArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pacientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pacientesCountArgs} args - Arguments to filter Pacientes to count.
     * @example
     * // Count the number of Pacientes
     * const count = await prisma.pacientes.count({
     *   where: {
     *     // ... the filter for the Pacientes we want to count
     *   }
     * })
    **/
    count<T extends pacientesCountArgs>(
      args?: Subset<T, pacientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PacientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pacientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PacientesAggregateArgs>(args: Subset<T, PacientesAggregateArgs>): Prisma.PrismaPromise<GetPacientesAggregateType<T>>

    /**
     * Group by Pacientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pacientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pacientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pacientesGroupByArgs['orderBy'] }
        : { orderBy?: pacientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pacientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPacientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pacientes model
   */
  readonly fields: pacientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pacientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pacientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    InventoryUsage<T extends pacientes$InventoryUsageArgs<ExtArgs> = {}>(args?: Subset<T, pacientes$InventoryUsageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    citas<T extends pacientes$citasArgs<ExtArgs> = {}>(args?: Subset<T, pacientes$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cobros<T extends pacientes$cobrosArgs<ExtArgs> = {}>(args?: Subset<T, pacientes$cobrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    organizaciones<T extends organizacionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, organizacionesDefaultArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    whatsapp_messages<T extends pacientes$whatsapp_messagesArgs<ExtArgs> = {}>(args?: Subset<T, pacientes$whatsapp_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pacientes model
   */
  interface pacientesFieldRefs {
    readonly id: FieldRef<"pacientes", 'String'>
    readonly nombre: FieldRef<"pacientes", 'String'>
    readonly fecha_nacimiento: FieldRef<"pacientes", 'DateTime'>
    readonly genero: FieldRef<"pacientes", 'String'>
    readonly direccion: FieldRef<"pacientes", 'String'>
    readonly telefono: FieldRef<"pacientes", 'String'>
    readonly email: FieldRef<"pacientes", 'String'>
    readonly documento_identidad: FieldRef<"pacientes", 'String'>
    readonly created_at: FieldRef<"pacientes", 'DateTime'>
    readonly updated_at: FieldRef<"pacientes", 'DateTime'>
    readonly apellido: FieldRef<"pacientes", 'String'>
    readonly organizacion_id: FieldRef<"pacientes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pacientes findUnique
   */
  export type pacientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * Filter, which pacientes to fetch.
     */
    where: pacientesWhereUniqueInput
  }

  /**
   * pacientes findUniqueOrThrow
   */
  export type pacientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * Filter, which pacientes to fetch.
     */
    where: pacientesWhereUniqueInput
  }

  /**
   * pacientes findFirst
   */
  export type pacientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * Filter, which pacientes to fetch.
     */
    where?: pacientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pacientes to fetch.
     */
    orderBy?: pacientesOrderByWithRelationInput | pacientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pacientes.
     */
    cursor?: pacientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pacientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pacientes.
     */
    distinct?: PacientesScalarFieldEnum | PacientesScalarFieldEnum[]
  }

  /**
   * pacientes findFirstOrThrow
   */
  export type pacientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * Filter, which pacientes to fetch.
     */
    where?: pacientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pacientes to fetch.
     */
    orderBy?: pacientesOrderByWithRelationInput | pacientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pacientes.
     */
    cursor?: pacientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pacientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pacientes.
     */
    distinct?: PacientesScalarFieldEnum | PacientesScalarFieldEnum[]
  }

  /**
   * pacientes findMany
   */
  export type pacientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * Filter, which pacientes to fetch.
     */
    where?: pacientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pacientes to fetch.
     */
    orderBy?: pacientesOrderByWithRelationInput | pacientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pacientes.
     */
    cursor?: pacientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pacientes.
     */
    skip?: number
    distinct?: PacientesScalarFieldEnum | PacientesScalarFieldEnum[]
  }

  /**
   * pacientes create
   */
  export type pacientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * The data needed to create a pacientes.
     */
    data: XOR<pacientesCreateInput, pacientesUncheckedCreateInput>
  }

  /**
   * pacientes createMany
   */
  export type pacientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pacientes.
     */
    data: pacientesCreateManyInput | pacientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pacientes createManyAndReturn
   */
  export type pacientesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * The data used to create many pacientes.
     */
    data: pacientesCreateManyInput | pacientesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pacientes update
   */
  export type pacientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * The data needed to update a pacientes.
     */
    data: XOR<pacientesUpdateInput, pacientesUncheckedUpdateInput>
    /**
     * Choose, which pacientes to update.
     */
    where: pacientesWhereUniqueInput
  }

  /**
   * pacientes updateMany
   */
  export type pacientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pacientes.
     */
    data: XOR<pacientesUpdateManyMutationInput, pacientesUncheckedUpdateManyInput>
    /**
     * Filter which pacientes to update
     */
    where?: pacientesWhereInput
    /**
     * Limit how many pacientes to update.
     */
    limit?: number
  }

  /**
   * pacientes updateManyAndReturn
   */
  export type pacientesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * The data used to update pacientes.
     */
    data: XOR<pacientesUpdateManyMutationInput, pacientesUncheckedUpdateManyInput>
    /**
     * Filter which pacientes to update
     */
    where?: pacientesWhereInput
    /**
     * Limit how many pacientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pacientes upsert
   */
  export type pacientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * The filter to search for the pacientes to update in case it exists.
     */
    where: pacientesWhereUniqueInput
    /**
     * In case the pacientes found by the `where` argument doesn't exist, create a new pacientes with this data.
     */
    create: XOR<pacientesCreateInput, pacientesUncheckedCreateInput>
    /**
     * In case the pacientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pacientesUpdateInput, pacientesUncheckedUpdateInput>
  }

  /**
   * pacientes delete
   */
  export type pacientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    /**
     * Filter which pacientes to delete.
     */
    where: pacientesWhereUniqueInput
  }

  /**
   * pacientes deleteMany
   */
  export type pacientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pacientes to delete
     */
    where?: pacientesWhereInput
    /**
     * Limit how many pacientes to delete.
     */
    limit?: number
  }

  /**
   * pacientes.InventoryUsage
   */
  export type pacientes$InventoryUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    where?: InventoryUsageWhereInput
    orderBy?: InventoryUsageOrderByWithRelationInput | InventoryUsageOrderByWithRelationInput[]
    cursor?: InventoryUsageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryUsageScalarFieldEnum | InventoryUsageScalarFieldEnum[]
  }

  /**
   * pacientes.citas
   */
  export type pacientes$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    cursor?: citasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }

  /**
   * pacientes.cobros
   */
  export type pacientes$cobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    where?: cobrosWhereInput
    orderBy?: cobrosOrderByWithRelationInput | cobrosOrderByWithRelationInput[]
    cursor?: cobrosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CobrosScalarFieldEnum | CobrosScalarFieldEnum[]
  }

  /**
   * pacientes.whatsapp_messages
   */
  export type pacientes$whatsapp_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    where?: whatsapp_messagesWhereInput
    orderBy?: whatsapp_messagesOrderByWithRelationInput | whatsapp_messagesOrderByWithRelationInput[]
    cursor?: whatsapp_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Whatsapp_messagesScalarFieldEnum | Whatsapp_messagesScalarFieldEnum[]
  }

  /**
   * pacientes without action
   */
  export type pacientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
  }


  /**
   * Model consultorios
   */

  export type AggregateConsultorios = {
    _count: ConsultoriosCountAggregateOutputType | null
    _min: ConsultoriosMinAggregateOutputType | null
    _max: ConsultoriosMaxAggregateOutputType | null
  }

  export type ConsultoriosMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    direccion: string | null
    created_at: Date | null
    updated_at: Date | null
    organizacion_id: string | null
  }

  export type ConsultoriosMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    direccion: string | null
    created_at: Date | null
    updated_at: Date | null
    organizacion_id: string | null
  }

  export type ConsultoriosCountAggregateOutputType = {
    id: number
    nombre: number
    direccion: number
    created_at: number
    updated_at: number
    organizacion_id: number
    _all: number
  }


  export type ConsultoriosMinAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    created_at?: true
    updated_at?: true
    organizacion_id?: true
  }

  export type ConsultoriosMaxAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    created_at?: true
    updated_at?: true
    organizacion_id?: true
  }

  export type ConsultoriosCountAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    created_at?: true
    updated_at?: true
    organizacion_id?: true
    _all?: true
  }

  export type ConsultoriosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which consultorios to aggregate.
     */
    where?: consultoriosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of consultorios to fetch.
     */
    orderBy?: consultoriosOrderByWithRelationInput | consultoriosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: consultoriosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` consultorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned consultorios
    **/
    _count?: true | ConsultoriosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConsultoriosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConsultoriosMaxAggregateInputType
  }

  export type GetConsultoriosAggregateType<T extends ConsultoriosAggregateArgs> = {
        [P in keyof T & keyof AggregateConsultorios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConsultorios[P]>
      : GetScalarType<T[P], AggregateConsultorios[P]>
  }




  export type consultoriosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: consultoriosWhereInput
    orderBy?: consultoriosOrderByWithAggregationInput | consultoriosOrderByWithAggregationInput[]
    by: ConsultoriosScalarFieldEnum[] | ConsultoriosScalarFieldEnum
    having?: consultoriosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConsultoriosCountAggregateInputType | true
    _min?: ConsultoriosMinAggregateInputType
    _max?: ConsultoriosMaxAggregateInputType
  }

  export type ConsultoriosGroupByOutputType = {
    id: string
    nombre: string
    direccion: string
    created_at: Date
    updated_at: Date
    organizacion_id: string
    _count: ConsultoriosCountAggregateOutputType | null
    _min: ConsultoriosMinAggregateOutputType | null
    _max: ConsultoriosMaxAggregateOutputType | null
  }

  type GetConsultoriosGroupByPayload<T extends consultoriosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConsultoriosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConsultoriosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConsultoriosGroupByOutputType[P]>
            : GetScalarType<T[P], ConsultoriosGroupByOutputType[P]>
        }
      >
    >


  export type consultoriosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
    citas?: boolean | consultorios$citasArgs<ExtArgs>
    cobro_conceptos?: boolean | consultorios$cobro_conceptosArgs<ExtArgs>
    configuracion_permisos?: boolean | consultorios$configuracion_permisosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    precios_consultorio?: boolean | consultorios$precios_consultorioArgs<ExtArgs>
    usuarios?: boolean | consultorios$usuariosArgs<ExtArgs>
    _count?: boolean | ConsultoriosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultorios"]>

  export type consultoriosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultorios"]>

  export type consultoriosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultorios"]>

  export type consultoriosSelectScalar = {
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
  }

  export type consultoriosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "direccion" | "created_at" | "updated_at" | "organizacion_id", ExtArgs["result"]["consultorios"]>
  export type consultoriosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | consultorios$citasArgs<ExtArgs>
    cobro_conceptos?: boolean | consultorios$cobro_conceptosArgs<ExtArgs>
    configuracion_permisos?: boolean | consultorios$configuracion_permisosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    precios_consultorio?: boolean | consultorios$precios_consultorioArgs<ExtArgs>
    usuarios?: boolean | consultorios$usuariosArgs<ExtArgs>
    _count?: boolean | ConsultoriosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type consultoriosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }
  export type consultoriosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }

  export type $consultoriosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "consultorios"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs>[]
      cobro_conceptos: Prisma.$cobro_conceptosPayload<ExtArgs>[]
      configuracion_permisos: Prisma.$configuracion_permisosPayload<ExtArgs> | null
      organizaciones: Prisma.$organizacionesPayload<ExtArgs>
      precios_consultorio: Prisma.$precios_consultorioPayload<ExtArgs>[]
      usuarios: Prisma.$usuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
      direccion: string
      created_at: Date
      updated_at: Date
      organizacion_id: string
    }, ExtArgs["result"]["consultorios"]>
    composites: {}
  }

  type consultoriosGetPayload<S extends boolean | null | undefined | consultoriosDefaultArgs> = $Result.GetResult<Prisma.$consultoriosPayload, S>

  type consultoriosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<consultoriosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConsultoriosCountAggregateInputType | true
    }

  export interface consultoriosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['consultorios'], meta: { name: 'consultorios' } }
    /**
     * Find zero or one Consultorios that matches the filter.
     * @param {consultoriosFindUniqueArgs} args - Arguments to find a Consultorios
     * @example
     * // Get one Consultorios
     * const consultorios = await prisma.consultorios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends consultoriosFindUniqueArgs>(args: SelectSubset<T, consultoriosFindUniqueArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Consultorios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {consultoriosFindUniqueOrThrowArgs} args - Arguments to find a Consultorios
     * @example
     * // Get one Consultorios
     * const consultorios = await prisma.consultorios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends consultoriosFindUniqueOrThrowArgs>(args: SelectSubset<T, consultoriosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Consultorios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {consultoriosFindFirstArgs} args - Arguments to find a Consultorios
     * @example
     * // Get one Consultorios
     * const consultorios = await prisma.consultorios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends consultoriosFindFirstArgs>(args?: SelectSubset<T, consultoriosFindFirstArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Consultorios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {consultoriosFindFirstOrThrowArgs} args - Arguments to find a Consultorios
     * @example
     * // Get one Consultorios
     * const consultorios = await prisma.consultorios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends consultoriosFindFirstOrThrowArgs>(args?: SelectSubset<T, consultoriosFindFirstOrThrowArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Consultorios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {consultoriosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Consultorios
     * const consultorios = await prisma.consultorios.findMany()
     * 
     * // Get first 10 Consultorios
     * const consultorios = await prisma.consultorios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const consultoriosWithIdOnly = await prisma.consultorios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends consultoriosFindManyArgs>(args?: SelectSubset<T, consultoriosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Consultorios.
     * @param {consultoriosCreateArgs} args - Arguments to create a Consultorios.
     * @example
     * // Create one Consultorios
     * const Consultorios = await prisma.consultorios.create({
     *   data: {
     *     // ... data to create a Consultorios
     *   }
     * })
     * 
     */
    create<T extends consultoriosCreateArgs>(args: SelectSubset<T, consultoriosCreateArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Consultorios.
     * @param {consultoriosCreateManyArgs} args - Arguments to create many Consultorios.
     * @example
     * // Create many Consultorios
     * const consultorios = await prisma.consultorios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends consultoriosCreateManyArgs>(args?: SelectSubset<T, consultoriosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Consultorios and returns the data saved in the database.
     * @param {consultoriosCreateManyAndReturnArgs} args - Arguments to create many Consultorios.
     * @example
     * // Create many Consultorios
     * const consultorios = await prisma.consultorios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Consultorios and only return the `id`
     * const consultoriosWithIdOnly = await prisma.consultorios.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends consultoriosCreateManyAndReturnArgs>(args?: SelectSubset<T, consultoriosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Consultorios.
     * @param {consultoriosDeleteArgs} args - Arguments to delete one Consultorios.
     * @example
     * // Delete one Consultorios
     * const Consultorios = await prisma.consultorios.delete({
     *   where: {
     *     // ... filter to delete one Consultorios
     *   }
     * })
     * 
     */
    delete<T extends consultoriosDeleteArgs>(args: SelectSubset<T, consultoriosDeleteArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Consultorios.
     * @param {consultoriosUpdateArgs} args - Arguments to update one Consultorios.
     * @example
     * // Update one Consultorios
     * const consultorios = await prisma.consultorios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends consultoriosUpdateArgs>(args: SelectSubset<T, consultoriosUpdateArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Consultorios.
     * @param {consultoriosDeleteManyArgs} args - Arguments to filter Consultorios to delete.
     * @example
     * // Delete a few Consultorios
     * const { count } = await prisma.consultorios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends consultoriosDeleteManyArgs>(args?: SelectSubset<T, consultoriosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Consultorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {consultoriosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Consultorios
     * const consultorios = await prisma.consultorios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends consultoriosUpdateManyArgs>(args: SelectSubset<T, consultoriosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Consultorios and returns the data updated in the database.
     * @param {consultoriosUpdateManyAndReturnArgs} args - Arguments to update many Consultorios.
     * @example
     * // Update many Consultorios
     * const consultorios = await prisma.consultorios.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Consultorios and only return the `id`
     * const consultoriosWithIdOnly = await prisma.consultorios.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends consultoriosUpdateManyAndReturnArgs>(args: SelectSubset<T, consultoriosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Consultorios.
     * @param {consultoriosUpsertArgs} args - Arguments to update or create a Consultorios.
     * @example
     * // Update or create a Consultorios
     * const consultorios = await prisma.consultorios.upsert({
     *   create: {
     *     // ... data to create a Consultorios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Consultorios we want to update
     *   }
     * })
     */
    upsert<T extends consultoriosUpsertArgs>(args: SelectSubset<T, consultoriosUpsertArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Consultorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {consultoriosCountArgs} args - Arguments to filter Consultorios to count.
     * @example
     * // Count the number of Consultorios
     * const count = await prisma.consultorios.count({
     *   where: {
     *     // ... the filter for the Consultorios we want to count
     *   }
     * })
    **/
    count<T extends consultoriosCountArgs>(
      args?: Subset<T, consultoriosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConsultoriosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Consultorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultoriosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConsultoriosAggregateArgs>(args: Subset<T, ConsultoriosAggregateArgs>): Prisma.PrismaPromise<GetConsultoriosAggregateType<T>>

    /**
     * Group by Consultorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {consultoriosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends consultoriosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: consultoriosGroupByArgs['orderBy'] }
        : { orderBy?: consultoriosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, consultoriosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConsultoriosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the consultorios model
   */
  readonly fields: consultoriosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for consultorios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__consultoriosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    citas<T extends consultorios$citasArgs<ExtArgs> = {}>(args?: Subset<T, consultorios$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cobro_conceptos<T extends consultorios$cobro_conceptosArgs<ExtArgs> = {}>(args?: Subset<T, consultorios$cobro_conceptosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    configuracion_permisos<T extends consultorios$configuracion_permisosArgs<ExtArgs> = {}>(args?: Subset<T, consultorios$configuracion_permisosArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organizaciones<T extends organizacionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, organizacionesDefaultArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    precios_consultorio<T extends consultorios$precios_consultorioArgs<ExtArgs> = {}>(args?: Subset<T, consultorios$precios_consultorioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends consultorios$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, consultorios$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the consultorios model
   */
  interface consultoriosFieldRefs {
    readonly id: FieldRef<"consultorios", 'String'>
    readonly nombre: FieldRef<"consultorios", 'String'>
    readonly direccion: FieldRef<"consultorios", 'String'>
    readonly created_at: FieldRef<"consultorios", 'DateTime'>
    readonly updated_at: FieldRef<"consultorios", 'DateTime'>
    readonly organizacion_id: FieldRef<"consultorios", 'String'>
  }
    

  // Custom InputTypes
  /**
   * consultorios findUnique
   */
  export type consultoriosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * Filter, which consultorios to fetch.
     */
    where: consultoriosWhereUniqueInput
  }

  /**
   * consultorios findUniqueOrThrow
   */
  export type consultoriosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * Filter, which consultorios to fetch.
     */
    where: consultoriosWhereUniqueInput
  }

  /**
   * consultorios findFirst
   */
  export type consultoriosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * Filter, which consultorios to fetch.
     */
    where?: consultoriosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of consultorios to fetch.
     */
    orderBy?: consultoriosOrderByWithRelationInput | consultoriosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for consultorios.
     */
    cursor?: consultoriosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` consultorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of consultorios.
     */
    distinct?: ConsultoriosScalarFieldEnum | ConsultoriosScalarFieldEnum[]
  }

  /**
   * consultorios findFirstOrThrow
   */
  export type consultoriosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * Filter, which consultorios to fetch.
     */
    where?: consultoriosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of consultorios to fetch.
     */
    orderBy?: consultoriosOrderByWithRelationInput | consultoriosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for consultorios.
     */
    cursor?: consultoriosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` consultorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of consultorios.
     */
    distinct?: ConsultoriosScalarFieldEnum | ConsultoriosScalarFieldEnum[]
  }

  /**
   * consultorios findMany
   */
  export type consultoriosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * Filter, which consultorios to fetch.
     */
    where?: consultoriosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of consultorios to fetch.
     */
    orderBy?: consultoriosOrderByWithRelationInput | consultoriosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing consultorios.
     */
    cursor?: consultoriosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` consultorios.
     */
    skip?: number
    distinct?: ConsultoriosScalarFieldEnum | ConsultoriosScalarFieldEnum[]
  }

  /**
   * consultorios create
   */
  export type consultoriosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * The data needed to create a consultorios.
     */
    data: XOR<consultoriosCreateInput, consultoriosUncheckedCreateInput>
  }

  /**
   * consultorios createMany
   */
  export type consultoriosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many consultorios.
     */
    data: consultoriosCreateManyInput | consultoriosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * consultorios createManyAndReturn
   */
  export type consultoriosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * The data used to create many consultorios.
     */
    data: consultoriosCreateManyInput | consultoriosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * consultorios update
   */
  export type consultoriosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * The data needed to update a consultorios.
     */
    data: XOR<consultoriosUpdateInput, consultoriosUncheckedUpdateInput>
    /**
     * Choose, which consultorios to update.
     */
    where: consultoriosWhereUniqueInput
  }

  /**
   * consultorios updateMany
   */
  export type consultoriosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update consultorios.
     */
    data: XOR<consultoriosUpdateManyMutationInput, consultoriosUncheckedUpdateManyInput>
    /**
     * Filter which consultorios to update
     */
    where?: consultoriosWhereInput
    /**
     * Limit how many consultorios to update.
     */
    limit?: number
  }

  /**
   * consultorios updateManyAndReturn
   */
  export type consultoriosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * The data used to update consultorios.
     */
    data: XOR<consultoriosUpdateManyMutationInput, consultoriosUncheckedUpdateManyInput>
    /**
     * Filter which consultorios to update
     */
    where?: consultoriosWhereInput
    /**
     * Limit how many consultorios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * consultorios upsert
   */
  export type consultoriosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * The filter to search for the consultorios to update in case it exists.
     */
    where: consultoriosWhereUniqueInput
    /**
     * In case the consultorios found by the `where` argument doesn't exist, create a new consultorios with this data.
     */
    create: XOR<consultoriosCreateInput, consultoriosUncheckedCreateInput>
    /**
     * In case the consultorios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<consultoriosUpdateInput, consultoriosUncheckedUpdateInput>
  }

  /**
   * consultorios delete
   */
  export type consultoriosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
    /**
     * Filter which consultorios to delete.
     */
    where: consultoriosWhereUniqueInput
  }

  /**
   * consultorios deleteMany
   */
  export type consultoriosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which consultorios to delete
     */
    where?: consultoriosWhereInput
    /**
     * Limit how many consultorios to delete.
     */
    limit?: number
  }

  /**
   * consultorios.citas
   */
  export type consultorios$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    cursor?: citasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }

  /**
   * consultorios.cobro_conceptos
   */
  export type consultorios$cobro_conceptosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    where?: cobro_conceptosWhereInput
    orderBy?: cobro_conceptosOrderByWithRelationInput | cobro_conceptosOrderByWithRelationInput[]
    cursor?: cobro_conceptosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cobro_conceptosScalarFieldEnum | Cobro_conceptosScalarFieldEnum[]
  }

  /**
   * consultorios.configuracion_permisos
   */
  export type consultorios$configuracion_permisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    where?: configuracion_permisosWhereInput
  }

  /**
   * consultorios.precios_consultorio
   */
  export type consultorios$precios_consultorioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    where?: precios_consultorioWhereInput
    orderBy?: precios_consultorioOrderByWithRelationInput | precios_consultorioOrderByWithRelationInput[]
    cursor?: precios_consultorioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Precios_consultorioScalarFieldEnum | Precios_consultorioScalarFieldEnum[]
  }

  /**
   * consultorios.usuarios
   */
  export type consultorios$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    cursor?: usuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * consultorios without action
   */
  export type consultoriosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the consultorios
     */
    select?: consultoriosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the consultorios
     */
    omit?: consultoriosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: consultoriosInclude<ExtArgs> | null
  }


  /**
   * Model cobros
   */

  export type AggregateCobros = {
    _count: CobrosCountAggregateOutputType | null
    _avg: CobrosAvgAggregateOutputType | null
    _sum: CobrosSumAggregateOutputType | null
    _min: CobrosMinAggregateOutputType | null
    _max: CobrosMaxAggregateOutputType | null
  }

  export type CobrosAvgAggregateOutputType = {
    monto_total: number | null
  }

  export type CobrosSumAggregateOutputType = {
    monto_total: number | null
  }

  export type CobrosMinAggregateOutputType = {
    id: string | null
    fecha_cobro: Date | null
    monto_total: number | null
    notas: string | null
    created_at: Date | null
    updated_at: Date | null
    paciente_id: string | null
    usuario_id: string | null
    estado: $Enums.EstadoCobro | null
    metodo_pago: $Enums.MetodoPago | null
  }

  export type CobrosMaxAggregateOutputType = {
    id: string | null
    fecha_cobro: Date | null
    monto_total: number | null
    notas: string | null
    created_at: Date | null
    updated_at: Date | null
    paciente_id: string | null
    usuario_id: string | null
    estado: $Enums.EstadoCobro | null
    metodo_pago: $Enums.MetodoPago | null
  }

  export type CobrosCountAggregateOutputType = {
    id: number
    fecha_cobro: number
    monto_total: number
    notas: number
    created_at: number
    updated_at: number
    paciente_id: number
    usuario_id: number
    estado: number
    metodo_pago: number
    _all: number
  }


  export type CobrosAvgAggregateInputType = {
    monto_total?: true
  }

  export type CobrosSumAggregateInputType = {
    monto_total?: true
  }

  export type CobrosMinAggregateInputType = {
    id?: true
    fecha_cobro?: true
    monto_total?: true
    notas?: true
    created_at?: true
    updated_at?: true
    paciente_id?: true
    usuario_id?: true
    estado?: true
    metodo_pago?: true
  }

  export type CobrosMaxAggregateInputType = {
    id?: true
    fecha_cobro?: true
    monto_total?: true
    notas?: true
    created_at?: true
    updated_at?: true
    paciente_id?: true
    usuario_id?: true
    estado?: true
    metodo_pago?: true
  }

  export type CobrosCountAggregateInputType = {
    id?: true
    fecha_cobro?: true
    monto_total?: true
    notas?: true
    created_at?: true
    updated_at?: true
    paciente_id?: true
    usuario_id?: true
    estado?: true
    metodo_pago?: true
    _all?: true
  }

  export type CobrosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cobros to aggregate.
     */
    where?: cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobros to fetch.
     */
    orderBy?: cobrosOrderByWithRelationInput | cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cobros
    **/
    _count?: true | CobrosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CobrosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CobrosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CobrosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CobrosMaxAggregateInputType
  }

  export type GetCobrosAggregateType<T extends CobrosAggregateArgs> = {
        [P in keyof T & keyof AggregateCobros]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCobros[P]>
      : GetScalarType<T[P], AggregateCobros[P]>
  }




  export type cobrosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobrosWhereInput
    orderBy?: cobrosOrderByWithAggregationInput | cobrosOrderByWithAggregationInput[]
    by: CobrosScalarFieldEnum[] | CobrosScalarFieldEnum
    having?: cobrosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CobrosCountAggregateInputType | true
    _avg?: CobrosAvgAggregateInputType
    _sum?: CobrosSumAggregateInputType
    _min?: CobrosMinAggregateInputType
    _max?: CobrosMaxAggregateInputType
  }

  export type CobrosGroupByOutputType = {
    id: string
    fecha_cobro: Date
    monto_total: number
    notas: string | null
    created_at: Date
    updated_at: Date
    paciente_id: string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago: $Enums.MetodoPago | null
    _count: CobrosCountAggregateOutputType | null
    _avg: CobrosAvgAggregateOutputType | null
    _sum: CobrosSumAggregateOutputType | null
    _min: CobrosMinAggregateOutputType | null
    _max: CobrosMaxAggregateOutputType | null
  }

  type GetCobrosGroupByPayload<T extends cobrosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CobrosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CobrosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CobrosGroupByOutputType[P]>
            : GetScalarType<T[P], CobrosGroupByOutputType[P]>
        }
      >
    >


  export type cobrosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha_cobro?: boolean
    monto_total?: boolean
    notas?: boolean
    created_at?: boolean
    updated_at?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    estado?: boolean
    metodo_pago?: boolean
    cobro_conceptos?: boolean | cobros$cobro_conceptosArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    historial_cobros?: boolean | cobros$historial_cobrosArgs<ExtArgs>
    metodos_pago_cobro?: boolean | cobros$metodos_pago_cobroArgs<ExtArgs>
    _count?: boolean | CobrosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobros"]>

  export type cobrosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha_cobro?: boolean
    monto_total?: boolean
    notas?: boolean
    created_at?: boolean
    updated_at?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    estado?: boolean
    metodo_pago?: boolean
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobros"]>

  export type cobrosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha_cobro?: boolean
    monto_total?: boolean
    notas?: boolean
    created_at?: boolean
    updated_at?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    estado?: boolean
    metodo_pago?: boolean
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobros"]>

  export type cobrosSelectScalar = {
    id?: boolean
    fecha_cobro?: boolean
    monto_total?: boolean
    notas?: boolean
    created_at?: boolean
    updated_at?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    estado?: boolean
    metodo_pago?: boolean
  }

  export type cobrosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fecha_cobro" | "monto_total" | "notas" | "created_at" | "updated_at" | "paciente_id" | "usuario_id" | "estado" | "metodo_pago", ExtArgs["result"]["cobros"]>
  export type cobrosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobro_conceptos?: boolean | cobros$cobro_conceptosArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    historial_cobros?: boolean | cobros$historial_cobrosArgs<ExtArgs>
    metodos_pago_cobro?: boolean | cobros$metodos_pago_cobroArgs<ExtArgs>
    _count?: boolean | CobrosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cobrosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type cobrosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $cobrosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cobros"
    objects: {
      cobro_conceptos: Prisma.$cobro_conceptosPayload<ExtArgs>[]
      pacientes: Prisma.$pacientesPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
      historial_cobros: Prisma.$historial_cobrosPayload<ExtArgs>[]
      metodos_pago_cobro: Prisma.$metodos_pago_cobroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fecha_cobro: Date
      monto_total: number
      notas: string | null
      created_at: Date
      updated_at: Date
      paciente_id: string
      usuario_id: string
      estado: $Enums.EstadoCobro
      metodo_pago: $Enums.MetodoPago | null
    }, ExtArgs["result"]["cobros"]>
    composites: {}
  }

  type cobrosGetPayload<S extends boolean | null | undefined | cobrosDefaultArgs> = $Result.GetResult<Prisma.$cobrosPayload, S>

  type cobrosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cobrosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CobrosCountAggregateInputType | true
    }

  export interface cobrosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cobros'], meta: { name: 'cobros' } }
    /**
     * Find zero or one Cobros that matches the filter.
     * @param {cobrosFindUniqueArgs} args - Arguments to find a Cobros
     * @example
     * // Get one Cobros
     * const cobros = await prisma.cobros.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cobrosFindUniqueArgs>(args: SelectSubset<T, cobrosFindUniqueArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cobros that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cobrosFindUniqueOrThrowArgs} args - Arguments to find a Cobros
     * @example
     * // Get one Cobros
     * const cobros = await prisma.cobros.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cobrosFindUniqueOrThrowArgs>(args: SelectSubset<T, cobrosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrosFindFirstArgs} args - Arguments to find a Cobros
     * @example
     * // Get one Cobros
     * const cobros = await prisma.cobros.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cobrosFindFirstArgs>(args?: SelectSubset<T, cobrosFindFirstArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cobros that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrosFindFirstOrThrowArgs} args - Arguments to find a Cobros
     * @example
     * // Get one Cobros
     * const cobros = await prisma.cobros.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cobrosFindFirstOrThrowArgs>(args?: SelectSubset<T, cobrosFindFirstOrThrowArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cobros
     * const cobros = await prisma.cobros.findMany()
     * 
     * // Get first 10 Cobros
     * const cobros = await prisma.cobros.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cobrosWithIdOnly = await prisma.cobros.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cobrosFindManyArgs>(args?: SelectSubset<T, cobrosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cobros.
     * @param {cobrosCreateArgs} args - Arguments to create a Cobros.
     * @example
     * // Create one Cobros
     * const Cobros = await prisma.cobros.create({
     *   data: {
     *     // ... data to create a Cobros
     *   }
     * })
     * 
     */
    create<T extends cobrosCreateArgs>(args: SelectSubset<T, cobrosCreateArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cobros.
     * @param {cobrosCreateManyArgs} args - Arguments to create many Cobros.
     * @example
     * // Create many Cobros
     * const cobros = await prisma.cobros.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cobrosCreateManyArgs>(args?: SelectSubset<T, cobrosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cobros and returns the data saved in the database.
     * @param {cobrosCreateManyAndReturnArgs} args - Arguments to create many Cobros.
     * @example
     * // Create many Cobros
     * const cobros = await prisma.cobros.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cobros and only return the `id`
     * const cobrosWithIdOnly = await prisma.cobros.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cobrosCreateManyAndReturnArgs>(args?: SelectSubset<T, cobrosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cobros.
     * @param {cobrosDeleteArgs} args - Arguments to delete one Cobros.
     * @example
     * // Delete one Cobros
     * const Cobros = await prisma.cobros.delete({
     *   where: {
     *     // ... filter to delete one Cobros
     *   }
     * })
     * 
     */
    delete<T extends cobrosDeleteArgs>(args: SelectSubset<T, cobrosDeleteArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cobros.
     * @param {cobrosUpdateArgs} args - Arguments to update one Cobros.
     * @example
     * // Update one Cobros
     * const cobros = await prisma.cobros.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cobrosUpdateArgs>(args: SelectSubset<T, cobrosUpdateArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cobros.
     * @param {cobrosDeleteManyArgs} args - Arguments to filter Cobros to delete.
     * @example
     * // Delete a few Cobros
     * const { count } = await prisma.cobros.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cobrosDeleteManyArgs>(args?: SelectSubset<T, cobrosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cobros
     * const cobros = await prisma.cobros.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cobrosUpdateManyArgs>(args: SelectSubset<T, cobrosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cobros and returns the data updated in the database.
     * @param {cobrosUpdateManyAndReturnArgs} args - Arguments to update many Cobros.
     * @example
     * // Update many Cobros
     * const cobros = await prisma.cobros.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cobros and only return the `id`
     * const cobrosWithIdOnly = await prisma.cobros.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cobrosUpdateManyAndReturnArgs>(args: SelectSubset<T, cobrosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cobros.
     * @param {cobrosUpsertArgs} args - Arguments to update or create a Cobros.
     * @example
     * // Update or create a Cobros
     * const cobros = await prisma.cobros.upsert({
     *   create: {
     *     // ... data to create a Cobros
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cobros we want to update
     *   }
     * })
     */
    upsert<T extends cobrosUpsertArgs>(args: SelectSubset<T, cobrosUpsertArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrosCountArgs} args - Arguments to filter Cobros to count.
     * @example
     * // Count the number of Cobros
     * const count = await prisma.cobros.count({
     *   where: {
     *     // ... the filter for the Cobros we want to count
     *   }
     * })
    **/
    count<T extends cobrosCountArgs>(
      args?: Subset<T, cobrosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CobrosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CobrosAggregateArgs>(args: Subset<T, CobrosAggregateArgs>): Prisma.PrismaPromise<GetCobrosAggregateType<T>>

    /**
     * Group by Cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cobrosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cobrosGroupByArgs['orderBy'] }
        : { orderBy?: cobrosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cobrosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCobrosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cobros model
   */
  readonly fields: cobrosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cobros.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cobrosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cobro_conceptos<T extends cobros$cobro_conceptosArgs<ExtArgs> = {}>(args?: Subset<T, cobros$cobro_conceptosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pacientes<T extends pacientesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, pacientesDefaultArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    historial_cobros<T extends cobros$historial_cobrosArgs<ExtArgs> = {}>(args?: Subset<T, cobros$historial_cobrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    metodos_pago_cobro<T extends cobros$metodos_pago_cobroArgs<ExtArgs> = {}>(args?: Subset<T, cobros$metodos_pago_cobroArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cobros model
   */
  interface cobrosFieldRefs {
    readonly id: FieldRef<"cobros", 'String'>
    readonly fecha_cobro: FieldRef<"cobros", 'DateTime'>
    readonly monto_total: FieldRef<"cobros", 'Float'>
    readonly notas: FieldRef<"cobros", 'String'>
    readonly created_at: FieldRef<"cobros", 'DateTime'>
    readonly updated_at: FieldRef<"cobros", 'DateTime'>
    readonly paciente_id: FieldRef<"cobros", 'String'>
    readonly usuario_id: FieldRef<"cobros", 'String'>
    readonly estado: FieldRef<"cobros", 'EstadoCobro'>
    readonly metodo_pago: FieldRef<"cobros", 'MetodoPago'>
  }
    

  // Custom InputTypes
  /**
   * cobros findUnique
   */
  export type cobrosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * Filter, which cobros to fetch.
     */
    where: cobrosWhereUniqueInput
  }

  /**
   * cobros findUniqueOrThrow
   */
  export type cobrosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * Filter, which cobros to fetch.
     */
    where: cobrosWhereUniqueInput
  }

  /**
   * cobros findFirst
   */
  export type cobrosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * Filter, which cobros to fetch.
     */
    where?: cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobros to fetch.
     */
    orderBy?: cobrosOrderByWithRelationInput | cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cobros.
     */
    cursor?: cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cobros.
     */
    distinct?: CobrosScalarFieldEnum | CobrosScalarFieldEnum[]
  }

  /**
   * cobros findFirstOrThrow
   */
  export type cobrosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * Filter, which cobros to fetch.
     */
    where?: cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobros to fetch.
     */
    orderBy?: cobrosOrderByWithRelationInput | cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cobros.
     */
    cursor?: cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cobros.
     */
    distinct?: CobrosScalarFieldEnum | CobrosScalarFieldEnum[]
  }

  /**
   * cobros findMany
   */
  export type cobrosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * Filter, which cobros to fetch.
     */
    where?: cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobros to fetch.
     */
    orderBy?: cobrosOrderByWithRelationInput | cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cobros.
     */
    cursor?: cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobros.
     */
    skip?: number
    distinct?: CobrosScalarFieldEnum | CobrosScalarFieldEnum[]
  }

  /**
   * cobros create
   */
  export type cobrosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * The data needed to create a cobros.
     */
    data: XOR<cobrosCreateInput, cobrosUncheckedCreateInput>
  }

  /**
   * cobros createMany
   */
  export type cobrosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cobros.
     */
    data: cobrosCreateManyInput | cobrosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cobros createManyAndReturn
   */
  export type cobrosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * The data used to create many cobros.
     */
    data: cobrosCreateManyInput | cobrosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cobros update
   */
  export type cobrosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * The data needed to update a cobros.
     */
    data: XOR<cobrosUpdateInput, cobrosUncheckedUpdateInput>
    /**
     * Choose, which cobros to update.
     */
    where: cobrosWhereUniqueInput
  }

  /**
   * cobros updateMany
   */
  export type cobrosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cobros.
     */
    data: XOR<cobrosUpdateManyMutationInput, cobrosUncheckedUpdateManyInput>
    /**
     * Filter which cobros to update
     */
    where?: cobrosWhereInput
    /**
     * Limit how many cobros to update.
     */
    limit?: number
  }

  /**
   * cobros updateManyAndReturn
   */
  export type cobrosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * The data used to update cobros.
     */
    data: XOR<cobrosUpdateManyMutationInput, cobrosUncheckedUpdateManyInput>
    /**
     * Filter which cobros to update
     */
    where?: cobrosWhereInput
    /**
     * Limit how many cobros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cobros upsert
   */
  export type cobrosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * The filter to search for the cobros to update in case it exists.
     */
    where: cobrosWhereUniqueInput
    /**
     * In case the cobros found by the `where` argument doesn't exist, create a new cobros with this data.
     */
    create: XOR<cobrosCreateInput, cobrosUncheckedCreateInput>
    /**
     * In case the cobros was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cobrosUpdateInput, cobrosUncheckedUpdateInput>
  }

  /**
   * cobros delete
   */
  export type cobrosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
    /**
     * Filter which cobros to delete.
     */
    where: cobrosWhereUniqueInput
  }

  /**
   * cobros deleteMany
   */
  export type cobrosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cobros to delete
     */
    where?: cobrosWhereInput
    /**
     * Limit how many cobros to delete.
     */
    limit?: number
  }

  /**
   * cobros.cobro_conceptos
   */
  export type cobros$cobro_conceptosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    where?: cobro_conceptosWhereInput
    orderBy?: cobro_conceptosOrderByWithRelationInput | cobro_conceptosOrderByWithRelationInput[]
    cursor?: cobro_conceptosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cobro_conceptosScalarFieldEnum | Cobro_conceptosScalarFieldEnum[]
  }

  /**
   * cobros.historial_cobros
   */
  export type cobros$historial_cobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    where?: historial_cobrosWhereInput
    orderBy?: historial_cobrosOrderByWithRelationInput | historial_cobrosOrderByWithRelationInput[]
    cursor?: historial_cobrosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historial_cobrosScalarFieldEnum | Historial_cobrosScalarFieldEnum[]
  }

  /**
   * cobros.metodos_pago_cobro
   */
  export type cobros$metodos_pago_cobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    where?: metodos_pago_cobroWhereInput
    orderBy?: metodos_pago_cobroOrderByWithRelationInput | metodos_pago_cobroOrderByWithRelationInput[]
    cursor?: metodos_pago_cobroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Metodos_pago_cobroScalarFieldEnum | Metodos_pago_cobroScalarFieldEnum[]
  }

  /**
   * cobros without action
   */
  export type cobrosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobros
     */
    select?: cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobros
     */
    omit?: cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrosInclude<ExtArgs> | null
  }


  /**
   * Model cobro_conceptos
   */

  export type AggregateCobro_conceptos = {
    _count: Cobro_conceptosCountAggregateOutputType | null
    _avg: Cobro_conceptosAvgAggregateOutputType | null
    _sum: Cobro_conceptosSumAggregateOutputType | null
    _min: Cobro_conceptosMinAggregateOutputType | null
    _max: Cobro_conceptosMaxAggregateOutputType | null
  }

  export type Cobro_conceptosAvgAggregateOutputType = {
    cantidad: number | null
    subtotal: number | null
    precio_unitario: number | null
  }

  export type Cobro_conceptosSumAggregateOutputType = {
    cantidad: number | null
    subtotal: number | null
    precio_unitario: number | null
  }

  export type Cobro_conceptosMinAggregateOutputType = {
    id: string | null
    cantidad: number | null
    subtotal: number | null
    created_at: Date | null
    updated_at: Date | null
    cobro_id: string | null
    consultorio_id: string | null
    precio_unitario: number | null
    servicio_id: string | null
  }

  export type Cobro_conceptosMaxAggregateOutputType = {
    id: string | null
    cantidad: number | null
    subtotal: number | null
    created_at: Date | null
    updated_at: Date | null
    cobro_id: string | null
    consultorio_id: string | null
    precio_unitario: number | null
    servicio_id: string | null
  }

  export type Cobro_conceptosCountAggregateOutputType = {
    id: number
    cantidad: number
    subtotal: number
    created_at: number
    updated_at: number
    cobro_id: number
    consultorio_id: number
    precio_unitario: number
    servicio_id: number
    _all: number
  }


  export type Cobro_conceptosAvgAggregateInputType = {
    cantidad?: true
    subtotal?: true
    precio_unitario?: true
  }

  export type Cobro_conceptosSumAggregateInputType = {
    cantidad?: true
    subtotal?: true
    precio_unitario?: true
  }

  export type Cobro_conceptosMinAggregateInputType = {
    id?: true
    cantidad?: true
    subtotal?: true
    created_at?: true
    updated_at?: true
    cobro_id?: true
    consultorio_id?: true
    precio_unitario?: true
    servicio_id?: true
  }

  export type Cobro_conceptosMaxAggregateInputType = {
    id?: true
    cantidad?: true
    subtotal?: true
    created_at?: true
    updated_at?: true
    cobro_id?: true
    consultorio_id?: true
    precio_unitario?: true
    servicio_id?: true
  }

  export type Cobro_conceptosCountAggregateInputType = {
    id?: true
    cantidad?: true
    subtotal?: true
    created_at?: true
    updated_at?: true
    cobro_id?: true
    consultorio_id?: true
    precio_unitario?: true
    servicio_id?: true
    _all?: true
  }

  export type Cobro_conceptosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cobro_conceptos to aggregate.
     */
    where?: cobro_conceptosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobro_conceptos to fetch.
     */
    orderBy?: cobro_conceptosOrderByWithRelationInput | cobro_conceptosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cobro_conceptosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobro_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobro_conceptos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cobro_conceptos
    **/
    _count?: true | Cobro_conceptosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cobro_conceptosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cobro_conceptosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cobro_conceptosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cobro_conceptosMaxAggregateInputType
  }

  export type GetCobro_conceptosAggregateType<T extends Cobro_conceptosAggregateArgs> = {
        [P in keyof T & keyof AggregateCobro_conceptos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCobro_conceptos[P]>
      : GetScalarType<T[P], AggregateCobro_conceptos[P]>
  }




  export type cobro_conceptosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobro_conceptosWhereInput
    orderBy?: cobro_conceptosOrderByWithAggregationInput | cobro_conceptosOrderByWithAggregationInput[]
    by: Cobro_conceptosScalarFieldEnum[] | Cobro_conceptosScalarFieldEnum
    having?: cobro_conceptosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cobro_conceptosCountAggregateInputType | true
    _avg?: Cobro_conceptosAvgAggregateInputType
    _sum?: Cobro_conceptosSumAggregateInputType
    _min?: Cobro_conceptosMinAggregateInputType
    _max?: Cobro_conceptosMaxAggregateInputType
  }

  export type Cobro_conceptosGroupByOutputType = {
    id: string
    cantidad: number
    subtotal: number
    created_at: Date
    updated_at: Date
    cobro_id: string
    consultorio_id: string
    precio_unitario: number
    servicio_id: string
    _count: Cobro_conceptosCountAggregateOutputType | null
    _avg: Cobro_conceptosAvgAggregateOutputType | null
    _sum: Cobro_conceptosSumAggregateOutputType | null
    _min: Cobro_conceptosMinAggregateOutputType | null
    _max: Cobro_conceptosMaxAggregateOutputType | null
  }

  type GetCobro_conceptosGroupByPayload<T extends cobro_conceptosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cobro_conceptosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cobro_conceptosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cobro_conceptosGroupByOutputType[P]>
            : GetScalarType<T[P], Cobro_conceptosGroupByOutputType[P]>
        }
      >
    >


  export type cobro_conceptosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    subtotal?: boolean
    created_at?: boolean
    updated_at?: boolean
    cobro_id?: boolean
    consultorio_id?: boolean
    precio_unitario?: boolean
    servicio_id?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    servicios?: boolean | serviciosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobro_conceptos"]>

  export type cobro_conceptosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    subtotal?: boolean
    created_at?: boolean
    updated_at?: boolean
    cobro_id?: boolean
    consultorio_id?: boolean
    precio_unitario?: boolean
    servicio_id?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    servicios?: boolean | serviciosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobro_conceptos"]>

  export type cobro_conceptosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    subtotal?: boolean
    created_at?: boolean
    updated_at?: boolean
    cobro_id?: boolean
    consultorio_id?: boolean
    precio_unitario?: boolean
    servicio_id?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    servicios?: boolean | serviciosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobro_conceptos"]>

  export type cobro_conceptosSelectScalar = {
    id?: boolean
    cantidad?: boolean
    subtotal?: boolean
    created_at?: boolean
    updated_at?: boolean
    cobro_id?: boolean
    consultorio_id?: boolean
    precio_unitario?: boolean
    servicio_id?: boolean
  }

  export type cobro_conceptosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cantidad" | "subtotal" | "created_at" | "updated_at" | "cobro_id" | "consultorio_id" | "precio_unitario" | "servicio_id", ExtArgs["result"]["cobro_conceptos"]>
  export type cobro_conceptosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    servicios?: boolean | serviciosDefaultArgs<ExtArgs>
  }
  export type cobro_conceptosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    servicios?: boolean | serviciosDefaultArgs<ExtArgs>
  }
  export type cobro_conceptosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    servicios?: boolean | serviciosDefaultArgs<ExtArgs>
  }

  export type $cobro_conceptosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cobro_conceptos"
    objects: {
      cobros: Prisma.$cobrosPayload<ExtArgs>
      consultorios: Prisma.$consultoriosPayload<ExtArgs>
      servicios: Prisma.$serviciosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cantidad: number
      subtotal: number
      created_at: Date
      updated_at: Date
      cobro_id: string
      consultorio_id: string
      precio_unitario: number
      servicio_id: string
    }, ExtArgs["result"]["cobro_conceptos"]>
    composites: {}
  }

  type cobro_conceptosGetPayload<S extends boolean | null | undefined | cobro_conceptosDefaultArgs> = $Result.GetResult<Prisma.$cobro_conceptosPayload, S>

  type cobro_conceptosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cobro_conceptosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cobro_conceptosCountAggregateInputType | true
    }

  export interface cobro_conceptosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cobro_conceptos'], meta: { name: 'cobro_conceptos' } }
    /**
     * Find zero or one Cobro_conceptos that matches the filter.
     * @param {cobro_conceptosFindUniqueArgs} args - Arguments to find a Cobro_conceptos
     * @example
     * // Get one Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cobro_conceptosFindUniqueArgs>(args: SelectSubset<T, cobro_conceptosFindUniqueArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cobro_conceptos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cobro_conceptosFindUniqueOrThrowArgs} args - Arguments to find a Cobro_conceptos
     * @example
     * // Get one Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cobro_conceptosFindUniqueOrThrowArgs>(args: SelectSubset<T, cobro_conceptosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cobro_conceptos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobro_conceptosFindFirstArgs} args - Arguments to find a Cobro_conceptos
     * @example
     * // Get one Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cobro_conceptosFindFirstArgs>(args?: SelectSubset<T, cobro_conceptosFindFirstArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cobro_conceptos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobro_conceptosFindFirstOrThrowArgs} args - Arguments to find a Cobro_conceptos
     * @example
     * // Get one Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cobro_conceptosFindFirstOrThrowArgs>(args?: SelectSubset<T, cobro_conceptosFindFirstOrThrowArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cobro_conceptos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobro_conceptosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.findMany()
     * 
     * // Get first 10 Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cobro_conceptosWithIdOnly = await prisma.cobro_conceptos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cobro_conceptosFindManyArgs>(args?: SelectSubset<T, cobro_conceptosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cobro_conceptos.
     * @param {cobro_conceptosCreateArgs} args - Arguments to create a Cobro_conceptos.
     * @example
     * // Create one Cobro_conceptos
     * const Cobro_conceptos = await prisma.cobro_conceptos.create({
     *   data: {
     *     // ... data to create a Cobro_conceptos
     *   }
     * })
     * 
     */
    create<T extends cobro_conceptosCreateArgs>(args: SelectSubset<T, cobro_conceptosCreateArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cobro_conceptos.
     * @param {cobro_conceptosCreateManyArgs} args - Arguments to create many Cobro_conceptos.
     * @example
     * // Create many Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cobro_conceptosCreateManyArgs>(args?: SelectSubset<T, cobro_conceptosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cobro_conceptos and returns the data saved in the database.
     * @param {cobro_conceptosCreateManyAndReturnArgs} args - Arguments to create many Cobro_conceptos.
     * @example
     * // Create many Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cobro_conceptos and only return the `id`
     * const cobro_conceptosWithIdOnly = await prisma.cobro_conceptos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cobro_conceptosCreateManyAndReturnArgs>(args?: SelectSubset<T, cobro_conceptosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cobro_conceptos.
     * @param {cobro_conceptosDeleteArgs} args - Arguments to delete one Cobro_conceptos.
     * @example
     * // Delete one Cobro_conceptos
     * const Cobro_conceptos = await prisma.cobro_conceptos.delete({
     *   where: {
     *     // ... filter to delete one Cobro_conceptos
     *   }
     * })
     * 
     */
    delete<T extends cobro_conceptosDeleteArgs>(args: SelectSubset<T, cobro_conceptosDeleteArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cobro_conceptos.
     * @param {cobro_conceptosUpdateArgs} args - Arguments to update one Cobro_conceptos.
     * @example
     * // Update one Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cobro_conceptosUpdateArgs>(args: SelectSubset<T, cobro_conceptosUpdateArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cobro_conceptos.
     * @param {cobro_conceptosDeleteManyArgs} args - Arguments to filter Cobro_conceptos to delete.
     * @example
     * // Delete a few Cobro_conceptos
     * const { count } = await prisma.cobro_conceptos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cobro_conceptosDeleteManyArgs>(args?: SelectSubset<T, cobro_conceptosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cobro_conceptos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobro_conceptosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cobro_conceptosUpdateManyArgs>(args: SelectSubset<T, cobro_conceptosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cobro_conceptos and returns the data updated in the database.
     * @param {cobro_conceptosUpdateManyAndReturnArgs} args - Arguments to update many Cobro_conceptos.
     * @example
     * // Update many Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cobro_conceptos and only return the `id`
     * const cobro_conceptosWithIdOnly = await prisma.cobro_conceptos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cobro_conceptosUpdateManyAndReturnArgs>(args: SelectSubset<T, cobro_conceptosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cobro_conceptos.
     * @param {cobro_conceptosUpsertArgs} args - Arguments to update or create a Cobro_conceptos.
     * @example
     * // Update or create a Cobro_conceptos
     * const cobro_conceptos = await prisma.cobro_conceptos.upsert({
     *   create: {
     *     // ... data to create a Cobro_conceptos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cobro_conceptos we want to update
     *   }
     * })
     */
    upsert<T extends cobro_conceptosUpsertArgs>(args: SelectSubset<T, cobro_conceptosUpsertArgs<ExtArgs>>): Prisma__cobro_conceptosClient<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cobro_conceptos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobro_conceptosCountArgs} args - Arguments to filter Cobro_conceptos to count.
     * @example
     * // Count the number of Cobro_conceptos
     * const count = await prisma.cobro_conceptos.count({
     *   where: {
     *     // ... the filter for the Cobro_conceptos we want to count
     *   }
     * })
    **/
    count<T extends cobro_conceptosCountArgs>(
      args?: Subset<T, cobro_conceptosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cobro_conceptosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cobro_conceptos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cobro_conceptosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cobro_conceptosAggregateArgs>(args: Subset<T, Cobro_conceptosAggregateArgs>): Prisma.PrismaPromise<GetCobro_conceptosAggregateType<T>>

    /**
     * Group by Cobro_conceptos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobro_conceptosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cobro_conceptosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cobro_conceptosGroupByArgs['orderBy'] }
        : { orderBy?: cobro_conceptosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cobro_conceptosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCobro_conceptosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cobro_conceptos model
   */
  readonly fields: cobro_conceptosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cobro_conceptos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cobro_conceptosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cobros<T extends cobrosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cobrosDefaultArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    consultorios<T extends consultoriosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, consultoriosDefaultArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    servicios<T extends serviciosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, serviciosDefaultArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cobro_conceptos model
   */
  interface cobro_conceptosFieldRefs {
    readonly id: FieldRef<"cobro_conceptos", 'String'>
    readonly cantidad: FieldRef<"cobro_conceptos", 'Int'>
    readonly subtotal: FieldRef<"cobro_conceptos", 'Float'>
    readonly created_at: FieldRef<"cobro_conceptos", 'DateTime'>
    readonly updated_at: FieldRef<"cobro_conceptos", 'DateTime'>
    readonly cobro_id: FieldRef<"cobro_conceptos", 'String'>
    readonly consultorio_id: FieldRef<"cobro_conceptos", 'String'>
    readonly precio_unitario: FieldRef<"cobro_conceptos", 'Float'>
    readonly servicio_id: FieldRef<"cobro_conceptos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cobro_conceptos findUnique
   */
  export type cobro_conceptosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * Filter, which cobro_conceptos to fetch.
     */
    where: cobro_conceptosWhereUniqueInput
  }

  /**
   * cobro_conceptos findUniqueOrThrow
   */
  export type cobro_conceptosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * Filter, which cobro_conceptos to fetch.
     */
    where: cobro_conceptosWhereUniqueInput
  }

  /**
   * cobro_conceptos findFirst
   */
  export type cobro_conceptosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * Filter, which cobro_conceptos to fetch.
     */
    where?: cobro_conceptosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobro_conceptos to fetch.
     */
    orderBy?: cobro_conceptosOrderByWithRelationInput | cobro_conceptosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cobro_conceptos.
     */
    cursor?: cobro_conceptosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobro_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobro_conceptos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cobro_conceptos.
     */
    distinct?: Cobro_conceptosScalarFieldEnum | Cobro_conceptosScalarFieldEnum[]
  }

  /**
   * cobro_conceptos findFirstOrThrow
   */
  export type cobro_conceptosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * Filter, which cobro_conceptos to fetch.
     */
    where?: cobro_conceptosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobro_conceptos to fetch.
     */
    orderBy?: cobro_conceptosOrderByWithRelationInput | cobro_conceptosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cobro_conceptos.
     */
    cursor?: cobro_conceptosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobro_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobro_conceptos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cobro_conceptos.
     */
    distinct?: Cobro_conceptosScalarFieldEnum | Cobro_conceptosScalarFieldEnum[]
  }

  /**
   * cobro_conceptos findMany
   */
  export type cobro_conceptosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * Filter, which cobro_conceptos to fetch.
     */
    where?: cobro_conceptosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobro_conceptos to fetch.
     */
    orderBy?: cobro_conceptosOrderByWithRelationInput | cobro_conceptosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cobro_conceptos.
     */
    cursor?: cobro_conceptosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobro_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobro_conceptos.
     */
    skip?: number
    distinct?: Cobro_conceptosScalarFieldEnum | Cobro_conceptosScalarFieldEnum[]
  }

  /**
   * cobro_conceptos create
   */
  export type cobro_conceptosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * The data needed to create a cobro_conceptos.
     */
    data: XOR<cobro_conceptosCreateInput, cobro_conceptosUncheckedCreateInput>
  }

  /**
   * cobro_conceptos createMany
   */
  export type cobro_conceptosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cobro_conceptos.
     */
    data: cobro_conceptosCreateManyInput | cobro_conceptosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cobro_conceptos createManyAndReturn
   */
  export type cobro_conceptosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * The data used to create many cobro_conceptos.
     */
    data: cobro_conceptosCreateManyInput | cobro_conceptosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cobro_conceptos update
   */
  export type cobro_conceptosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * The data needed to update a cobro_conceptos.
     */
    data: XOR<cobro_conceptosUpdateInput, cobro_conceptosUncheckedUpdateInput>
    /**
     * Choose, which cobro_conceptos to update.
     */
    where: cobro_conceptosWhereUniqueInput
  }

  /**
   * cobro_conceptos updateMany
   */
  export type cobro_conceptosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cobro_conceptos.
     */
    data: XOR<cobro_conceptosUpdateManyMutationInput, cobro_conceptosUncheckedUpdateManyInput>
    /**
     * Filter which cobro_conceptos to update
     */
    where?: cobro_conceptosWhereInput
    /**
     * Limit how many cobro_conceptos to update.
     */
    limit?: number
  }

  /**
   * cobro_conceptos updateManyAndReturn
   */
  export type cobro_conceptosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * The data used to update cobro_conceptos.
     */
    data: XOR<cobro_conceptosUpdateManyMutationInput, cobro_conceptosUncheckedUpdateManyInput>
    /**
     * Filter which cobro_conceptos to update
     */
    where?: cobro_conceptosWhereInput
    /**
     * Limit how many cobro_conceptos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cobro_conceptos upsert
   */
  export type cobro_conceptosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * The filter to search for the cobro_conceptos to update in case it exists.
     */
    where: cobro_conceptosWhereUniqueInput
    /**
     * In case the cobro_conceptos found by the `where` argument doesn't exist, create a new cobro_conceptos with this data.
     */
    create: XOR<cobro_conceptosCreateInput, cobro_conceptosUncheckedCreateInput>
    /**
     * In case the cobro_conceptos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cobro_conceptosUpdateInput, cobro_conceptosUncheckedUpdateInput>
  }

  /**
   * cobro_conceptos delete
   */
  export type cobro_conceptosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    /**
     * Filter which cobro_conceptos to delete.
     */
    where: cobro_conceptosWhereUniqueInput
  }

  /**
   * cobro_conceptos deleteMany
   */
  export type cobro_conceptosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cobro_conceptos to delete
     */
    where?: cobro_conceptosWhereInput
    /**
     * Limit how many cobro_conceptos to delete.
     */
    limit?: number
  }

  /**
   * cobro_conceptos without action
   */
  export type cobro_conceptosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
  }


  /**
   * Model historial_cobros
   */

  export type AggregateHistorial_cobros = {
    _count: Historial_cobrosCountAggregateOutputType | null
    _min: Historial_cobrosMinAggregateOutputType | null
    _max: Historial_cobrosMaxAggregateOutputType | null
  }

  export type Historial_cobrosMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    cobro_id: string | null
    tipo_cambio: $Enums.TipoCambio | null
    usuario_id: string | null
  }

  export type Historial_cobrosMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    cobro_id: string | null
    tipo_cambio: $Enums.TipoCambio | null
    usuario_id: string | null
  }

  export type Historial_cobrosCountAggregateOutputType = {
    id: number
    created_at: number
    cobro_id: number
    detalles_antes: number
    detalles_despues: number
    tipo_cambio: number
    usuario_id: number
    _all: number
  }


  export type Historial_cobrosMinAggregateInputType = {
    id?: true
    created_at?: true
    cobro_id?: true
    tipo_cambio?: true
    usuario_id?: true
  }

  export type Historial_cobrosMaxAggregateInputType = {
    id?: true
    created_at?: true
    cobro_id?: true
    tipo_cambio?: true
    usuario_id?: true
  }

  export type Historial_cobrosCountAggregateInputType = {
    id?: true
    created_at?: true
    cobro_id?: true
    detalles_antes?: true
    detalles_despues?: true
    tipo_cambio?: true
    usuario_id?: true
    _all?: true
  }

  export type Historial_cobrosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_cobros to aggregate.
     */
    where?: historial_cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cobros to fetch.
     */
    orderBy?: historial_cobrosOrderByWithRelationInput | historial_cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historial_cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historial_cobros
    **/
    _count?: true | Historial_cobrosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Historial_cobrosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Historial_cobrosMaxAggregateInputType
  }

  export type GetHistorial_cobrosAggregateType<T extends Historial_cobrosAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorial_cobros]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorial_cobros[P]>
      : GetScalarType<T[P], AggregateHistorial_cobros[P]>
  }




  export type historial_cobrosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_cobrosWhereInput
    orderBy?: historial_cobrosOrderByWithAggregationInput | historial_cobrosOrderByWithAggregationInput[]
    by: Historial_cobrosScalarFieldEnum[] | Historial_cobrosScalarFieldEnum
    having?: historial_cobrosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Historial_cobrosCountAggregateInputType | true
    _min?: Historial_cobrosMinAggregateInputType
    _max?: Historial_cobrosMaxAggregateInputType
  }

  export type Historial_cobrosGroupByOutputType = {
    id: string
    created_at: Date
    cobro_id: string
    detalles_antes: JsonValue | null
    detalles_despues: JsonValue
    tipo_cambio: $Enums.TipoCambio
    usuario_id: string
    _count: Historial_cobrosCountAggregateOutputType | null
    _min: Historial_cobrosMinAggregateOutputType | null
    _max: Historial_cobrosMaxAggregateOutputType | null
  }

  type GetHistorial_cobrosGroupByPayload<T extends historial_cobrosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Historial_cobrosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Historial_cobrosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Historial_cobrosGroupByOutputType[P]>
            : GetScalarType<T[P], Historial_cobrosGroupByOutputType[P]>
        }
      >
    >


  export type historial_cobrosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    cobro_id?: boolean
    detalles_antes?: boolean
    detalles_despues?: boolean
    tipo_cambio?: boolean
    usuario_id?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_cobros"]>

  export type historial_cobrosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    cobro_id?: boolean
    detalles_antes?: boolean
    detalles_despues?: boolean
    tipo_cambio?: boolean
    usuario_id?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_cobros"]>

  export type historial_cobrosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    cobro_id?: boolean
    detalles_antes?: boolean
    detalles_despues?: boolean
    tipo_cambio?: boolean
    usuario_id?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_cobros"]>

  export type historial_cobrosSelectScalar = {
    id?: boolean
    created_at?: boolean
    cobro_id?: boolean
    detalles_antes?: boolean
    detalles_despues?: boolean
    tipo_cambio?: boolean
    usuario_id?: boolean
  }

  export type historial_cobrosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "cobro_id" | "detalles_antes" | "detalles_despues" | "tipo_cambio" | "usuario_id", ExtArgs["result"]["historial_cobros"]>
  export type historial_cobrosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type historial_cobrosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type historial_cobrosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $historial_cobrosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historial_cobros"
    objects: {
      cobros: Prisma.$cobrosPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      cobro_id: string
      detalles_antes: Prisma.JsonValue | null
      detalles_despues: Prisma.JsonValue
      tipo_cambio: $Enums.TipoCambio
      usuario_id: string
    }, ExtArgs["result"]["historial_cobros"]>
    composites: {}
  }

  type historial_cobrosGetPayload<S extends boolean | null | undefined | historial_cobrosDefaultArgs> = $Result.GetResult<Prisma.$historial_cobrosPayload, S>

  type historial_cobrosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<historial_cobrosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Historial_cobrosCountAggregateInputType | true
    }

  export interface historial_cobrosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historial_cobros'], meta: { name: 'historial_cobros' } }
    /**
     * Find zero or one Historial_cobros that matches the filter.
     * @param {historial_cobrosFindUniqueArgs} args - Arguments to find a Historial_cobros
     * @example
     * // Get one Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends historial_cobrosFindUniqueArgs>(args: SelectSubset<T, historial_cobrosFindUniqueArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Historial_cobros that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {historial_cobrosFindUniqueOrThrowArgs} args - Arguments to find a Historial_cobros
     * @example
     * // Get one Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends historial_cobrosFindUniqueOrThrowArgs>(args: SelectSubset<T, historial_cobrosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historial_cobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cobrosFindFirstArgs} args - Arguments to find a Historial_cobros
     * @example
     * // Get one Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends historial_cobrosFindFirstArgs>(args?: SelectSubset<T, historial_cobrosFindFirstArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historial_cobros that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cobrosFindFirstOrThrowArgs} args - Arguments to find a Historial_cobros
     * @example
     * // Get one Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends historial_cobrosFindFirstOrThrowArgs>(args?: SelectSubset<T, historial_cobrosFindFirstOrThrowArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Historial_cobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cobrosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.findMany()
     * 
     * // Get first 10 Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historial_cobrosWithIdOnly = await prisma.historial_cobros.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends historial_cobrosFindManyArgs>(args?: SelectSubset<T, historial_cobrosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Historial_cobros.
     * @param {historial_cobrosCreateArgs} args - Arguments to create a Historial_cobros.
     * @example
     * // Create one Historial_cobros
     * const Historial_cobros = await prisma.historial_cobros.create({
     *   data: {
     *     // ... data to create a Historial_cobros
     *   }
     * })
     * 
     */
    create<T extends historial_cobrosCreateArgs>(args: SelectSubset<T, historial_cobrosCreateArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Historial_cobros.
     * @param {historial_cobrosCreateManyArgs} args - Arguments to create many Historial_cobros.
     * @example
     * // Create many Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends historial_cobrosCreateManyArgs>(args?: SelectSubset<T, historial_cobrosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Historial_cobros and returns the data saved in the database.
     * @param {historial_cobrosCreateManyAndReturnArgs} args - Arguments to create many Historial_cobros.
     * @example
     * // Create many Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Historial_cobros and only return the `id`
     * const historial_cobrosWithIdOnly = await prisma.historial_cobros.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends historial_cobrosCreateManyAndReturnArgs>(args?: SelectSubset<T, historial_cobrosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Historial_cobros.
     * @param {historial_cobrosDeleteArgs} args - Arguments to delete one Historial_cobros.
     * @example
     * // Delete one Historial_cobros
     * const Historial_cobros = await prisma.historial_cobros.delete({
     *   where: {
     *     // ... filter to delete one Historial_cobros
     *   }
     * })
     * 
     */
    delete<T extends historial_cobrosDeleteArgs>(args: SelectSubset<T, historial_cobrosDeleteArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Historial_cobros.
     * @param {historial_cobrosUpdateArgs} args - Arguments to update one Historial_cobros.
     * @example
     * // Update one Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends historial_cobrosUpdateArgs>(args: SelectSubset<T, historial_cobrosUpdateArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Historial_cobros.
     * @param {historial_cobrosDeleteManyArgs} args - Arguments to filter Historial_cobros to delete.
     * @example
     * // Delete a few Historial_cobros
     * const { count } = await prisma.historial_cobros.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends historial_cobrosDeleteManyArgs>(args?: SelectSubset<T, historial_cobrosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historial_cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cobrosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends historial_cobrosUpdateManyArgs>(args: SelectSubset<T, historial_cobrosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historial_cobros and returns the data updated in the database.
     * @param {historial_cobrosUpdateManyAndReturnArgs} args - Arguments to update many Historial_cobros.
     * @example
     * // Update many Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Historial_cobros and only return the `id`
     * const historial_cobrosWithIdOnly = await prisma.historial_cobros.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends historial_cobrosUpdateManyAndReturnArgs>(args: SelectSubset<T, historial_cobrosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Historial_cobros.
     * @param {historial_cobrosUpsertArgs} args - Arguments to update or create a Historial_cobros.
     * @example
     * // Update or create a Historial_cobros
     * const historial_cobros = await prisma.historial_cobros.upsert({
     *   create: {
     *     // ... data to create a Historial_cobros
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Historial_cobros we want to update
     *   }
     * })
     */
    upsert<T extends historial_cobrosUpsertArgs>(args: SelectSubset<T, historial_cobrosUpsertArgs<ExtArgs>>): Prisma__historial_cobrosClient<$Result.GetResult<Prisma.$historial_cobrosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Historial_cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cobrosCountArgs} args - Arguments to filter Historial_cobros to count.
     * @example
     * // Count the number of Historial_cobros
     * const count = await prisma.historial_cobros.count({
     *   where: {
     *     // ... the filter for the Historial_cobros we want to count
     *   }
     * })
    **/
    count<T extends historial_cobrosCountArgs>(
      args?: Subset<T, historial_cobrosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Historial_cobrosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Historial_cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Historial_cobrosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Historial_cobrosAggregateArgs>(args: Subset<T, Historial_cobrosAggregateArgs>): Prisma.PrismaPromise<GetHistorial_cobrosAggregateType<T>>

    /**
     * Group by Historial_cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cobrosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historial_cobrosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historial_cobrosGroupByArgs['orderBy'] }
        : { orderBy?: historial_cobrosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historial_cobrosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorial_cobrosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historial_cobros model
   */
  readonly fields: historial_cobrosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historial_cobros.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historial_cobrosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cobros<T extends cobrosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cobrosDefaultArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the historial_cobros model
   */
  interface historial_cobrosFieldRefs {
    readonly id: FieldRef<"historial_cobros", 'String'>
    readonly created_at: FieldRef<"historial_cobros", 'DateTime'>
    readonly cobro_id: FieldRef<"historial_cobros", 'String'>
    readonly detalles_antes: FieldRef<"historial_cobros", 'Json'>
    readonly detalles_despues: FieldRef<"historial_cobros", 'Json'>
    readonly tipo_cambio: FieldRef<"historial_cobros", 'TipoCambio'>
    readonly usuario_id: FieldRef<"historial_cobros", 'String'>
  }
    

  // Custom InputTypes
  /**
   * historial_cobros findUnique
   */
  export type historial_cobrosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * Filter, which historial_cobros to fetch.
     */
    where: historial_cobrosWhereUniqueInput
  }

  /**
   * historial_cobros findUniqueOrThrow
   */
  export type historial_cobrosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * Filter, which historial_cobros to fetch.
     */
    where: historial_cobrosWhereUniqueInput
  }

  /**
   * historial_cobros findFirst
   */
  export type historial_cobrosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * Filter, which historial_cobros to fetch.
     */
    where?: historial_cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cobros to fetch.
     */
    orderBy?: historial_cobrosOrderByWithRelationInput | historial_cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_cobros.
     */
    cursor?: historial_cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_cobros.
     */
    distinct?: Historial_cobrosScalarFieldEnum | Historial_cobrosScalarFieldEnum[]
  }

  /**
   * historial_cobros findFirstOrThrow
   */
  export type historial_cobrosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * Filter, which historial_cobros to fetch.
     */
    where?: historial_cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cobros to fetch.
     */
    orderBy?: historial_cobrosOrderByWithRelationInput | historial_cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_cobros.
     */
    cursor?: historial_cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_cobros.
     */
    distinct?: Historial_cobrosScalarFieldEnum | Historial_cobrosScalarFieldEnum[]
  }

  /**
   * historial_cobros findMany
   */
  export type historial_cobrosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * Filter, which historial_cobros to fetch.
     */
    where?: historial_cobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cobros to fetch.
     */
    orderBy?: historial_cobrosOrderByWithRelationInput | historial_cobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historial_cobros.
     */
    cursor?: historial_cobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cobros.
     */
    skip?: number
    distinct?: Historial_cobrosScalarFieldEnum | Historial_cobrosScalarFieldEnum[]
  }

  /**
   * historial_cobros create
   */
  export type historial_cobrosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * The data needed to create a historial_cobros.
     */
    data: XOR<historial_cobrosCreateInput, historial_cobrosUncheckedCreateInput>
  }

  /**
   * historial_cobros createMany
   */
  export type historial_cobrosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historial_cobros.
     */
    data: historial_cobrosCreateManyInput | historial_cobrosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * historial_cobros createManyAndReturn
   */
  export type historial_cobrosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * The data used to create many historial_cobros.
     */
    data: historial_cobrosCreateManyInput | historial_cobrosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * historial_cobros update
   */
  export type historial_cobrosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * The data needed to update a historial_cobros.
     */
    data: XOR<historial_cobrosUpdateInput, historial_cobrosUncheckedUpdateInput>
    /**
     * Choose, which historial_cobros to update.
     */
    where: historial_cobrosWhereUniqueInput
  }

  /**
   * historial_cobros updateMany
   */
  export type historial_cobrosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historial_cobros.
     */
    data: XOR<historial_cobrosUpdateManyMutationInput, historial_cobrosUncheckedUpdateManyInput>
    /**
     * Filter which historial_cobros to update
     */
    where?: historial_cobrosWhereInput
    /**
     * Limit how many historial_cobros to update.
     */
    limit?: number
  }

  /**
   * historial_cobros updateManyAndReturn
   */
  export type historial_cobrosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * The data used to update historial_cobros.
     */
    data: XOR<historial_cobrosUpdateManyMutationInput, historial_cobrosUncheckedUpdateManyInput>
    /**
     * Filter which historial_cobros to update
     */
    where?: historial_cobrosWhereInput
    /**
     * Limit how many historial_cobros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * historial_cobros upsert
   */
  export type historial_cobrosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * The filter to search for the historial_cobros to update in case it exists.
     */
    where: historial_cobrosWhereUniqueInput
    /**
     * In case the historial_cobros found by the `where` argument doesn't exist, create a new historial_cobros with this data.
     */
    create: XOR<historial_cobrosCreateInput, historial_cobrosUncheckedCreateInput>
    /**
     * In case the historial_cobros was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historial_cobrosUpdateInput, historial_cobrosUncheckedUpdateInput>
  }

  /**
   * historial_cobros delete
   */
  export type historial_cobrosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
    /**
     * Filter which historial_cobros to delete.
     */
    where: historial_cobrosWhereUniqueInput
  }

  /**
   * historial_cobros deleteMany
   */
  export type historial_cobrosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_cobros to delete
     */
    where?: historial_cobrosWhereInput
    /**
     * Limit how many historial_cobros to delete.
     */
    limit?: number
  }

  /**
   * historial_cobros without action
   */
  export type historial_cobrosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cobros
     */
    select?: historial_cobrosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cobros
     */
    omit?: historial_cobrosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cobrosInclude<ExtArgs> | null
  }


  /**
   * Model metodos_pago_cobro
   */

  export type AggregateMetodos_pago_cobro = {
    _count: Metodos_pago_cobroCountAggregateOutputType | null
    _avg: Metodos_pago_cobroAvgAggregateOutputType | null
    _sum: Metodos_pago_cobroSumAggregateOutputType | null
    _min: Metodos_pago_cobroMinAggregateOutputType | null
    _max: Metodos_pago_cobroMaxAggregateOutputType | null
  }

  export type Metodos_pago_cobroAvgAggregateOutputType = {
    monto: number | null
  }

  export type Metodos_pago_cobroSumAggregateOutputType = {
    monto: number | null
  }

  export type Metodos_pago_cobroMinAggregateOutputType = {
    id: string | null
    cobro_id: string | null
    metodo_pago: $Enums.MetodoPago | null
    monto: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Metodos_pago_cobroMaxAggregateOutputType = {
    id: string | null
    cobro_id: string | null
    metodo_pago: $Enums.MetodoPago | null
    monto: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Metodos_pago_cobroCountAggregateOutputType = {
    id: number
    cobro_id: number
    metodo_pago: number
    monto: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Metodos_pago_cobroAvgAggregateInputType = {
    monto?: true
  }

  export type Metodos_pago_cobroSumAggregateInputType = {
    monto?: true
  }

  export type Metodos_pago_cobroMinAggregateInputType = {
    id?: true
    cobro_id?: true
    metodo_pago?: true
    monto?: true
    created_at?: true
    updated_at?: true
  }

  export type Metodos_pago_cobroMaxAggregateInputType = {
    id?: true
    cobro_id?: true
    metodo_pago?: true
    monto?: true
    created_at?: true
    updated_at?: true
  }

  export type Metodos_pago_cobroCountAggregateInputType = {
    id?: true
    cobro_id?: true
    metodo_pago?: true
    monto?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Metodos_pago_cobroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which metodos_pago_cobro to aggregate.
     */
    where?: metodos_pago_cobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pago_cobros to fetch.
     */
    orderBy?: metodos_pago_cobroOrderByWithRelationInput | metodos_pago_cobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: metodos_pago_cobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pago_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pago_cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned metodos_pago_cobros
    **/
    _count?: true | Metodos_pago_cobroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Metodos_pago_cobroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Metodos_pago_cobroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Metodos_pago_cobroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Metodos_pago_cobroMaxAggregateInputType
  }

  export type GetMetodos_pago_cobroAggregateType<T extends Metodos_pago_cobroAggregateArgs> = {
        [P in keyof T & keyof AggregateMetodos_pago_cobro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetodos_pago_cobro[P]>
      : GetScalarType<T[P], AggregateMetodos_pago_cobro[P]>
  }




  export type metodos_pago_cobroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: metodos_pago_cobroWhereInput
    orderBy?: metodos_pago_cobroOrderByWithAggregationInput | metodos_pago_cobroOrderByWithAggregationInput[]
    by: Metodos_pago_cobroScalarFieldEnum[] | Metodos_pago_cobroScalarFieldEnum
    having?: metodos_pago_cobroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Metodos_pago_cobroCountAggregateInputType | true
    _avg?: Metodos_pago_cobroAvgAggregateInputType
    _sum?: Metodos_pago_cobroSumAggregateInputType
    _min?: Metodos_pago_cobroMinAggregateInputType
    _max?: Metodos_pago_cobroMaxAggregateInputType
  }

  export type Metodos_pago_cobroGroupByOutputType = {
    id: string
    cobro_id: string
    metodo_pago: $Enums.MetodoPago
    monto: number
    created_at: Date
    updated_at: Date
    _count: Metodos_pago_cobroCountAggregateOutputType | null
    _avg: Metodos_pago_cobroAvgAggregateOutputType | null
    _sum: Metodos_pago_cobroSumAggregateOutputType | null
    _min: Metodos_pago_cobroMinAggregateOutputType | null
    _max: Metodos_pago_cobroMaxAggregateOutputType | null
  }

  type GetMetodos_pago_cobroGroupByPayload<T extends metodos_pago_cobroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Metodos_pago_cobroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Metodos_pago_cobroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Metodos_pago_cobroGroupByOutputType[P]>
            : GetScalarType<T[P], Metodos_pago_cobroGroupByOutputType[P]>
        }
      >
    >


  export type metodos_pago_cobroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cobro_id?: boolean
    metodo_pago?: boolean
    monto?: boolean
    created_at?: boolean
    updated_at?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metodos_pago_cobro"]>

  export type metodos_pago_cobroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cobro_id?: boolean
    metodo_pago?: boolean
    monto?: boolean
    created_at?: boolean
    updated_at?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metodos_pago_cobro"]>

  export type metodos_pago_cobroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cobro_id?: boolean
    metodo_pago?: boolean
    monto?: boolean
    created_at?: boolean
    updated_at?: boolean
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metodos_pago_cobro"]>

  export type metodos_pago_cobroSelectScalar = {
    id?: boolean
    cobro_id?: boolean
    metodo_pago?: boolean
    monto?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type metodos_pago_cobroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cobro_id" | "metodo_pago" | "monto" | "created_at" | "updated_at", ExtArgs["result"]["metodos_pago_cobro"]>
  export type metodos_pago_cobroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
  }
  export type metodos_pago_cobroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
  }
  export type metodos_pago_cobroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobros?: boolean | cobrosDefaultArgs<ExtArgs>
  }

  export type $metodos_pago_cobroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "metodos_pago_cobro"
    objects: {
      cobros: Prisma.$cobrosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cobro_id: string
      metodo_pago: $Enums.MetodoPago
      monto: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["metodos_pago_cobro"]>
    composites: {}
  }

  type metodos_pago_cobroGetPayload<S extends boolean | null | undefined | metodos_pago_cobroDefaultArgs> = $Result.GetResult<Prisma.$metodos_pago_cobroPayload, S>

  type metodos_pago_cobroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<metodos_pago_cobroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Metodos_pago_cobroCountAggregateInputType | true
    }

  export interface metodos_pago_cobroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['metodos_pago_cobro'], meta: { name: 'metodos_pago_cobro' } }
    /**
     * Find zero or one Metodos_pago_cobro that matches the filter.
     * @param {metodos_pago_cobroFindUniqueArgs} args - Arguments to find a Metodos_pago_cobro
     * @example
     * // Get one Metodos_pago_cobro
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends metodos_pago_cobroFindUniqueArgs>(args: SelectSubset<T, metodos_pago_cobroFindUniqueArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Metodos_pago_cobro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {metodos_pago_cobroFindUniqueOrThrowArgs} args - Arguments to find a Metodos_pago_cobro
     * @example
     * // Get one Metodos_pago_cobro
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends metodos_pago_cobroFindUniqueOrThrowArgs>(args: SelectSubset<T, metodos_pago_cobroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Metodos_pago_cobro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pago_cobroFindFirstArgs} args - Arguments to find a Metodos_pago_cobro
     * @example
     * // Get one Metodos_pago_cobro
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends metodos_pago_cobroFindFirstArgs>(args?: SelectSubset<T, metodos_pago_cobroFindFirstArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Metodos_pago_cobro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pago_cobroFindFirstOrThrowArgs} args - Arguments to find a Metodos_pago_cobro
     * @example
     * // Get one Metodos_pago_cobro
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends metodos_pago_cobroFindFirstOrThrowArgs>(args?: SelectSubset<T, metodos_pago_cobroFindFirstOrThrowArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Metodos_pago_cobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pago_cobroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Metodos_pago_cobros
     * const metodos_pago_cobros = await prisma.metodos_pago_cobro.findMany()
     * 
     * // Get first 10 Metodos_pago_cobros
     * const metodos_pago_cobros = await prisma.metodos_pago_cobro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const metodos_pago_cobroWithIdOnly = await prisma.metodos_pago_cobro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends metodos_pago_cobroFindManyArgs>(args?: SelectSubset<T, metodos_pago_cobroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Metodos_pago_cobro.
     * @param {metodos_pago_cobroCreateArgs} args - Arguments to create a Metodos_pago_cobro.
     * @example
     * // Create one Metodos_pago_cobro
     * const Metodos_pago_cobro = await prisma.metodos_pago_cobro.create({
     *   data: {
     *     // ... data to create a Metodos_pago_cobro
     *   }
     * })
     * 
     */
    create<T extends metodos_pago_cobroCreateArgs>(args: SelectSubset<T, metodos_pago_cobroCreateArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Metodos_pago_cobros.
     * @param {metodos_pago_cobroCreateManyArgs} args - Arguments to create many Metodos_pago_cobros.
     * @example
     * // Create many Metodos_pago_cobros
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends metodos_pago_cobroCreateManyArgs>(args?: SelectSubset<T, metodos_pago_cobroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Metodos_pago_cobros and returns the data saved in the database.
     * @param {metodos_pago_cobroCreateManyAndReturnArgs} args - Arguments to create many Metodos_pago_cobros.
     * @example
     * // Create many Metodos_pago_cobros
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Metodos_pago_cobros and only return the `id`
     * const metodos_pago_cobroWithIdOnly = await prisma.metodos_pago_cobro.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends metodos_pago_cobroCreateManyAndReturnArgs>(args?: SelectSubset<T, metodos_pago_cobroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Metodos_pago_cobro.
     * @param {metodos_pago_cobroDeleteArgs} args - Arguments to delete one Metodos_pago_cobro.
     * @example
     * // Delete one Metodos_pago_cobro
     * const Metodos_pago_cobro = await prisma.metodos_pago_cobro.delete({
     *   where: {
     *     // ... filter to delete one Metodos_pago_cobro
     *   }
     * })
     * 
     */
    delete<T extends metodos_pago_cobroDeleteArgs>(args: SelectSubset<T, metodos_pago_cobroDeleteArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Metodos_pago_cobro.
     * @param {metodos_pago_cobroUpdateArgs} args - Arguments to update one Metodos_pago_cobro.
     * @example
     * // Update one Metodos_pago_cobro
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends metodos_pago_cobroUpdateArgs>(args: SelectSubset<T, metodos_pago_cobroUpdateArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Metodos_pago_cobros.
     * @param {metodos_pago_cobroDeleteManyArgs} args - Arguments to filter Metodos_pago_cobros to delete.
     * @example
     * // Delete a few Metodos_pago_cobros
     * const { count } = await prisma.metodos_pago_cobro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends metodos_pago_cobroDeleteManyArgs>(args?: SelectSubset<T, metodos_pago_cobroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Metodos_pago_cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pago_cobroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Metodos_pago_cobros
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends metodos_pago_cobroUpdateManyArgs>(args: SelectSubset<T, metodos_pago_cobroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Metodos_pago_cobros and returns the data updated in the database.
     * @param {metodos_pago_cobroUpdateManyAndReturnArgs} args - Arguments to update many Metodos_pago_cobros.
     * @example
     * // Update many Metodos_pago_cobros
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Metodos_pago_cobros and only return the `id`
     * const metodos_pago_cobroWithIdOnly = await prisma.metodos_pago_cobro.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends metodos_pago_cobroUpdateManyAndReturnArgs>(args: SelectSubset<T, metodos_pago_cobroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Metodos_pago_cobro.
     * @param {metodos_pago_cobroUpsertArgs} args - Arguments to update or create a Metodos_pago_cobro.
     * @example
     * // Update or create a Metodos_pago_cobro
     * const metodos_pago_cobro = await prisma.metodos_pago_cobro.upsert({
     *   create: {
     *     // ... data to create a Metodos_pago_cobro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Metodos_pago_cobro we want to update
     *   }
     * })
     */
    upsert<T extends metodos_pago_cobroUpsertArgs>(args: SelectSubset<T, metodos_pago_cobroUpsertArgs<ExtArgs>>): Prisma__metodos_pago_cobroClient<$Result.GetResult<Prisma.$metodos_pago_cobroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Metodos_pago_cobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pago_cobroCountArgs} args - Arguments to filter Metodos_pago_cobros to count.
     * @example
     * // Count the number of Metodos_pago_cobros
     * const count = await prisma.metodos_pago_cobro.count({
     *   where: {
     *     // ... the filter for the Metodos_pago_cobros we want to count
     *   }
     * })
    **/
    count<T extends metodos_pago_cobroCountArgs>(
      args?: Subset<T, metodos_pago_cobroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Metodos_pago_cobroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Metodos_pago_cobro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Metodos_pago_cobroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Metodos_pago_cobroAggregateArgs>(args: Subset<T, Metodos_pago_cobroAggregateArgs>): Prisma.PrismaPromise<GetMetodos_pago_cobroAggregateType<T>>

    /**
     * Group by Metodos_pago_cobro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pago_cobroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends metodos_pago_cobroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: metodos_pago_cobroGroupByArgs['orderBy'] }
        : { orderBy?: metodos_pago_cobroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, metodos_pago_cobroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetodos_pago_cobroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the metodos_pago_cobro model
   */
  readonly fields: metodos_pago_cobroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for metodos_pago_cobro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__metodos_pago_cobroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cobros<T extends cobrosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cobrosDefaultArgs<ExtArgs>>): Prisma__cobrosClient<$Result.GetResult<Prisma.$cobrosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the metodos_pago_cobro model
   */
  interface metodos_pago_cobroFieldRefs {
    readonly id: FieldRef<"metodos_pago_cobro", 'String'>
    readonly cobro_id: FieldRef<"metodos_pago_cobro", 'String'>
    readonly metodo_pago: FieldRef<"metodos_pago_cobro", 'MetodoPago'>
    readonly monto: FieldRef<"metodos_pago_cobro", 'Float'>
    readonly created_at: FieldRef<"metodos_pago_cobro", 'DateTime'>
    readonly updated_at: FieldRef<"metodos_pago_cobro", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * metodos_pago_cobro findUnique
   */
  export type metodos_pago_cobroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago_cobro to fetch.
     */
    where: metodos_pago_cobroWhereUniqueInput
  }

  /**
   * metodos_pago_cobro findUniqueOrThrow
   */
  export type metodos_pago_cobroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago_cobro to fetch.
     */
    where: metodos_pago_cobroWhereUniqueInput
  }

  /**
   * metodos_pago_cobro findFirst
   */
  export type metodos_pago_cobroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago_cobro to fetch.
     */
    where?: metodos_pago_cobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pago_cobros to fetch.
     */
    orderBy?: metodos_pago_cobroOrderByWithRelationInput | metodos_pago_cobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metodos_pago_cobros.
     */
    cursor?: metodos_pago_cobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pago_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pago_cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metodos_pago_cobros.
     */
    distinct?: Metodos_pago_cobroScalarFieldEnum | Metodos_pago_cobroScalarFieldEnum[]
  }

  /**
   * metodos_pago_cobro findFirstOrThrow
   */
  export type metodos_pago_cobroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago_cobro to fetch.
     */
    where?: metodos_pago_cobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pago_cobros to fetch.
     */
    orderBy?: metodos_pago_cobroOrderByWithRelationInput | metodos_pago_cobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metodos_pago_cobros.
     */
    cursor?: metodos_pago_cobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pago_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pago_cobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metodos_pago_cobros.
     */
    distinct?: Metodos_pago_cobroScalarFieldEnum | Metodos_pago_cobroScalarFieldEnum[]
  }

  /**
   * metodos_pago_cobro findMany
   */
  export type metodos_pago_cobroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago_cobros to fetch.
     */
    where?: metodos_pago_cobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pago_cobros to fetch.
     */
    orderBy?: metodos_pago_cobroOrderByWithRelationInput | metodos_pago_cobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing metodos_pago_cobros.
     */
    cursor?: metodos_pago_cobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pago_cobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pago_cobros.
     */
    skip?: number
    distinct?: Metodos_pago_cobroScalarFieldEnum | Metodos_pago_cobroScalarFieldEnum[]
  }

  /**
   * metodos_pago_cobro create
   */
  export type metodos_pago_cobroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * The data needed to create a metodos_pago_cobro.
     */
    data: XOR<metodos_pago_cobroCreateInput, metodos_pago_cobroUncheckedCreateInput>
  }

  /**
   * metodos_pago_cobro createMany
   */
  export type metodos_pago_cobroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many metodos_pago_cobros.
     */
    data: metodos_pago_cobroCreateManyInput | metodos_pago_cobroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * metodos_pago_cobro createManyAndReturn
   */
  export type metodos_pago_cobroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * The data used to create many metodos_pago_cobros.
     */
    data: metodos_pago_cobroCreateManyInput | metodos_pago_cobroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * metodos_pago_cobro update
   */
  export type metodos_pago_cobroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * The data needed to update a metodos_pago_cobro.
     */
    data: XOR<metodos_pago_cobroUpdateInput, metodos_pago_cobroUncheckedUpdateInput>
    /**
     * Choose, which metodos_pago_cobro to update.
     */
    where: metodos_pago_cobroWhereUniqueInput
  }

  /**
   * metodos_pago_cobro updateMany
   */
  export type metodos_pago_cobroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update metodos_pago_cobros.
     */
    data: XOR<metodos_pago_cobroUpdateManyMutationInput, metodos_pago_cobroUncheckedUpdateManyInput>
    /**
     * Filter which metodos_pago_cobros to update
     */
    where?: metodos_pago_cobroWhereInput
    /**
     * Limit how many metodos_pago_cobros to update.
     */
    limit?: number
  }

  /**
   * metodos_pago_cobro updateManyAndReturn
   */
  export type metodos_pago_cobroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * The data used to update metodos_pago_cobros.
     */
    data: XOR<metodos_pago_cobroUpdateManyMutationInput, metodos_pago_cobroUncheckedUpdateManyInput>
    /**
     * Filter which metodos_pago_cobros to update
     */
    where?: metodos_pago_cobroWhereInput
    /**
     * Limit how many metodos_pago_cobros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * metodos_pago_cobro upsert
   */
  export type metodos_pago_cobroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * The filter to search for the metodos_pago_cobro to update in case it exists.
     */
    where: metodos_pago_cobroWhereUniqueInput
    /**
     * In case the metodos_pago_cobro found by the `where` argument doesn't exist, create a new metodos_pago_cobro with this data.
     */
    create: XOR<metodos_pago_cobroCreateInput, metodos_pago_cobroUncheckedCreateInput>
    /**
     * In case the metodos_pago_cobro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<metodos_pago_cobroUpdateInput, metodos_pago_cobroUncheckedUpdateInput>
  }

  /**
   * metodos_pago_cobro delete
   */
  export type metodos_pago_cobroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
    /**
     * Filter which metodos_pago_cobro to delete.
     */
    where: metodos_pago_cobroWhereUniqueInput
  }

  /**
   * metodos_pago_cobro deleteMany
   */
  export type metodos_pago_cobroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which metodos_pago_cobros to delete
     */
    where?: metodos_pago_cobroWhereInput
    /**
     * Limit how many metodos_pago_cobros to delete.
     */
    limit?: number
  }

  /**
   * metodos_pago_cobro without action
   */
  export type metodos_pago_cobroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago_cobro
     */
    select?: metodos_pago_cobroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago_cobro
     */
    omit?: metodos_pago_cobroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pago_cobroInclude<ExtArgs> | null
  }


  /**
   * Model servicios
   */

  export type AggregateServicios = {
    _count: ServiciosCountAggregateOutputType | null
    _avg: ServiciosAvgAggregateOutputType | null
    _sum: ServiciosSumAggregateOutputType | null
    _min: ServiciosMinAggregateOutputType | null
    _max: ServiciosMaxAggregateOutputType | null
  }

  export type ServiciosAvgAggregateOutputType = {
    precio_base: number | null
  }

  export type ServiciosSumAggregateOutputType = {
    precio_base: number | null
  }

  export type ServiciosMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    descripcion: string | null
    precio_base: number | null
    created_at: Date | null
    updated_at: Date | null
    organizacion_id: string | null
  }

  export type ServiciosMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    descripcion: string | null
    precio_base: number | null
    created_at: Date | null
    updated_at: Date | null
    organizacion_id: string | null
  }

  export type ServiciosCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    precio_base: number
    created_at: number
    updated_at: number
    organizacion_id: number
    _all: number
  }


  export type ServiciosAvgAggregateInputType = {
    precio_base?: true
  }

  export type ServiciosSumAggregateInputType = {
    precio_base?: true
  }

  export type ServiciosMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    precio_base?: true
    created_at?: true
    updated_at?: true
    organizacion_id?: true
  }

  export type ServiciosMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    precio_base?: true
    created_at?: true
    updated_at?: true
    organizacion_id?: true
  }

  export type ServiciosCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    precio_base?: true
    created_at?: true
    updated_at?: true
    organizacion_id?: true
    _all?: true
  }

  export type ServiciosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servicios to aggregate.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned servicios
    **/
    _count?: true | ServiciosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiciosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiciosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiciosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiciosMaxAggregateInputType
  }

  export type GetServiciosAggregateType<T extends ServiciosAggregateArgs> = {
        [P in keyof T & keyof AggregateServicios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServicios[P]>
      : GetScalarType<T[P], AggregateServicios[P]>
  }




  export type serviciosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviciosWhereInput
    orderBy?: serviciosOrderByWithAggregationInput | serviciosOrderByWithAggregationInput[]
    by: ServiciosScalarFieldEnum[] | ServiciosScalarFieldEnum
    having?: serviciosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiciosCountAggregateInputType | true
    _avg?: ServiciosAvgAggregateInputType
    _sum?: ServiciosSumAggregateInputType
    _min?: ServiciosMinAggregateInputType
    _max?: ServiciosMaxAggregateInputType
  }

  export type ServiciosGroupByOutputType = {
    id: string
    nombre: string
    descripcion: string | null
    precio_base: number
    created_at: Date
    updated_at: Date
    organizacion_id: string
    _count: ServiciosCountAggregateOutputType | null
    _avg: ServiciosAvgAggregateOutputType | null
    _sum: ServiciosSumAggregateOutputType | null
    _min: ServiciosMinAggregateOutputType | null
    _max: ServiciosMaxAggregateOutputType | null
  }

  type GetServiciosGroupByPayload<T extends serviciosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiciosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiciosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiciosGroupByOutputType[P]>
            : GetScalarType<T[P], ServiciosGroupByOutputType[P]>
        }
      >
    >


  export type serviciosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio_base?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
    cobro_conceptos?: boolean | servicios$cobro_conceptosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    _count?: boolean | ServiciosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicios"]>

  export type serviciosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio_base?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicios"]>

  export type serviciosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio_base?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicios"]>

  export type serviciosSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio_base?: boolean
    created_at?: boolean
    updated_at?: boolean
    organizacion_id?: boolean
  }

  export type serviciosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "precio_base" | "created_at" | "updated_at" | "organizacion_id", ExtArgs["result"]["servicios"]>
  export type serviciosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cobro_conceptos?: boolean | servicios$cobro_conceptosArgs<ExtArgs>
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
    _count?: boolean | ServiciosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type serviciosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }
  export type serviciosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizaciones?: boolean | organizacionesDefaultArgs<ExtArgs>
  }

  export type $serviciosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "servicios"
    objects: {
      cobro_conceptos: Prisma.$cobro_conceptosPayload<ExtArgs>[]
      organizaciones: Prisma.$organizacionesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
      descripcion: string | null
      precio_base: number
      created_at: Date
      updated_at: Date
      organizacion_id: string
    }, ExtArgs["result"]["servicios"]>
    composites: {}
  }

  type serviciosGetPayload<S extends boolean | null | undefined | serviciosDefaultArgs> = $Result.GetResult<Prisma.$serviciosPayload, S>

  type serviciosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<serviciosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiciosCountAggregateInputType | true
    }

  export interface serviciosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['servicios'], meta: { name: 'servicios' } }
    /**
     * Find zero or one Servicios that matches the filter.
     * @param {serviciosFindUniqueArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends serviciosFindUniqueArgs>(args: SelectSubset<T, serviciosFindUniqueArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Servicios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {serviciosFindUniqueOrThrowArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends serviciosFindUniqueOrThrowArgs>(args: SelectSubset<T, serviciosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosFindFirstArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends serviciosFindFirstArgs>(args?: SelectSubset<T, serviciosFindFirstArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Servicios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosFindFirstOrThrowArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends serviciosFindFirstOrThrowArgs>(args?: SelectSubset<T, serviciosFindFirstOrThrowArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Servicios
     * const servicios = await prisma.servicios.findMany()
     * 
     * // Get first 10 Servicios
     * const servicios = await prisma.servicios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviciosWithIdOnly = await prisma.servicios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends serviciosFindManyArgs>(args?: SelectSubset<T, serviciosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Servicios.
     * @param {serviciosCreateArgs} args - Arguments to create a Servicios.
     * @example
     * // Create one Servicios
     * const Servicios = await prisma.servicios.create({
     *   data: {
     *     // ... data to create a Servicios
     *   }
     * })
     * 
     */
    create<T extends serviciosCreateArgs>(args: SelectSubset<T, serviciosCreateArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Servicios.
     * @param {serviciosCreateManyArgs} args - Arguments to create many Servicios.
     * @example
     * // Create many Servicios
     * const servicios = await prisma.servicios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends serviciosCreateManyArgs>(args?: SelectSubset<T, serviciosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Servicios and returns the data saved in the database.
     * @param {serviciosCreateManyAndReturnArgs} args - Arguments to create many Servicios.
     * @example
     * // Create many Servicios
     * const servicios = await prisma.servicios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Servicios and only return the `id`
     * const serviciosWithIdOnly = await prisma.servicios.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends serviciosCreateManyAndReturnArgs>(args?: SelectSubset<T, serviciosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Servicios.
     * @param {serviciosDeleteArgs} args - Arguments to delete one Servicios.
     * @example
     * // Delete one Servicios
     * const Servicios = await prisma.servicios.delete({
     *   where: {
     *     // ... filter to delete one Servicios
     *   }
     * })
     * 
     */
    delete<T extends serviciosDeleteArgs>(args: SelectSubset<T, serviciosDeleteArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Servicios.
     * @param {serviciosUpdateArgs} args - Arguments to update one Servicios.
     * @example
     * // Update one Servicios
     * const servicios = await prisma.servicios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends serviciosUpdateArgs>(args: SelectSubset<T, serviciosUpdateArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Servicios.
     * @param {serviciosDeleteManyArgs} args - Arguments to filter Servicios to delete.
     * @example
     * // Delete a few Servicios
     * const { count } = await prisma.servicios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends serviciosDeleteManyArgs>(args?: SelectSubset<T, serviciosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Servicios
     * const servicios = await prisma.servicios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends serviciosUpdateManyArgs>(args: SelectSubset<T, serviciosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicios and returns the data updated in the database.
     * @param {serviciosUpdateManyAndReturnArgs} args - Arguments to update many Servicios.
     * @example
     * // Update many Servicios
     * const servicios = await prisma.servicios.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Servicios and only return the `id`
     * const serviciosWithIdOnly = await prisma.servicios.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends serviciosUpdateManyAndReturnArgs>(args: SelectSubset<T, serviciosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Servicios.
     * @param {serviciosUpsertArgs} args - Arguments to update or create a Servicios.
     * @example
     * // Update or create a Servicios
     * const servicios = await prisma.servicios.upsert({
     *   create: {
     *     // ... data to create a Servicios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Servicios we want to update
     *   }
     * })
     */
    upsert<T extends serviciosUpsertArgs>(args: SelectSubset<T, serviciosUpsertArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosCountArgs} args - Arguments to filter Servicios to count.
     * @example
     * // Count the number of Servicios
     * const count = await prisma.servicios.count({
     *   where: {
     *     // ... the filter for the Servicios we want to count
     *   }
     * })
    **/
    count<T extends serviciosCountArgs>(
      args?: Subset<T, serviciosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiciosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiciosAggregateArgs>(args: Subset<T, ServiciosAggregateArgs>): Prisma.PrismaPromise<GetServiciosAggregateType<T>>

    /**
     * Group by Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends serviciosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: serviciosGroupByArgs['orderBy'] }
        : { orderBy?: serviciosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, serviciosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiciosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the servicios model
   */
  readonly fields: serviciosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for servicios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__serviciosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cobro_conceptos<T extends servicios$cobro_conceptosArgs<ExtArgs> = {}>(args?: Subset<T, servicios$cobro_conceptosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobro_conceptosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    organizaciones<T extends organizacionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, organizacionesDefaultArgs<ExtArgs>>): Prisma__organizacionesClient<$Result.GetResult<Prisma.$organizacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the servicios model
   */
  interface serviciosFieldRefs {
    readonly id: FieldRef<"servicios", 'String'>
    readonly nombre: FieldRef<"servicios", 'String'>
    readonly descripcion: FieldRef<"servicios", 'String'>
    readonly precio_base: FieldRef<"servicios", 'Float'>
    readonly created_at: FieldRef<"servicios", 'DateTime'>
    readonly updated_at: FieldRef<"servicios", 'DateTime'>
    readonly organizacion_id: FieldRef<"servicios", 'String'>
  }
    

  // Custom InputTypes
  /**
   * servicios findUnique
   */
  export type serviciosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios findUniqueOrThrow
   */
  export type serviciosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios findFirst
   */
  export type serviciosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicios.
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicios.
     */
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * servicios findFirstOrThrow
   */
  export type serviciosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicios.
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicios.
     */
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * servicios findMany
   */
  export type serviciosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing servicios.
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * servicios create
   */
  export type serviciosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * The data needed to create a servicios.
     */
    data: XOR<serviciosCreateInput, serviciosUncheckedCreateInput>
  }

  /**
   * servicios createMany
   */
  export type serviciosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many servicios.
     */
    data: serviciosCreateManyInput | serviciosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * servicios createManyAndReturn
   */
  export type serviciosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * The data used to create many servicios.
     */
    data: serviciosCreateManyInput | serviciosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * servicios update
   */
  export type serviciosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * The data needed to update a servicios.
     */
    data: XOR<serviciosUpdateInput, serviciosUncheckedUpdateInput>
    /**
     * Choose, which servicios to update.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios updateMany
   */
  export type serviciosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update servicios.
     */
    data: XOR<serviciosUpdateManyMutationInput, serviciosUncheckedUpdateManyInput>
    /**
     * Filter which servicios to update
     */
    where?: serviciosWhereInput
    /**
     * Limit how many servicios to update.
     */
    limit?: number
  }

  /**
   * servicios updateManyAndReturn
   */
  export type serviciosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * The data used to update servicios.
     */
    data: XOR<serviciosUpdateManyMutationInput, serviciosUncheckedUpdateManyInput>
    /**
     * Filter which servicios to update
     */
    where?: serviciosWhereInput
    /**
     * Limit how many servicios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * servicios upsert
   */
  export type serviciosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * The filter to search for the servicios to update in case it exists.
     */
    where: serviciosWhereUniqueInput
    /**
     * In case the servicios found by the `where` argument doesn't exist, create a new servicios with this data.
     */
    create: XOR<serviciosCreateInput, serviciosUncheckedCreateInput>
    /**
     * In case the servicios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<serviciosUpdateInput, serviciosUncheckedUpdateInput>
  }

  /**
   * servicios delete
   */
  export type serviciosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter which servicios to delete.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios deleteMany
   */
  export type serviciosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servicios to delete
     */
    where?: serviciosWhereInput
    /**
     * Limit how many servicios to delete.
     */
    limit?: number
  }

  /**
   * servicios.cobro_conceptos
   */
  export type servicios$cobro_conceptosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobro_conceptos
     */
    select?: cobro_conceptosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobro_conceptos
     */
    omit?: cobro_conceptosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobro_conceptosInclude<ExtArgs> | null
    where?: cobro_conceptosWhereInput
    orderBy?: cobro_conceptosOrderByWithRelationInput | cobro_conceptosOrderByWithRelationInput[]
    cursor?: cobro_conceptosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cobro_conceptosScalarFieldEnum | Cobro_conceptosScalarFieldEnum[]
  }

  /**
   * servicios without action
   */
  export type serviciosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
  }


  /**
   * Model precios_consultorio
   */

  export type AggregatePrecios_consultorio = {
    _count: Precios_consultorioCountAggregateOutputType | null
    _avg: Precios_consultorioAvgAggregateOutputType | null
    _sum: Precios_consultorioSumAggregateOutputType | null
    _min: Precios_consultorioMinAggregateOutputType | null
    _max: Precios_consultorioMaxAggregateOutputType | null
  }

  export type Precios_consultorioAvgAggregateOutputType = {
    precio: number | null
  }

  export type Precios_consultorioSumAggregateOutputType = {
    precio: number | null
  }

  export type Precios_consultorioMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    concepto: string | null
    consultorio_id: string | null
    precio: number | null
  }

  export type Precios_consultorioMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    concepto: string | null
    consultorio_id: string | null
    precio: number | null
  }

  export type Precios_consultorioCountAggregateOutputType = {
    id: number
    created_at: number
    updated_at: number
    concepto: number
    consultorio_id: number
    precio: number
    _all: number
  }


  export type Precios_consultorioAvgAggregateInputType = {
    precio?: true
  }

  export type Precios_consultorioSumAggregateInputType = {
    precio?: true
  }

  export type Precios_consultorioMinAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    concepto?: true
    consultorio_id?: true
    precio?: true
  }

  export type Precios_consultorioMaxAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    concepto?: true
    consultorio_id?: true
    precio?: true
  }

  export type Precios_consultorioCountAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    concepto?: true
    consultorio_id?: true
    precio?: true
    _all?: true
  }

  export type Precios_consultorioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which precios_consultorio to aggregate.
     */
    where?: precios_consultorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of precios_consultorios to fetch.
     */
    orderBy?: precios_consultorioOrderByWithRelationInput | precios_consultorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: precios_consultorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` precios_consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` precios_consultorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned precios_consultorios
    **/
    _count?: true | Precios_consultorioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Precios_consultorioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Precios_consultorioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Precios_consultorioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Precios_consultorioMaxAggregateInputType
  }

  export type GetPrecios_consultorioAggregateType<T extends Precios_consultorioAggregateArgs> = {
        [P in keyof T & keyof AggregatePrecios_consultorio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrecios_consultorio[P]>
      : GetScalarType<T[P], AggregatePrecios_consultorio[P]>
  }




  export type precios_consultorioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: precios_consultorioWhereInput
    orderBy?: precios_consultorioOrderByWithAggregationInput | precios_consultorioOrderByWithAggregationInput[]
    by: Precios_consultorioScalarFieldEnum[] | Precios_consultorioScalarFieldEnum
    having?: precios_consultorioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Precios_consultorioCountAggregateInputType | true
    _avg?: Precios_consultorioAvgAggregateInputType
    _sum?: Precios_consultorioSumAggregateInputType
    _min?: Precios_consultorioMinAggregateInputType
    _max?: Precios_consultorioMaxAggregateInputType
  }

  export type Precios_consultorioGroupByOutputType = {
    id: string
    created_at: Date
    updated_at: Date
    concepto: string
    consultorio_id: string
    precio: number
    _count: Precios_consultorioCountAggregateOutputType | null
    _avg: Precios_consultorioAvgAggregateOutputType | null
    _sum: Precios_consultorioSumAggregateOutputType | null
    _min: Precios_consultorioMinAggregateOutputType | null
    _max: Precios_consultorioMaxAggregateOutputType | null
  }

  type GetPrecios_consultorioGroupByPayload<T extends precios_consultorioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Precios_consultorioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Precios_consultorioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Precios_consultorioGroupByOutputType[P]>
            : GetScalarType<T[P], Precios_consultorioGroupByOutputType[P]>
        }
      >
    >


  export type precios_consultorioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    concepto?: boolean
    consultorio_id?: boolean
    precio?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["precios_consultorio"]>

  export type precios_consultorioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    concepto?: boolean
    consultorio_id?: boolean
    precio?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["precios_consultorio"]>

  export type precios_consultorioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    concepto?: boolean
    consultorio_id?: boolean
    precio?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["precios_consultorio"]>

  export type precios_consultorioSelectScalar = {
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    concepto?: boolean
    consultorio_id?: boolean
    precio?: boolean
  }

  export type precios_consultorioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "updated_at" | "concepto" | "consultorio_id" | "precio", ExtArgs["result"]["precios_consultorio"]>
  export type precios_consultorioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }
  export type precios_consultorioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }
  export type precios_consultorioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }

  export type $precios_consultorioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "precios_consultorio"
    objects: {
      consultorios: Prisma.$consultoriosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      updated_at: Date
      concepto: string
      consultorio_id: string
      precio: number
    }, ExtArgs["result"]["precios_consultorio"]>
    composites: {}
  }

  type precios_consultorioGetPayload<S extends boolean | null | undefined | precios_consultorioDefaultArgs> = $Result.GetResult<Prisma.$precios_consultorioPayload, S>

  type precios_consultorioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<precios_consultorioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Precios_consultorioCountAggregateInputType | true
    }

  export interface precios_consultorioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['precios_consultorio'], meta: { name: 'precios_consultorio' } }
    /**
     * Find zero or one Precios_consultorio that matches the filter.
     * @param {precios_consultorioFindUniqueArgs} args - Arguments to find a Precios_consultorio
     * @example
     * // Get one Precios_consultorio
     * const precios_consultorio = await prisma.precios_consultorio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends precios_consultorioFindUniqueArgs>(args: SelectSubset<T, precios_consultorioFindUniqueArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Precios_consultorio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {precios_consultorioFindUniqueOrThrowArgs} args - Arguments to find a Precios_consultorio
     * @example
     * // Get one Precios_consultorio
     * const precios_consultorio = await prisma.precios_consultorio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends precios_consultorioFindUniqueOrThrowArgs>(args: SelectSubset<T, precios_consultorioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Precios_consultorio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {precios_consultorioFindFirstArgs} args - Arguments to find a Precios_consultorio
     * @example
     * // Get one Precios_consultorio
     * const precios_consultorio = await prisma.precios_consultorio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends precios_consultorioFindFirstArgs>(args?: SelectSubset<T, precios_consultorioFindFirstArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Precios_consultorio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {precios_consultorioFindFirstOrThrowArgs} args - Arguments to find a Precios_consultorio
     * @example
     * // Get one Precios_consultorio
     * const precios_consultorio = await prisma.precios_consultorio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends precios_consultorioFindFirstOrThrowArgs>(args?: SelectSubset<T, precios_consultorioFindFirstOrThrowArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Precios_consultorios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {precios_consultorioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Precios_consultorios
     * const precios_consultorios = await prisma.precios_consultorio.findMany()
     * 
     * // Get first 10 Precios_consultorios
     * const precios_consultorios = await prisma.precios_consultorio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const precios_consultorioWithIdOnly = await prisma.precios_consultorio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends precios_consultorioFindManyArgs>(args?: SelectSubset<T, precios_consultorioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Precios_consultorio.
     * @param {precios_consultorioCreateArgs} args - Arguments to create a Precios_consultorio.
     * @example
     * // Create one Precios_consultorio
     * const Precios_consultorio = await prisma.precios_consultorio.create({
     *   data: {
     *     // ... data to create a Precios_consultorio
     *   }
     * })
     * 
     */
    create<T extends precios_consultorioCreateArgs>(args: SelectSubset<T, precios_consultorioCreateArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Precios_consultorios.
     * @param {precios_consultorioCreateManyArgs} args - Arguments to create many Precios_consultorios.
     * @example
     * // Create many Precios_consultorios
     * const precios_consultorio = await prisma.precios_consultorio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends precios_consultorioCreateManyArgs>(args?: SelectSubset<T, precios_consultorioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Precios_consultorios and returns the data saved in the database.
     * @param {precios_consultorioCreateManyAndReturnArgs} args - Arguments to create many Precios_consultorios.
     * @example
     * // Create many Precios_consultorios
     * const precios_consultorio = await prisma.precios_consultorio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Precios_consultorios and only return the `id`
     * const precios_consultorioWithIdOnly = await prisma.precios_consultorio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends precios_consultorioCreateManyAndReturnArgs>(args?: SelectSubset<T, precios_consultorioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Precios_consultorio.
     * @param {precios_consultorioDeleteArgs} args - Arguments to delete one Precios_consultorio.
     * @example
     * // Delete one Precios_consultorio
     * const Precios_consultorio = await prisma.precios_consultorio.delete({
     *   where: {
     *     // ... filter to delete one Precios_consultorio
     *   }
     * })
     * 
     */
    delete<T extends precios_consultorioDeleteArgs>(args: SelectSubset<T, precios_consultorioDeleteArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Precios_consultorio.
     * @param {precios_consultorioUpdateArgs} args - Arguments to update one Precios_consultorio.
     * @example
     * // Update one Precios_consultorio
     * const precios_consultorio = await prisma.precios_consultorio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends precios_consultorioUpdateArgs>(args: SelectSubset<T, precios_consultorioUpdateArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Precios_consultorios.
     * @param {precios_consultorioDeleteManyArgs} args - Arguments to filter Precios_consultorios to delete.
     * @example
     * // Delete a few Precios_consultorios
     * const { count } = await prisma.precios_consultorio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends precios_consultorioDeleteManyArgs>(args?: SelectSubset<T, precios_consultorioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Precios_consultorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {precios_consultorioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Precios_consultorios
     * const precios_consultorio = await prisma.precios_consultorio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends precios_consultorioUpdateManyArgs>(args: SelectSubset<T, precios_consultorioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Precios_consultorios and returns the data updated in the database.
     * @param {precios_consultorioUpdateManyAndReturnArgs} args - Arguments to update many Precios_consultorios.
     * @example
     * // Update many Precios_consultorios
     * const precios_consultorio = await prisma.precios_consultorio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Precios_consultorios and only return the `id`
     * const precios_consultorioWithIdOnly = await prisma.precios_consultorio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends precios_consultorioUpdateManyAndReturnArgs>(args: SelectSubset<T, precios_consultorioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Precios_consultorio.
     * @param {precios_consultorioUpsertArgs} args - Arguments to update or create a Precios_consultorio.
     * @example
     * // Update or create a Precios_consultorio
     * const precios_consultorio = await prisma.precios_consultorio.upsert({
     *   create: {
     *     // ... data to create a Precios_consultorio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Precios_consultorio we want to update
     *   }
     * })
     */
    upsert<T extends precios_consultorioUpsertArgs>(args: SelectSubset<T, precios_consultorioUpsertArgs<ExtArgs>>): Prisma__precios_consultorioClient<$Result.GetResult<Prisma.$precios_consultorioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Precios_consultorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {precios_consultorioCountArgs} args - Arguments to filter Precios_consultorios to count.
     * @example
     * // Count the number of Precios_consultorios
     * const count = await prisma.precios_consultorio.count({
     *   where: {
     *     // ... the filter for the Precios_consultorios we want to count
     *   }
     * })
    **/
    count<T extends precios_consultorioCountArgs>(
      args?: Subset<T, precios_consultorioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Precios_consultorioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Precios_consultorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Precios_consultorioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Precios_consultorioAggregateArgs>(args: Subset<T, Precios_consultorioAggregateArgs>): Prisma.PrismaPromise<GetPrecios_consultorioAggregateType<T>>

    /**
     * Group by Precios_consultorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {precios_consultorioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends precios_consultorioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: precios_consultorioGroupByArgs['orderBy'] }
        : { orderBy?: precios_consultorioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, precios_consultorioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrecios_consultorioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the precios_consultorio model
   */
  readonly fields: precios_consultorioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for precios_consultorio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__precios_consultorioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    consultorios<T extends consultoriosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, consultoriosDefaultArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the precios_consultorio model
   */
  interface precios_consultorioFieldRefs {
    readonly id: FieldRef<"precios_consultorio", 'String'>
    readonly created_at: FieldRef<"precios_consultorio", 'DateTime'>
    readonly updated_at: FieldRef<"precios_consultorio", 'DateTime'>
    readonly concepto: FieldRef<"precios_consultorio", 'String'>
    readonly consultorio_id: FieldRef<"precios_consultorio", 'String'>
    readonly precio: FieldRef<"precios_consultorio", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * precios_consultorio findUnique
   */
  export type precios_consultorioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * Filter, which precios_consultorio to fetch.
     */
    where: precios_consultorioWhereUniqueInput
  }

  /**
   * precios_consultorio findUniqueOrThrow
   */
  export type precios_consultorioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * Filter, which precios_consultorio to fetch.
     */
    where: precios_consultorioWhereUniqueInput
  }

  /**
   * precios_consultorio findFirst
   */
  export type precios_consultorioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * Filter, which precios_consultorio to fetch.
     */
    where?: precios_consultorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of precios_consultorios to fetch.
     */
    orderBy?: precios_consultorioOrderByWithRelationInput | precios_consultorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for precios_consultorios.
     */
    cursor?: precios_consultorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` precios_consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` precios_consultorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of precios_consultorios.
     */
    distinct?: Precios_consultorioScalarFieldEnum | Precios_consultorioScalarFieldEnum[]
  }

  /**
   * precios_consultorio findFirstOrThrow
   */
  export type precios_consultorioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * Filter, which precios_consultorio to fetch.
     */
    where?: precios_consultorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of precios_consultorios to fetch.
     */
    orderBy?: precios_consultorioOrderByWithRelationInput | precios_consultorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for precios_consultorios.
     */
    cursor?: precios_consultorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` precios_consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` precios_consultorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of precios_consultorios.
     */
    distinct?: Precios_consultorioScalarFieldEnum | Precios_consultorioScalarFieldEnum[]
  }

  /**
   * precios_consultorio findMany
   */
  export type precios_consultorioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * Filter, which precios_consultorios to fetch.
     */
    where?: precios_consultorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of precios_consultorios to fetch.
     */
    orderBy?: precios_consultorioOrderByWithRelationInput | precios_consultorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing precios_consultorios.
     */
    cursor?: precios_consultorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` precios_consultorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` precios_consultorios.
     */
    skip?: number
    distinct?: Precios_consultorioScalarFieldEnum | Precios_consultorioScalarFieldEnum[]
  }

  /**
   * precios_consultorio create
   */
  export type precios_consultorioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * The data needed to create a precios_consultorio.
     */
    data: XOR<precios_consultorioCreateInput, precios_consultorioUncheckedCreateInput>
  }

  /**
   * precios_consultorio createMany
   */
  export type precios_consultorioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many precios_consultorios.
     */
    data: precios_consultorioCreateManyInput | precios_consultorioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * precios_consultorio createManyAndReturn
   */
  export type precios_consultorioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * The data used to create many precios_consultorios.
     */
    data: precios_consultorioCreateManyInput | precios_consultorioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * precios_consultorio update
   */
  export type precios_consultorioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * The data needed to update a precios_consultorio.
     */
    data: XOR<precios_consultorioUpdateInput, precios_consultorioUncheckedUpdateInput>
    /**
     * Choose, which precios_consultorio to update.
     */
    where: precios_consultorioWhereUniqueInput
  }

  /**
   * precios_consultorio updateMany
   */
  export type precios_consultorioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update precios_consultorios.
     */
    data: XOR<precios_consultorioUpdateManyMutationInput, precios_consultorioUncheckedUpdateManyInput>
    /**
     * Filter which precios_consultorios to update
     */
    where?: precios_consultorioWhereInput
    /**
     * Limit how many precios_consultorios to update.
     */
    limit?: number
  }

  /**
   * precios_consultorio updateManyAndReturn
   */
  export type precios_consultorioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * The data used to update precios_consultorios.
     */
    data: XOR<precios_consultorioUpdateManyMutationInput, precios_consultorioUncheckedUpdateManyInput>
    /**
     * Filter which precios_consultorios to update
     */
    where?: precios_consultorioWhereInput
    /**
     * Limit how many precios_consultorios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * precios_consultorio upsert
   */
  export type precios_consultorioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * The filter to search for the precios_consultorio to update in case it exists.
     */
    where: precios_consultorioWhereUniqueInput
    /**
     * In case the precios_consultorio found by the `where` argument doesn't exist, create a new precios_consultorio with this data.
     */
    create: XOR<precios_consultorioCreateInput, precios_consultorioUncheckedCreateInput>
    /**
     * In case the precios_consultorio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<precios_consultorioUpdateInput, precios_consultorioUncheckedUpdateInput>
  }

  /**
   * precios_consultorio delete
   */
  export type precios_consultorioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
    /**
     * Filter which precios_consultorio to delete.
     */
    where: precios_consultorioWhereUniqueInput
  }

  /**
   * precios_consultorio deleteMany
   */
  export type precios_consultorioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which precios_consultorios to delete
     */
    where?: precios_consultorioWhereInput
    /**
     * Limit how many precios_consultorios to delete.
     */
    limit?: number
  }

  /**
   * precios_consultorio without action
   */
  export type precios_consultorioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the precios_consultorio
     */
    select?: precios_consultorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the precios_consultorio
     */
    omit?: precios_consultorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: precios_consultorioInclude<ExtArgs> | null
  }


  /**
   * Model configuracion_permisos
   */

  export type AggregateConfiguracion_permisos = {
    _count: Configuracion_permisosCountAggregateOutputType | null
    _min: Configuracion_permisosMinAggregateOutputType | null
    _max: Configuracion_permisosMaxAggregateOutputType | null
  }

  export type Configuracion_permisosMinAggregateOutputType = {
    id: string | null
    consultorio_id: string | null
    secretaria_editar_cobros: boolean | null
    secretaria_eliminar_cobros: boolean | null
    enfermera_entradas_inventario: boolean | null
    enfermera_salidas_inventario: boolean | null
    secretaria_entradas_inventario: boolean | null
    secretaria_salidas_inventario: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Configuracion_permisosMaxAggregateOutputType = {
    id: string | null
    consultorio_id: string | null
    secretaria_editar_cobros: boolean | null
    secretaria_eliminar_cobros: boolean | null
    enfermera_entradas_inventario: boolean | null
    enfermera_salidas_inventario: boolean | null
    secretaria_entradas_inventario: boolean | null
    secretaria_salidas_inventario: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Configuracion_permisosCountAggregateOutputType = {
    id: number
    consultorio_id: number
    secretaria_editar_cobros: number
    secretaria_eliminar_cobros: number
    enfermera_entradas_inventario: number
    enfermera_salidas_inventario: number
    secretaria_entradas_inventario: number
    secretaria_salidas_inventario: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Configuracion_permisosMinAggregateInputType = {
    id?: true
    consultorio_id?: true
    secretaria_editar_cobros?: true
    secretaria_eliminar_cobros?: true
    enfermera_entradas_inventario?: true
    enfermera_salidas_inventario?: true
    secretaria_entradas_inventario?: true
    secretaria_salidas_inventario?: true
    created_at?: true
    updated_at?: true
  }

  export type Configuracion_permisosMaxAggregateInputType = {
    id?: true
    consultorio_id?: true
    secretaria_editar_cobros?: true
    secretaria_eliminar_cobros?: true
    enfermera_entradas_inventario?: true
    enfermera_salidas_inventario?: true
    secretaria_entradas_inventario?: true
    secretaria_salidas_inventario?: true
    created_at?: true
    updated_at?: true
  }

  export type Configuracion_permisosCountAggregateInputType = {
    id?: true
    consultorio_id?: true
    secretaria_editar_cobros?: true
    secretaria_eliminar_cobros?: true
    enfermera_entradas_inventario?: true
    enfermera_salidas_inventario?: true
    secretaria_entradas_inventario?: true
    secretaria_salidas_inventario?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Configuracion_permisosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracion_permisos to aggregate.
     */
    where?: configuracion_permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracion_permisos to fetch.
     */
    orderBy?: configuracion_permisosOrderByWithRelationInput | configuracion_permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: configuracion_permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracion_permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracion_permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned configuracion_permisos
    **/
    _count?: true | Configuracion_permisosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Configuracion_permisosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Configuracion_permisosMaxAggregateInputType
  }

  export type GetConfiguracion_permisosAggregateType<T extends Configuracion_permisosAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracion_permisos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracion_permisos[P]>
      : GetScalarType<T[P], AggregateConfiguracion_permisos[P]>
  }




  export type configuracion_permisosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configuracion_permisosWhereInput
    orderBy?: configuracion_permisosOrderByWithAggregationInput | configuracion_permisosOrderByWithAggregationInput[]
    by: Configuracion_permisosScalarFieldEnum[] | Configuracion_permisosScalarFieldEnum
    having?: configuracion_permisosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Configuracion_permisosCountAggregateInputType | true
    _min?: Configuracion_permisosMinAggregateInputType
    _max?: Configuracion_permisosMaxAggregateInputType
  }

  export type Configuracion_permisosGroupByOutputType = {
    id: string
    consultorio_id: string
    secretaria_editar_cobros: boolean
    secretaria_eliminar_cobros: boolean
    enfermera_entradas_inventario: boolean
    enfermera_salidas_inventario: boolean
    secretaria_entradas_inventario: boolean
    secretaria_salidas_inventario: boolean
    created_at: Date
    updated_at: Date
    _count: Configuracion_permisosCountAggregateOutputType | null
    _min: Configuracion_permisosMinAggregateOutputType | null
    _max: Configuracion_permisosMaxAggregateOutputType | null
  }

  type GetConfiguracion_permisosGroupByPayload<T extends configuracion_permisosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Configuracion_permisosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Configuracion_permisosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Configuracion_permisosGroupByOutputType[P]>
            : GetScalarType<T[P], Configuracion_permisosGroupByOutputType[P]>
        }
      >
    >


  export type configuracion_permisosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    consultorio_id?: boolean
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: boolean
    updated_at?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configuracion_permisos"]>

  export type configuracion_permisosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    consultorio_id?: boolean
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: boolean
    updated_at?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configuracion_permisos"]>

  export type configuracion_permisosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    consultorio_id?: boolean
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: boolean
    updated_at?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configuracion_permisos"]>

  export type configuracion_permisosSelectScalar = {
    id?: boolean
    consultorio_id?: boolean
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type configuracion_permisosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "consultorio_id" | "secretaria_editar_cobros" | "secretaria_eliminar_cobros" | "enfermera_entradas_inventario" | "enfermera_salidas_inventario" | "secretaria_entradas_inventario" | "secretaria_salidas_inventario" | "created_at" | "updated_at", ExtArgs["result"]["configuracion_permisos"]>
  export type configuracion_permisosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }
  export type configuracion_permisosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }
  export type configuracion_permisosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
  }

  export type $configuracion_permisosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "configuracion_permisos"
    objects: {
      consultorios: Prisma.$consultoriosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      consultorio_id: string
      secretaria_editar_cobros: boolean
      secretaria_eliminar_cobros: boolean
      enfermera_entradas_inventario: boolean
      enfermera_salidas_inventario: boolean
      secretaria_entradas_inventario: boolean
      secretaria_salidas_inventario: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["configuracion_permisos"]>
    composites: {}
  }

  type configuracion_permisosGetPayload<S extends boolean | null | undefined | configuracion_permisosDefaultArgs> = $Result.GetResult<Prisma.$configuracion_permisosPayload, S>

  type configuracion_permisosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<configuracion_permisosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Configuracion_permisosCountAggregateInputType | true
    }

  export interface configuracion_permisosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['configuracion_permisos'], meta: { name: 'configuracion_permisos' } }
    /**
     * Find zero or one Configuracion_permisos that matches the filter.
     * @param {configuracion_permisosFindUniqueArgs} args - Arguments to find a Configuracion_permisos
     * @example
     * // Get one Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends configuracion_permisosFindUniqueArgs>(args: SelectSubset<T, configuracion_permisosFindUniqueArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Configuracion_permisos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {configuracion_permisosFindUniqueOrThrowArgs} args - Arguments to find a Configuracion_permisos
     * @example
     * // Get one Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends configuracion_permisosFindUniqueOrThrowArgs>(args: SelectSubset<T, configuracion_permisosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracion_permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracion_permisosFindFirstArgs} args - Arguments to find a Configuracion_permisos
     * @example
     * // Get one Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends configuracion_permisosFindFirstArgs>(args?: SelectSubset<T, configuracion_permisosFindFirstArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracion_permisos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracion_permisosFindFirstOrThrowArgs} args - Arguments to find a Configuracion_permisos
     * @example
     * // Get one Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends configuracion_permisosFindFirstOrThrowArgs>(args?: SelectSubset<T, configuracion_permisosFindFirstOrThrowArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Configuracion_permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracion_permisosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.findMany()
     * 
     * // Get first 10 Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracion_permisosWithIdOnly = await prisma.configuracion_permisos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends configuracion_permisosFindManyArgs>(args?: SelectSubset<T, configuracion_permisosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Configuracion_permisos.
     * @param {configuracion_permisosCreateArgs} args - Arguments to create a Configuracion_permisos.
     * @example
     * // Create one Configuracion_permisos
     * const Configuracion_permisos = await prisma.configuracion_permisos.create({
     *   data: {
     *     // ... data to create a Configuracion_permisos
     *   }
     * })
     * 
     */
    create<T extends configuracion_permisosCreateArgs>(args: SelectSubset<T, configuracion_permisosCreateArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Configuracion_permisos.
     * @param {configuracion_permisosCreateManyArgs} args - Arguments to create many Configuracion_permisos.
     * @example
     * // Create many Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends configuracion_permisosCreateManyArgs>(args?: SelectSubset<T, configuracion_permisosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configuracion_permisos and returns the data saved in the database.
     * @param {configuracion_permisosCreateManyAndReturnArgs} args - Arguments to create many Configuracion_permisos.
     * @example
     * // Create many Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configuracion_permisos and only return the `id`
     * const configuracion_permisosWithIdOnly = await prisma.configuracion_permisos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends configuracion_permisosCreateManyAndReturnArgs>(args?: SelectSubset<T, configuracion_permisosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Configuracion_permisos.
     * @param {configuracion_permisosDeleteArgs} args - Arguments to delete one Configuracion_permisos.
     * @example
     * // Delete one Configuracion_permisos
     * const Configuracion_permisos = await prisma.configuracion_permisos.delete({
     *   where: {
     *     // ... filter to delete one Configuracion_permisos
     *   }
     * })
     * 
     */
    delete<T extends configuracion_permisosDeleteArgs>(args: SelectSubset<T, configuracion_permisosDeleteArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Configuracion_permisos.
     * @param {configuracion_permisosUpdateArgs} args - Arguments to update one Configuracion_permisos.
     * @example
     * // Update one Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends configuracion_permisosUpdateArgs>(args: SelectSubset<T, configuracion_permisosUpdateArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Configuracion_permisos.
     * @param {configuracion_permisosDeleteManyArgs} args - Arguments to filter Configuracion_permisos to delete.
     * @example
     * // Delete a few Configuracion_permisos
     * const { count } = await prisma.configuracion_permisos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends configuracion_permisosDeleteManyArgs>(args?: SelectSubset<T, configuracion_permisosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracion_permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracion_permisosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends configuracion_permisosUpdateManyArgs>(args: SelectSubset<T, configuracion_permisosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracion_permisos and returns the data updated in the database.
     * @param {configuracion_permisosUpdateManyAndReturnArgs} args - Arguments to update many Configuracion_permisos.
     * @example
     * // Update many Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Configuracion_permisos and only return the `id`
     * const configuracion_permisosWithIdOnly = await prisma.configuracion_permisos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends configuracion_permisosUpdateManyAndReturnArgs>(args: SelectSubset<T, configuracion_permisosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Configuracion_permisos.
     * @param {configuracion_permisosUpsertArgs} args - Arguments to update or create a Configuracion_permisos.
     * @example
     * // Update or create a Configuracion_permisos
     * const configuracion_permisos = await prisma.configuracion_permisos.upsert({
     *   create: {
     *     // ... data to create a Configuracion_permisos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configuracion_permisos we want to update
     *   }
     * })
     */
    upsert<T extends configuracion_permisosUpsertArgs>(args: SelectSubset<T, configuracion_permisosUpsertArgs<ExtArgs>>): Prisma__configuracion_permisosClient<$Result.GetResult<Prisma.$configuracion_permisosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Configuracion_permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracion_permisosCountArgs} args - Arguments to filter Configuracion_permisos to count.
     * @example
     * // Count the number of Configuracion_permisos
     * const count = await prisma.configuracion_permisos.count({
     *   where: {
     *     // ... the filter for the Configuracion_permisos we want to count
     *   }
     * })
    **/
    count<T extends configuracion_permisosCountArgs>(
      args?: Subset<T, configuracion_permisosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Configuracion_permisosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configuracion_permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Configuracion_permisosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Configuracion_permisosAggregateArgs>(args: Subset<T, Configuracion_permisosAggregateArgs>): Prisma.PrismaPromise<GetConfiguracion_permisosAggregateType<T>>

    /**
     * Group by Configuracion_permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracion_permisosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends configuracion_permisosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: configuracion_permisosGroupByArgs['orderBy'] }
        : { orderBy?: configuracion_permisosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, configuracion_permisosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracion_permisosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the configuracion_permisos model
   */
  readonly fields: configuracion_permisosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for configuracion_permisos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__configuracion_permisosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    consultorios<T extends consultoriosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, consultoriosDefaultArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the configuracion_permisos model
   */
  interface configuracion_permisosFieldRefs {
    readonly id: FieldRef<"configuracion_permisos", 'String'>
    readonly consultorio_id: FieldRef<"configuracion_permisos", 'String'>
    readonly secretaria_editar_cobros: FieldRef<"configuracion_permisos", 'Boolean'>
    readonly secretaria_eliminar_cobros: FieldRef<"configuracion_permisos", 'Boolean'>
    readonly enfermera_entradas_inventario: FieldRef<"configuracion_permisos", 'Boolean'>
    readonly enfermera_salidas_inventario: FieldRef<"configuracion_permisos", 'Boolean'>
    readonly secretaria_entradas_inventario: FieldRef<"configuracion_permisos", 'Boolean'>
    readonly secretaria_salidas_inventario: FieldRef<"configuracion_permisos", 'Boolean'>
    readonly created_at: FieldRef<"configuracion_permisos", 'DateTime'>
    readonly updated_at: FieldRef<"configuracion_permisos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * configuracion_permisos findUnique
   */
  export type configuracion_permisosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * Filter, which configuracion_permisos to fetch.
     */
    where: configuracion_permisosWhereUniqueInput
  }

  /**
   * configuracion_permisos findUniqueOrThrow
   */
  export type configuracion_permisosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * Filter, which configuracion_permisos to fetch.
     */
    where: configuracion_permisosWhereUniqueInput
  }

  /**
   * configuracion_permisos findFirst
   */
  export type configuracion_permisosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * Filter, which configuracion_permisos to fetch.
     */
    where?: configuracion_permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracion_permisos to fetch.
     */
    orderBy?: configuracion_permisosOrderByWithRelationInput | configuracion_permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracion_permisos.
     */
    cursor?: configuracion_permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracion_permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracion_permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracion_permisos.
     */
    distinct?: Configuracion_permisosScalarFieldEnum | Configuracion_permisosScalarFieldEnum[]
  }

  /**
   * configuracion_permisos findFirstOrThrow
   */
  export type configuracion_permisosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * Filter, which configuracion_permisos to fetch.
     */
    where?: configuracion_permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracion_permisos to fetch.
     */
    orderBy?: configuracion_permisosOrderByWithRelationInput | configuracion_permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracion_permisos.
     */
    cursor?: configuracion_permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracion_permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracion_permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracion_permisos.
     */
    distinct?: Configuracion_permisosScalarFieldEnum | Configuracion_permisosScalarFieldEnum[]
  }

  /**
   * configuracion_permisos findMany
   */
  export type configuracion_permisosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * Filter, which configuracion_permisos to fetch.
     */
    where?: configuracion_permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracion_permisos to fetch.
     */
    orderBy?: configuracion_permisosOrderByWithRelationInput | configuracion_permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing configuracion_permisos.
     */
    cursor?: configuracion_permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracion_permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracion_permisos.
     */
    skip?: number
    distinct?: Configuracion_permisosScalarFieldEnum | Configuracion_permisosScalarFieldEnum[]
  }

  /**
   * configuracion_permisos create
   */
  export type configuracion_permisosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * The data needed to create a configuracion_permisos.
     */
    data: XOR<configuracion_permisosCreateInput, configuracion_permisosUncheckedCreateInput>
  }

  /**
   * configuracion_permisos createMany
   */
  export type configuracion_permisosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many configuracion_permisos.
     */
    data: configuracion_permisosCreateManyInput | configuracion_permisosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configuracion_permisos createManyAndReturn
   */
  export type configuracion_permisosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * The data used to create many configuracion_permisos.
     */
    data: configuracion_permisosCreateManyInput | configuracion_permisosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * configuracion_permisos update
   */
  export type configuracion_permisosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * The data needed to update a configuracion_permisos.
     */
    data: XOR<configuracion_permisosUpdateInput, configuracion_permisosUncheckedUpdateInput>
    /**
     * Choose, which configuracion_permisos to update.
     */
    where: configuracion_permisosWhereUniqueInput
  }

  /**
   * configuracion_permisos updateMany
   */
  export type configuracion_permisosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update configuracion_permisos.
     */
    data: XOR<configuracion_permisosUpdateManyMutationInput, configuracion_permisosUncheckedUpdateManyInput>
    /**
     * Filter which configuracion_permisos to update
     */
    where?: configuracion_permisosWhereInput
    /**
     * Limit how many configuracion_permisos to update.
     */
    limit?: number
  }

  /**
   * configuracion_permisos updateManyAndReturn
   */
  export type configuracion_permisosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * The data used to update configuracion_permisos.
     */
    data: XOR<configuracion_permisosUpdateManyMutationInput, configuracion_permisosUncheckedUpdateManyInput>
    /**
     * Filter which configuracion_permisos to update
     */
    where?: configuracion_permisosWhereInput
    /**
     * Limit how many configuracion_permisos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * configuracion_permisos upsert
   */
  export type configuracion_permisosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * The filter to search for the configuracion_permisos to update in case it exists.
     */
    where: configuracion_permisosWhereUniqueInput
    /**
     * In case the configuracion_permisos found by the `where` argument doesn't exist, create a new configuracion_permisos with this data.
     */
    create: XOR<configuracion_permisosCreateInput, configuracion_permisosUncheckedCreateInput>
    /**
     * In case the configuracion_permisos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<configuracion_permisosUpdateInput, configuracion_permisosUncheckedUpdateInput>
  }

  /**
   * configuracion_permisos delete
   */
  export type configuracion_permisosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
    /**
     * Filter which configuracion_permisos to delete.
     */
    where: configuracion_permisosWhereUniqueInput
  }

  /**
   * configuracion_permisos deleteMany
   */
  export type configuracion_permisosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracion_permisos to delete
     */
    where?: configuracion_permisosWhereInput
    /**
     * Limit how many configuracion_permisos to delete.
     */
    limit?: number
  }

  /**
   * configuracion_permisos without action
   */
  export type configuracion_permisosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion_permisos
     */
    select?: configuracion_permisosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion_permisos
     */
    omit?: configuracion_permisosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configuracion_permisosInclude<ExtArgs> | null
  }


  /**
   * Model citas
   */

  export type AggregateCitas = {
    _count: CitasCountAggregateOutputType | null
    _min: CitasMinAggregateOutputType | null
    _max: CitasMaxAggregateOutputType | null
  }

  export type CitasMinAggregateOutputType = {
    id: string | null
    titulo: string | null
    descripcion: string | null
    estado: $Enums.EstadoCita | null
    paciente_id: string | null
    usuario_id: string | null
    consultorio_id: string | null
    created_at: Date | null
    updated_at: Date | null
    color: string | null
    fecha_fin: Date | null
    fecha_inicio: Date | null
    es_recurrente: boolean | null
    regla_recurrencia: string | null
    id_serie: string | null
    googleEventId: string | null
  }

  export type CitasMaxAggregateOutputType = {
    id: string | null
    titulo: string | null
    descripcion: string | null
    estado: $Enums.EstadoCita | null
    paciente_id: string | null
    usuario_id: string | null
    consultorio_id: string | null
    created_at: Date | null
    updated_at: Date | null
    color: string | null
    fecha_fin: Date | null
    fecha_inicio: Date | null
    es_recurrente: boolean | null
    regla_recurrencia: string | null
    id_serie: string | null
    googleEventId: string | null
  }

  export type CitasCountAggregateOutputType = {
    id: number
    titulo: number
    descripcion: number
    estado: number
    paciente_id: number
    usuario_id: number
    consultorio_id: number
    created_at: number
    updated_at: number
    color: number
    fecha_fin: number
    fecha_inicio: number
    es_recurrente: number
    regla_recurrencia: number
    id_serie: number
    googleEventId: number
    exdates: number
    _all: number
  }


  export type CitasMinAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    estado?: true
    paciente_id?: true
    usuario_id?: true
    consultorio_id?: true
    created_at?: true
    updated_at?: true
    color?: true
    fecha_fin?: true
    fecha_inicio?: true
    es_recurrente?: true
    regla_recurrencia?: true
    id_serie?: true
    googleEventId?: true
  }

  export type CitasMaxAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    estado?: true
    paciente_id?: true
    usuario_id?: true
    consultorio_id?: true
    created_at?: true
    updated_at?: true
    color?: true
    fecha_fin?: true
    fecha_inicio?: true
    es_recurrente?: true
    regla_recurrencia?: true
    id_serie?: true
    googleEventId?: true
  }

  export type CitasCountAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    estado?: true
    paciente_id?: true
    usuario_id?: true
    consultorio_id?: true
    created_at?: true
    updated_at?: true
    color?: true
    fecha_fin?: true
    fecha_inicio?: true
    es_recurrente?: true
    regla_recurrencia?: true
    id_serie?: true
    googleEventId?: true
    exdates?: true
    _all?: true
  }

  export type CitasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which citas to aggregate.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned citas
    **/
    _count?: true | CitasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CitasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CitasMaxAggregateInputType
  }

  export type GetCitasAggregateType<T extends CitasAggregateArgs> = {
        [P in keyof T & keyof AggregateCitas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCitas[P]>
      : GetScalarType<T[P], AggregateCitas[P]>
  }




  export type citasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
    orderBy?: citasOrderByWithAggregationInput | citasOrderByWithAggregationInput[]
    by: CitasScalarFieldEnum[] | CitasScalarFieldEnum
    having?: citasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CitasCountAggregateInputType | true
    _min?: CitasMinAggregateInputType
    _max?: CitasMaxAggregateInputType
  }

  export type CitasGroupByOutputType = {
    id: string
    titulo: string | null
    descripcion: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    usuario_id: string
    consultorio_id: string
    created_at: Date
    updated_at: Date
    color: string | null
    fecha_fin: Date
    fecha_inicio: Date
    es_recurrente: boolean | null
    regla_recurrencia: string | null
    id_serie: string | null
    googleEventId: string | null
    exdates: JsonValue | null
    _count: CitasCountAggregateOutputType | null
    _min: CitasMinAggregateOutputType | null
    _max: CitasMaxAggregateOutputType | null
  }

  type GetCitasGroupByPayload<T extends citasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CitasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CitasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CitasGroupByOutputType[P]>
            : GetScalarType<T[P], CitasGroupByOutputType[P]>
        }
      >
    >


  export type citasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    estado?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    consultorio_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    color?: boolean
    fecha_fin?: boolean
    fecha_inicio?: boolean
    es_recurrente?: boolean
    regla_recurrencia?: boolean
    id_serie?: boolean
    googleEventId?: boolean
    exdates?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    whatsapp_messages?: boolean | citas$whatsapp_messagesArgs<ExtArgs>
    whatsapp_reminders?: boolean | citas$whatsapp_remindersArgs<ExtArgs>
    _count?: boolean | CitasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["citas"]>

  export type citasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    estado?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    consultorio_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    color?: boolean
    fecha_fin?: boolean
    fecha_inicio?: boolean
    es_recurrente?: boolean
    regla_recurrencia?: boolean
    id_serie?: boolean
    googleEventId?: boolean
    exdates?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["citas"]>

  export type citasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    estado?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    consultorio_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    color?: boolean
    fecha_fin?: boolean
    fecha_inicio?: boolean
    es_recurrente?: boolean
    regla_recurrencia?: boolean
    id_serie?: boolean
    googleEventId?: boolean
    exdates?: boolean
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["citas"]>

  export type citasSelectScalar = {
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    estado?: boolean
    paciente_id?: boolean
    usuario_id?: boolean
    consultorio_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    color?: boolean
    fecha_fin?: boolean
    fecha_inicio?: boolean
    es_recurrente?: boolean
    regla_recurrencia?: boolean
    id_serie?: boolean
    googleEventId?: boolean
    exdates?: boolean
  }

  export type citasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "descripcion" | "estado" | "paciente_id" | "usuario_id" | "consultorio_id" | "created_at" | "updated_at" | "color" | "fecha_fin" | "fecha_inicio" | "es_recurrente" | "regla_recurrencia" | "id_serie" | "googleEventId" | "exdates", ExtArgs["result"]["citas"]>
  export type citasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    whatsapp_messages?: boolean | citas$whatsapp_messagesArgs<ExtArgs>
    whatsapp_reminders?: boolean | citas$whatsapp_remindersArgs<ExtArgs>
    _count?: boolean | CitasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type citasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type citasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultorios?: boolean | consultoriosDefaultArgs<ExtArgs>
    pacientes?: boolean | pacientesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $citasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "citas"
    objects: {
      consultorios: Prisma.$consultoriosPayload<ExtArgs>
      pacientes: Prisma.$pacientesPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
      whatsapp_messages: Prisma.$whatsapp_messagesPayload<ExtArgs>[]
      whatsapp_reminders: Prisma.$whatsapp_remindersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      titulo: string | null
      descripcion: string | null
      estado: $Enums.EstadoCita
      paciente_id: string
      usuario_id: string
      consultorio_id: string
      created_at: Date
      updated_at: Date
      color: string | null
      fecha_fin: Date
      fecha_inicio: Date
      es_recurrente: boolean | null
      regla_recurrencia: string | null
      id_serie: string | null
      googleEventId: string | null
      exdates: Prisma.JsonValue | null
    }, ExtArgs["result"]["citas"]>
    composites: {}
  }

  type citasGetPayload<S extends boolean | null | undefined | citasDefaultArgs> = $Result.GetResult<Prisma.$citasPayload, S>

  type citasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<citasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CitasCountAggregateInputType | true
    }

  export interface citasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['citas'], meta: { name: 'citas' } }
    /**
     * Find zero or one Citas that matches the filter.
     * @param {citasFindUniqueArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends citasFindUniqueArgs>(args: SelectSubset<T, citasFindUniqueArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Citas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {citasFindUniqueOrThrowArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends citasFindUniqueOrThrowArgs>(args: SelectSubset<T, citasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Citas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasFindFirstArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends citasFindFirstArgs>(args?: SelectSubset<T, citasFindFirstArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Citas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasFindFirstOrThrowArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends citasFindFirstOrThrowArgs>(args?: SelectSubset<T, citasFindFirstOrThrowArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Citas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Citas
     * const citas = await prisma.citas.findMany()
     * 
     * // Get first 10 Citas
     * const citas = await prisma.citas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const citasWithIdOnly = await prisma.citas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends citasFindManyArgs>(args?: SelectSubset<T, citasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Citas.
     * @param {citasCreateArgs} args - Arguments to create a Citas.
     * @example
     * // Create one Citas
     * const Citas = await prisma.citas.create({
     *   data: {
     *     // ... data to create a Citas
     *   }
     * })
     * 
     */
    create<T extends citasCreateArgs>(args: SelectSubset<T, citasCreateArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Citas.
     * @param {citasCreateManyArgs} args - Arguments to create many Citas.
     * @example
     * // Create many Citas
     * const citas = await prisma.citas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends citasCreateManyArgs>(args?: SelectSubset<T, citasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Citas and returns the data saved in the database.
     * @param {citasCreateManyAndReturnArgs} args - Arguments to create many Citas.
     * @example
     * // Create many Citas
     * const citas = await prisma.citas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Citas and only return the `id`
     * const citasWithIdOnly = await prisma.citas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends citasCreateManyAndReturnArgs>(args?: SelectSubset<T, citasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Citas.
     * @param {citasDeleteArgs} args - Arguments to delete one Citas.
     * @example
     * // Delete one Citas
     * const Citas = await prisma.citas.delete({
     *   where: {
     *     // ... filter to delete one Citas
     *   }
     * })
     * 
     */
    delete<T extends citasDeleteArgs>(args: SelectSubset<T, citasDeleteArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Citas.
     * @param {citasUpdateArgs} args - Arguments to update one Citas.
     * @example
     * // Update one Citas
     * const citas = await prisma.citas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends citasUpdateArgs>(args: SelectSubset<T, citasUpdateArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Citas.
     * @param {citasDeleteManyArgs} args - Arguments to filter Citas to delete.
     * @example
     * // Delete a few Citas
     * const { count } = await prisma.citas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends citasDeleteManyArgs>(args?: SelectSubset<T, citasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Citas
     * const citas = await prisma.citas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends citasUpdateManyArgs>(args: SelectSubset<T, citasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Citas and returns the data updated in the database.
     * @param {citasUpdateManyAndReturnArgs} args - Arguments to update many Citas.
     * @example
     * // Update many Citas
     * const citas = await prisma.citas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Citas and only return the `id`
     * const citasWithIdOnly = await prisma.citas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends citasUpdateManyAndReturnArgs>(args: SelectSubset<T, citasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Citas.
     * @param {citasUpsertArgs} args - Arguments to update or create a Citas.
     * @example
     * // Update or create a Citas
     * const citas = await prisma.citas.upsert({
     *   create: {
     *     // ... data to create a Citas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Citas we want to update
     *   }
     * })
     */
    upsert<T extends citasUpsertArgs>(args: SelectSubset<T, citasUpsertArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasCountArgs} args - Arguments to filter Citas to count.
     * @example
     * // Count the number of Citas
     * const count = await prisma.citas.count({
     *   where: {
     *     // ... the filter for the Citas we want to count
     *   }
     * })
    **/
    count<T extends citasCountArgs>(
      args?: Subset<T, citasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CitasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CitasAggregateArgs>(args: Subset<T, CitasAggregateArgs>): Prisma.PrismaPromise<GetCitasAggregateType<T>>

    /**
     * Group by Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends citasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: citasGroupByArgs['orderBy'] }
        : { orderBy?: citasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, citasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCitasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the citas model
   */
  readonly fields: citasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for citas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__citasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    consultorios<T extends consultoriosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, consultoriosDefaultArgs<ExtArgs>>): Prisma__consultoriosClient<$Result.GetResult<Prisma.$consultoriosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    pacientes<T extends pacientesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, pacientesDefaultArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    whatsapp_messages<T extends citas$whatsapp_messagesArgs<ExtArgs> = {}>(args?: Subset<T, citas$whatsapp_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    whatsapp_reminders<T extends citas$whatsapp_remindersArgs<ExtArgs> = {}>(args?: Subset<T, citas$whatsapp_remindersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the citas model
   */
  interface citasFieldRefs {
    readonly id: FieldRef<"citas", 'String'>
    readonly titulo: FieldRef<"citas", 'String'>
    readonly descripcion: FieldRef<"citas", 'String'>
    readonly estado: FieldRef<"citas", 'EstadoCita'>
    readonly paciente_id: FieldRef<"citas", 'String'>
    readonly usuario_id: FieldRef<"citas", 'String'>
    readonly consultorio_id: FieldRef<"citas", 'String'>
    readonly created_at: FieldRef<"citas", 'DateTime'>
    readonly updated_at: FieldRef<"citas", 'DateTime'>
    readonly color: FieldRef<"citas", 'String'>
    readonly fecha_fin: FieldRef<"citas", 'DateTime'>
    readonly fecha_inicio: FieldRef<"citas", 'DateTime'>
    readonly es_recurrente: FieldRef<"citas", 'Boolean'>
    readonly regla_recurrencia: FieldRef<"citas", 'String'>
    readonly id_serie: FieldRef<"citas", 'String'>
    readonly googleEventId: FieldRef<"citas", 'String'>
    readonly exdates: FieldRef<"citas", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * citas findUnique
   */
  export type citasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where: citasWhereUniqueInput
  }

  /**
   * citas findUniqueOrThrow
   */
  export type citasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where: citasWhereUniqueInput
  }

  /**
   * citas findFirst
   */
  export type citasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for citas.
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of citas.
     */
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }

  /**
   * citas findFirstOrThrow
   */
  export type citasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for citas.
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of citas.
     */
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }

  /**
   * citas findMany
   */
  export type citasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing citas.
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }

  /**
   * citas create
   */
  export type citasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * The data needed to create a citas.
     */
    data: XOR<citasCreateInput, citasUncheckedCreateInput>
  }

  /**
   * citas createMany
   */
  export type citasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many citas.
     */
    data: citasCreateManyInput | citasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * citas createManyAndReturn
   */
  export type citasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * The data used to create many citas.
     */
    data: citasCreateManyInput | citasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * citas update
   */
  export type citasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * The data needed to update a citas.
     */
    data: XOR<citasUpdateInput, citasUncheckedUpdateInput>
    /**
     * Choose, which citas to update.
     */
    where: citasWhereUniqueInput
  }

  /**
   * citas updateMany
   */
  export type citasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update citas.
     */
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyInput>
    /**
     * Filter which citas to update
     */
    where?: citasWhereInput
    /**
     * Limit how many citas to update.
     */
    limit?: number
  }

  /**
   * citas updateManyAndReturn
   */
  export type citasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * The data used to update citas.
     */
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyInput>
    /**
     * Filter which citas to update
     */
    where?: citasWhereInput
    /**
     * Limit how many citas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * citas upsert
   */
  export type citasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * The filter to search for the citas to update in case it exists.
     */
    where: citasWhereUniqueInput
    /**
     * In case the citas found by the `where` argument doesn't exist, create a new citas with this data.
     */
    create: XOR<citasCreateInput, citasUncheckedCreateInput>
    /**
     * In case the citas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<citasUpdateInput, citasUncheckedUpdateInput>
  }

  /**
   * citas delete
   */
  export type citasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter which citas to delete.
     */
    where: citasWhereUniqueInput
  }

  /**
   * citas deleteMany
   */
  export type citasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which citas to delete
     */
    where?: citasWhereInput
    /**
     * Limit how many citas to delete.
     */
    limit?: number
  }

  /**
   * citas.whatsapp_messages
   */
  export type citas$whatsapp_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    where?: whatsapp_messagesWhereInput
    orderBy?: whatsapp_messagesOrderByWithRelationInput | whatsapp_messagesOrderByWithRelationInput[]
    cursor?: whatsapp_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Whatsapp_messagesScalarFieldEnum | Whatsapp_messagesScalarFieldEnum[]
  }

  /**
   * citas.whatsapp_reminders
   */
  export type citas$whatsapp_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    where?: whatsapp_remindersWhereInput
    orderBy?: whatsapp_remindersOrderByWithRelationInput | whatsapp_remindersOrderByWithRelationInput[]
    cursor?: whatsapp_remindersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Whatsapp_remindersScalarFieldEnum | Whatsapp_remindersScalarFieldEnum[]
  }

  /**
   * citas without action
   */
  export type citasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
  }


  /**
   * Model disponibilidad_medico
   */

  export type AggregateDisponibilidad_medico = {
    _count: Disponibilidad_medicoCountAggregateOutputType | null
    _avg: Disponibilidad_medicoAvgAggregateOutputType | null
    _sum: Disponibilidad_medicoSumAggregateOutputType | null
    _min: Disponibilidad_medicoMinAggregateOutputType | null
    _max: Disponibilidad_medicoMaxAggregateOutputType | null
  }

  export type Disponibilidad_medicoAvgAggregateOutputType = {
    dia_semana: number | null
  }

  export type Disponibilidad_medicoSumAggregateOutputType = {
    dia_semana: number | null
  }

  export type Disponibilidad_medicoMinAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    dia_semana: number | null
    hora_inicio: string | null
    hora_fin: string | null
  }

  export type Disponibilidad_medicoMaxAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    dia_semana: number | null
    hora_inicio: string | null
    hora_fin: string | null
  }

  export type Disponibilidad_medicoCountAggregateOutputType = {
    id: number
    usuario_id: number
    dia_semana: number
    hora_inicio: number
    hora_fin: number
    _all: number
  }


  export type Disponibilidad_medicoAvgAggregateInputType = {
    dia_semana?: true
  }

  export type Disponibilidad_medicoSumAggregateInputType = {
    dia_semana?: true
  }

  export type Disponibilidad_medicoMinAggregateInputType = {
    id?: true
    usuario_id?: true
    dia_semana?: true
    hora_inicio?: true
    hora_fin?: true
  }

  export type Disponibilidad_medicoMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    dia_semana?: true
    hora_inicio?: true
    hora_fin?: true
  }

  export type Disponibilidad_medicoCountAggregateInputType = {
    id?: true
    usuario_id?: true
    dia_semana?: true
    hora_inicio?: true
    hora_fin?: true
    _all?: true
  }

  export type Disponibilidad_medicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disponibilidad_medico to aggregate.
     */
    where?: disponibilidad_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidad_medicos to fetch.
     */
    orderBy?: disponibilidad_medicoOrderByWithRelationInput | disponibilidad_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disponibilidad_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidad_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidad_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disponibilidad_medicos
    **/
    _count?: true | Disponibilidad_medicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Disponibilidad_medicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Disponibilidad_medicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Disponibilidad_medicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Disponibilidad_medicoMaxAggregateInputType
  }

  export type GetDisponibilidad_medicoAggregateType<T extends Disponibilidad_medicoAggregateArgs> = {
        [P in keyof T & keyof AggregateDisponibilidad_medico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisponibilidad_medico[P]>
      : GetScalarType<T[P], AggregateDisponibilidad_medico[P]>
  }




  export type disponibilidad_medicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disponibilidad_medicoWhereInput
    orderBy?: disponibilidad_medicoOrderByWithAggregationInput | disponibilidad_medicoOrderByWithAggregationInput[]
    by: Disponibilidad_medicoScalarFieldEnum[] | Disponibilidad_medicoScalarFieldEnum
    having?: disponibilidad_medicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Disponibilidad_medicoCountAggregateInputType | true
    _avg?: Disponibilidad_medicoAvgAggregateInputType
    _sum?: Disponibilidad_medicoSumAggregateInputType
    _min?: Disponibilidad_medicoMinAggregateInputType
    _max?: Disponibilidad_medicoMaxAggregateInputType
  }

  export type Disponibilidad_medicoGroupByOutputType = {
    id: string
    usuario_id: string
    dia_semana: number
    hora_inicio: string
    hora_fin: string
    _count: Disponibilidad_medicoCountAggregateOutputType | null
    _avg: Disponibilidad_medicoAvgAggregateOutputType | null
    _sum: Disponibilidad_medicoSumAggregateOutputType | null
    _min: Disponibilidad_medicoMinAggregateOutputType | null
    _max: Disponibilidad_medicoMaxAggregateOutputType | null
  }

  type GetDisponibilidad_medicoGroupByPayload<T extends disponibilidad_medicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Disponibilidad_medicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Disponibilidad_medicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Disponibilidad_medicoGroupByOutputType[P]>
            : GetScalarType<T[P], Disponibilidad_medicoGroupByOutputType[P]>
        }
      >
    >


  export type disponibilidad_medicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disponibilidad_medico"]>

  export type disponibilidad_medicoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disponibilidad_medico"]>

  export type disponibilidad_medicoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disponibilidad_medico"]>

  export type disponibilidad_medicoSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
  }

  export type disponibilidad_medicoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "dia_semana" | "hora_inicio" | "hora_fin", ExtArgs["result"]["disponibilidad_medico"]>
  export type disponibilidad_medicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type disponibilidad_medicoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type disponibilidad_medicoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $disponibilidad_medicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disponibilidad_medico"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      usuario_id: string
      dia_semana: number
      hora_inicio: string
      hora_fin: string
    }, ExtArgs["result"]["disponibilidad_medico"]>
    composites: {}
  }

  type disponibilidad_medicoGetPayload<S extends boolean | null | undefined | disponibilidad_medicoDefaultArgs> = $Result.GetResult<Prisma.$disponibilidad_medicoPayload, S>

  type disponibilidad_medicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<disponibilidad_medicoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Disponibilidad_medicoCountAggregateInputType | true
    }

  export interface disponibilidad_medicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disponibilidad_medico'], meta: { name: 'disponibilidad_medico' } }
    /**
     * Find zero or one Disponibilidad_medico that matches the filter.
     * @param {disponibilidad_medicoFindUniqueArgs} args - Arguments to find a Disponibilidad_medico
     * @example
     * // Get one Disponibilidad_medico
     * const disponibilidad_medico = await prisma.disponibilidad_medico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends disponibilidad_medicoFindUniqueArgs>(args: SelectSubset<T, disponibilidad_medicoFindUniqueArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Disponibilidad_medico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {disponibilidad_medicoFindUniqueOrThrowArgs} args - Arguments to find a Disponibilidad_medico
     * @example
     * // Get one Disponibilidad_medico
     * const disponibilidad_medico = await prisma.disponibilidad_medico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends disponibilidad_medicoFindUniqueOrThrowArgs>(args: SelectSubset<T, disponibilidad_medicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disponibilidad_medico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidad_medicoFindFirstArgs} args - Arguments to find a Disponibilidad_medico
     * @example
     * // Get one Disponibilidad_medico
     * const disponibilidad_medico = await prisma.disponibilidad_medico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends disponibilidad_medicoFindFirstArgs>(args?: SelectSubset<T, disponibilidad_medicoFindFirstArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disponibilidad_medico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidad_medicoFindFirstOrThrowArgs} args - Arguments to find a Disponibilidad_medico
     * @example
     * // Get one Disponibilidad_medico
     * const disponibilidad_medico = await prisma.disponibilidad_medico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends disponibilidad_medicoFindFirstOrThrowArgs>(args?: SelectSubset<T, disponibilidad_medicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Disponibilidad_medicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidad_medicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disponibilidad_medicos
     * const disponibilidad_medicos = await prisma.disponibilidad_medico.findMany()
     * 
     * // Get first 10 Disponibilidad_medicos
     * const disponibilidad_medicos = await prisma.disponibilidad_medico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const disponibilidad_medicoWithIdOnly = await prisma.disponibilidad_medico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends disponibilidad_medicoFindManyArgs>(args?: SelectSubset<T, disponibilidad_medicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Disponibilidad_medico.
     * @param {disponibilidad_medicoCreateArgs} args - Arguments to create a Disponibilidad_medico.
     * @example
     * // Create one Disponibilidad_medico
     * const Disponibilidad_medico = await prisma.disponibilidad_medico.create({
     *   data: {
     *     // ... data to create a Disponibilidad_medico
     *   }
     * })
     * 
     */
    create<T extends disponibilidad_medicoCreateArgs>(args: SelectSubset<T, disponibilidad_medicoCreateArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Disponibilidad_medicos.
     * @param {disponibilidad_medicoCreateManyArgs} args - Arguments to create many Disponibilidad_medicos.
     * @example
     * // Create many Disponibilidad_medicos
     * const disponibilidad_medico = await prisma.disponibilidad_medico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends disponibilidad_medicoCreateManyArgs>(args?: SelectSubset<T, disponibilidad_medicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Disponibilidad_medicos and returns the data saved in the database.
     * @param {disponibilidad_medicoCreateManyAndReturnArgs} args - Arguments to create many Disponibilidad_medicos.
     * @example
     * // Create many Disponibilidad_medicos
     * const disponibilidad_medico = await prisma.disponibilidad_medico.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Disponibilidad_medicos and only return the `id`
     * const disponibilidad_medicoWithIdOnly = await prisma.disponibilidad_medico.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends disponibilidad_medicoCreateManyAndReturnArgs>(args?: SelectSubset<T, disponibilidad_medicoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Disponibilidad_medico.
     * @param {disponibilidad_medicoDeleteArgs} args - Arguments to delete one Disponibilidad_medico.
     * @example
     * // Delete one Disponibilidad_medico
     * const Disponibilidad_medico = await prisma.disponibilidad_medico.delete({
     *   where: {
     *     // ... filter to delete one Disponibilidad_medico
     *   }
     * })
     * 
     */
    delete<T extends disponibilidad_medicoDeleteArgs>(args: SelectSubset<T, disponibilidad_medicoDeleteArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Disponibilidad_medico.
     * @param {disponibilidad_medicoUpdateArgs} args - Arguments to update one Disponibilidad_medico.
     * @example
     * // Update one Disponibilidad_medico
     * const disponibilidad_medico = await prisma.disponibilidad_medico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends disponibilidad_medicoUpdateArgs>(args: SelectSubset<T, disponibilidad_medicoUpdateArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Disponibilidad_medicos.
     * @param {disponibilidad_medicoDeleteManyArgs} args - Arguments to filter Disponibilidad_medicos to delete.
     * @example
     * // Delete a few Disponibilidad_medicos
     * const { count } = await prisma.disponibilidad_medico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends disponibilidad_medicoDeleteManyArgs>(args?: SelectSubset<T, disponibilidad_medicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disponibilidad_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidad_medicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disponibilidad_medicos
     * const disponibilidad_medico = await prisma.disponibilidad_medico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends disponibilidad_medicoUpdateManyArgs>(args: SelectSubset<T, disponibilidad_medicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disponibilidad_medicos and returns the data updated in the database.
     * @param {disponibilidad_medicoUpdateManyAndReturnArgs} args - Arguments to update many Disponibilidad_medicos.
     * @example
     * // Update many Disponibilidad_medicos
     * const disponibilidad_medico = await prisma.disponibilidad_medico.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Disponibilidad_medicos and only return the `id`
     * const disponibilidad_medicoWithIdOnly = await prisma.disponibilidad_medico.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends disponibilidad_medicoUpdateManyAndReturnArgs>(args: SelectSubset<T, disponibilidad_medicoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Disponibilidad_medico.
     * @param {disponibilidad_medicoUpsertArgs} args - Arguments to update or create a Disponibilidad_medico.
     * @example
     * // Update or create a Disponibilidad_medico
     * const disponibilidad_medico = await prisma.disponibilidad_medico.upsert({
     *   create: {
     *     // ... data to create a Disponibilidad_medico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disponibilidad_medico we want to update
     *   }
     * })
     */
    upsert<T extends disponibilidad_medicoUpsertArgs>(args: SelectSubset<T, disponibilidad_medicoUpsertArgs<ExtArgs>>): Prisma__disponibilidad_medicoClient<$Result.GetResult<Prisma.$disponibilidad_medicoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Disponibilidad_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidad_medicoCountArgs} args - Arguments to filter Disponibilidad_medicos to count.
     * @example
     * // Count the number of Disponibilidad_medicos
     * const count = await prisma.disponibilidad_medico.count({
     *   where: {
     *     // ... the filter for the Disponibilidad_medicos we want to count
     *   }
     * })
    **/
    count<T extends disponibilidad_medicoCountArgs>(
      args?: Subset<T, disponibilidad_medicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Disponibilidad_medicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disponibilidad_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Disponibilidad_medicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Disponibilidad_medicoAggregateArgs>(args: Subset<T, Disponibilidad_medicoAggregateArgs>): Prisma.PrismaPromise<GetDisponibilidad_medicoAggregateType<T>>

    /**
     * Group by Disponibilidad_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidad_medicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disponibilidad_medicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disponibilidad_medicoGroupByArgs['orderBy'] }
        : { orderBy?: disponibilidad_medicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disponibilidad_medicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisponibilidad_medicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disponibilidad_medico model
   */
  readonly fields: disponibilidad_medicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disponibilidad_medico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disponibilidad_medicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the disponibilidad_medico model
   */
  interface disponibilidad_medicoFieldRefs {
    readonly id: FieldRef<"disponibilidad_medico", 'String'>
    readonly usuario_id: FieldRef<"disponibilidad_medico", 'String'>
    readonly dia_semana: FieldRef<"disponibilidad_medico", 'Int'>
    readonly hora_inicio: FieldRef<"disponibilidad_medico", 'String'>
    readonly hora_fin: FieldRef<"disponibilidad_medico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * disponibilidad_medico findUnique
   */
  export type disponibilidad_medicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidad_medico to fetch.
     */
    where: disponibilidad_medicoWhereUniqueInput
  }

  /**
   * disponibilidad_medico findUniqueOrThrow
   */
  export type disponibilidad_medicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidad_medico to fetch.
     */
    where: disponibilidad_medicoWhereUniqueInput
  }

  /**
   * disponibilidad_medico findFirst
   */
  export type disponibilidad_medicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidad_medico to fetch.
     */
    where?: disponibilidad_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidad_medicos to fetch.
     */
    orderBy?: disponibilidad_medicoOrderByWithRelationInput | disponibilidad_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disponibilidad_medicos.
     */
    cursor?: disponibilidad_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidad_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidad_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disponibilidad_medicos.
     */
    distinct?: Disponibilidad_medicoScalarFieldEnum | Disponibilidad_medicoScalarFieldEnum[]
  }

  /**
   * disponibilidad_medico findFirstOrThrow
   */
  export type disponibilidad_medicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidad_medico to fetch.
     */
    where?: disponibilidad_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidad_medicos to fetch.
     */
    orderBy?: disponibilidad_medicoOrderByWithRelationInput | disponibilidad_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disponibilidad_medicos.
     */
    cursor?: disponibilidad_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidad_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidad_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disponibilidad_medicos.
     */
    distinct?: Disponibilidad_medicoScalarFieldEnum | Disponibilidad_medicoScalarFieldEnum[]
  }

  /**
   * disponibilidad_medico findMany
   */
  export type disponibilidad_medicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidad_medicos to fetch.
     */
    where?: disponibilidad_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidad_medicos to fetch.
     */
    orderBy?: disponibilidad_medicoOrderByWithRelationInput | disponibilidad_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disponibilidad_medicos.
     */
    cursor?: disponibilidad_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidad_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidad_medicos.
     */
    skip?: number
    distinct?: Disponibilidad_medicoScalarFieldEnum | Disponibilidad_medicoScalarFieldEnum[]
  }

  /**
   * disponibilidad_medico create
   */
  export type disponibilidad_medicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * The data needed to create a disponibilidad_medico.
     */
    data: XOR<disponibilidad_medicoCreateInput, disponibilidad_medicoUncheckedCreateInput>
  }

  /**
   * disponibilidad_medico createMany
   */
  export type disponibilidad_medicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disponibilidad_medicos.
     */
    data: disponibilidad_medicoCreateManyInput | disponibilidad_medicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disponibilidad_medico createManyAndReturn
   */
  export type disponibilidad_medicoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * The data used to create many disponibilidad_medicos.
     */
    data: disponibilidad_medicoCreateManyInput | disponibilidad_medicoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * disponibilidad_medico update
   */
  export type disponibilidad_medicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * The data needed to update a disponibilidad_medico.
     */
    data: XOR<disponibilidad_medicoUpdateInput, disponibilidad_medicoUncheckedUpdateInput>
    /**
     * Choose, which disponibilidad_medico to update.
     */
    where: disponibilidad_medicoWhereUniqueInput
  }

  /**
   * disponibilidad_medico updateMany
   */
  export type disponibilidad_medicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disponibilidad_medicos.
     */
    data: XOR<disponibilidad_medicoUpdateManyMutationInput, disponibilidad_medicoUncheckedUpdateManyInput>
    /**
     * Filter which disponibilidad_medicos to update
     */
    where?: disponibilidad_medicoWhereInput
    /**
     * Limit how many disponibilidad_medicos to update.
     */
    limit?: number
  }

  /**
   * disponibilidad_medico updateManyAndReturn
   */
  export type disponibilidad_medicoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * The data used to update disponibilidad_medicos.
     */
    data: XOR<disponibilidad_medicoUpdateManyMutationInput, disponibilidad_medicoUncheckedUpdateManyInput>
    /**
     * Filter which disponibilidad_medicos to update
     */
    where?: disponibilidad_medicoWhereInput
    /**
     * Limit how many disponibilidad_medicos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * disponibilidad_medico upsert
   */
  export type disponibilidad_medicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * The filter to search for the disponibilidad_medico to update in case it exists.
     */
    where: disponibilidad_medicoWhereUniqueInput
    /**
     * In case the disponibilidad_medico found by the `where` argument doesn't exist, create a new disponibilidad_medico with this data.
     */
    create: XOR<disponibilidad_medicoCreateInput, disponibilidad_medicoUncheckedCreateInput>
    /**
     * In case the disponibilidad_medico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disponibilidad_medicoUpdateInput, disponibilidad_medicoUncheckedUpdateInput>
  }

  /**
   * disponibilidad_medico delete
   */
  export type disponibilidad_medicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
    /**
     * Filter which disponibilidad_medico to delete.
     */
    where: disponibilidad_medicoWhereUniqueInput
  }

  /**
   * disponibilidad_medico deleteMany
   */
  export type disponibilidad_medicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disponibilidad_medicos to delete
     */
    where?: disponibilidad_medicoWhereInput
    /**
     * Limit how many disponibilidad_medicos to delete.
     */
    limit?: number
  }

  /**
   * disponibilidad_medico without action
   */
  export type disponibilidad_medicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidad_medico
     */
    select?: disponibilidad_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disponibilidad_medico
     */
    omit?: disponibilidad_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disponibilidad_medicoInclude<ExtArgs> | null
  }


  /**
   * Model bloqueo_medico
   */

  export type AggregateBloqueo_medico = {
    _count: Bloqueo_medicoCountAggregateOutputType | null
    _min: Bloqueo_medicoMinAggregateOutputType | null
    _max: Bloqueo_medicoMaxAggregateOutputType | null
  }

  export type Bloqueo_medicoMinAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    motivo: string | null
  }

  export type Bloqueo_medicoMaxAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    motivo: string | null
  }

  export type Bloqueo_medicoCountAggregateOutputType = {
    id: number
    usuario_id: number
    fecha_inicio: number
    fecha_fin: number
    motivo: number
    _all: number
  }


  export type Bloqueo_medicoMinAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha_inicio?: true
    fecha_fin?: true
    motivo?: true
  }

  export type Bloqueo_medicoMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha_inicio?: true
    fecha_fin?: true
    motivo?: true
  }

  export type Bloqueo_medicoCountAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha_inicio?: true
    fecha_fin?: true
    motivo?: true
    _all?: true
  }

  export type Bloqueo_medicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bloqueo_medico to aggregate.
     */
    where?: bloqueo_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueo_medicos to fetch.
     */
    orderBy?: bloqueo_medicoOrderByWithRelationInput | bloqueo_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bloqueo_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueo_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueo_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned bloqueo_medicos
    **/
    _count?: true | Bloqueo_medicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Bloqueo_medicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Bloqueo_medicoMaxAggregateInputType
  }

  export type GetBloqueo_medicoAggregateType<T extends Bloqueo_medicoAggregateArgs> = {
        [P in keyof T & keyof AggregateBloqueo_medico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBloqueo_medico[P]>
      : GetScalarType<T[P], AggregateBloqueo_medico[P]>
  }




  export type bloqueo_medicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bloqueo_medicoWhereInput
    orderBy?: bloqueo_medicoOrderByWithAggregationInput | bloqueo_medicoOrderByWithAggregationInput[]
    by: Bloqueo_medicoScalarFieldEnum[] | Bloqueo_medicoScalarFieldEnum
    having?: bloqueo_medicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Bloqueo_medicoCountAggregateInputType | true
    _min?: Bloqueo_medicoMinAggregateInputType
    _max?: Bloqueo_medicoMaxAggregateInputType
  }

  export type Bloqueo_medicoGroupByOutputType = {
    id: string
    usuario_id: string
    fecha_inicio: Date
    fecha_fin: Date
    motivo: string | null
    _count: Bloqueo_medicoCountAggregateOutputType | null
    _min: Bloqueo_medicoMinAggregateOutputType | null
    _max: Bloqueo_medicoMaxAggregateOutputType | null
  }

  type GetBloqueo_medicoGroupByPayload<T extends bloqueo_medicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Bloqueo_medicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Bloqueo_medicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Bloqueo_medicoGroupByOutputType[P]>
            : GetScalarType<T[P], Bloqueo_medicoGroupByOutputType[P]>
        }
      >
    >


  export type bloqueo_medicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
  }, ExtArgs["result"]["bloqueo_medico"]>

  export type bloqueo_medicoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
  }, ExtArgs["result"]["bloqueo_medico"]>

  export type bloqueo_medicoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
  }, ExtArgs["result"]["bloqueo_medico"]>

  export type bloqueo_medicoSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
  }

  export type bloqueo_medicoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "fecha_inicio" | "fecha_fin" | "motivo", ExtArgs["result"]["bloqueo_medico"]>

  export type $bloqueo_medicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bloqueo_medico"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      usuario_id: string
      fecha_inicio: Date
      fecha_fin: Date
      motivo: string | null
    }, ExtArgs["result"]["bloqueo_medico"]>
    composites: {}
  }

  type bloqueo_medicoGetPayload<S extends boolean | null | undefined | bloqueo_medicoDefaultArgs> = $Result.GetResult<Prisma.$bloqueo_medicoPayload, S>

  type bloqueo_medicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bloqueo_medicoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Bloqueo_medicoCountAggregateInputType | true
    }

  export interface bloqueo_medicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bloqueo_medico'], meta: { name: 'bloqueo_medico' } }
    /**
     * Find zero or one Bloqueo_medico that matches the filter.
     * @param {bloqueo_medicoFindUniqueArgs} args - Arguments to find a Bloqueo_medico
     * @example
     * // Get one Bloqueo_medico
     * const bloqueo_medico = await prisma.bloqueo_medico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bloqueo_medicoFindUniqueArgs>(args: SelectSubset<T, bloqueo_medicoFindUniqueArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Bloqueo_medico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bloqueo_medicoFindUniqueOrThrowArgs} args - Arguments to find a Bloqueo_medico
     * @example
     * // Get one Bloqueo_medico
     * const bloqueo_medico = await prisma.bloqueo_medico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bloqueo_medicoFindUniqueOrThrowArgs>(args: SelectSubset<T, bloqueo_medicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bloqueo_medico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueo_medicoFindFirstArgs} args - Arguments to find a Bloqueo_medico
     * @example
     * // Get one Bloqueo_medico
     * const bloqueo_medico = await prisma.bloqueo_medico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bloqueo_medicoFindFirstArgs>(args?: SelectSubset<T, bloqueo_medicoFindFirstArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bloqueo_medico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueo_medicoFindFirstOrThrowArgs} args - Arguments to find a Bloqueo_medico
     * @example
     * // Get one Bloqueo_medico
     * const bloqueo_medico = await prisma.bloqueo_medico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bloqueo_medicoFindFirstOrThrowArgs>(args?: SelectSubset<T, bloqueo_medicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bloqueo_medicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueo_medicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bloqueo_medicos
     * const bloqueo_medicos = await prisma.bloqueo_medico.findMany()
     * 
     * // Get first 10 Bloqueo_medicos
     * const bloqueo_medicos = await prisma.bloqueo_medico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bloqueo_medicoWithIdOnly = await prisma.bloqueo_medico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bloqueo_medicoFindManyArgs>(args?: SelectSubset<T, bloqueo_medicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Bloqueo_medico.
     * @param {bloqueo_medicoCreateArgs} args - Arguments to create a Bloqueo_medico.
     * @example
     * // Create one Bloqueo_medico
     * const Bloqueo_medico = await prisma.bloqueo_medico.create({
     *   data: {
     *     // ... data to create a Bloqueo_medico
     *   }
     * })
     * 
     */
    create<T extends bloqueo_medicoCreateArgs>(args: SelectSubset<T, bloqueo_medicoCreateArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bloqueo_medicos.
     * @param {bloqueo_medicoCreateManyArgs} args - Arguments to create many Bloqueo_medicos.
     * @example
     * // Create many Bloqueo_medicos
     * const bloqueo_medico = await prisma.bloqueo_medico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bloqueo_medicoCreateManyArgs>(args?: SelectSubset<T, bloqueo_medicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bloqueo_medicos and returns the data saved in the database.
     * @param {bloqueo_medicoCreateManyAndReturnArgs} args - Arguments to create many Bloqueo_medicos.
     * @example
     * // Create many Bloqueo_medicos
     * const bloqueo_medico = await prisma.bloqueo_medico.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bloqueo_medicos and only return the `id`
     * const bloqueo_medicoWithIdOnly = await prisma.bloqueo_medico.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends bloqueo_medicoCreateManyAndReturnArgs>(args?: SelectSubset<T, bloqueo_medicoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Bloqueo_medico.
     * @param {bloqueo_medicoDeleteArgs} args - Arguments to delete one Bloqueo_medico.
     * @example
     * // Delete one Bloqueo_medico
     * const Bloqueo_medico = await prisma.bloqueo_medico.delete({
     *   where: {
     *     // ... filter to delete one Bloqueo_medico
     *   }
     * })
     * 
     */
    delete<T extends bloqueo_medicoDeleteArgs>(args: SelectSubset<T, bloqueo_medicoDeleteArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Bloqueo_medico.
     * @param {bloqueo_medicoUpdateArgs} args - Arguments to update one Bloqueo_medico.
     * @example
     * // Update one Bloqueo_medico
     * const bloqueo_medico = await prisma.bloqueo_medico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bloqueo_medicoUpdateArgs>(args: SelectSubset<T, bloqueo_medicoUpdateArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bloqueo_medicos.
     * @param {bloqueo_medicoDeleteManyArgs} args - Arguments to filter Bloqueo_medicos to delete.
     * @example
     * // Delete a few Bloqueo_medicos
     * const { count } = await prisma.bloqueo_medico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bloqueo_medicoDeleteManyArgs>(args?: SelectSubset<T, bloqueo_medicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bloqueo_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueo_medicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bloqueo_medicos
     * const bloqueo_medico = await prisma.bloqueo_medico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bloqueo_medicoUpdateManyArgs>(args: SelectSubset<T, bloqueo_medicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bloqueo_medicos and returns the data updated in the database.
     * @param {bloqueo_medicoUpdateManyAndReturnArgs} args - Arguments to update many Bloqueo_medicos.
     * @example
     * // Update many Bloqueo_medicos
     * const bloqueo_medico = await prisma.bloqueo_medico.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bloqueo_medicos and only return the `id`
     * const bloqueo_medicoWithIdOnly = await prisma.bloqueo_medico.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends bloqueo_medicoUpdateManyAndReturnArgs>(args: SelectSubset<T, bloqueo_medicoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Bloqueo_medico.
     * @param {bloqueo_medicoUpsertArgs} args - Arguments to update or create a Bloqueo_medico.
     * @example
     * // Update or create a Bloqueo_medico
     * const bloqueo_medico = await prisma.bloqueo_medico.upsert({
     *   create: {
     *     // ... data to create a Bloqueo_medico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bloqueo_medico we want to update
     *   }
     * })
     */
    upsert<T extends bloqueo_medicoUpsertArgs>(args: SelectSubset<T, bloqueo_medicoUpsertArgs<ExtArgs>>): Prisma__bloqueo_medicoClient<$Result.GetResult<Prisma.$bloqueo_medicoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bloqueo_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueo_medicoCountArgs} args - Arguments to filter Bloqueo_medicos to count.
     * @example
     * // Count the number of Bloqueo_medicos
     * const count = await prisma.bloqueo_medico.count({
     *   where: {
     *     // ... the filter for the Bloqueo_medicos we want to count
     *   }
     * })
    **/
    count<T extends bloqueo_medicoCountArgs>(
      args?: Subset<T, bloqueo_medicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Bloqueo_medicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bloqueo_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Bloqueo_medicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Bloqueo_medicoAggregateArgs>(args: Subset<T, Bloqueo_medicoAggregateArgs>): Prisma.PrismaPromise<GetBloqueo_medicoAggregateType<T>>

    /**
     * Group by Bloqueo_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueo_medicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bloqueo_medicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bloqueo_medicoGroupByArgs['orderBy'] }
        : { orderBy?: bloqueo_medicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bloqueo_medicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBloqueo_medicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bloqueo_medico model
   */
  readonly fields: bloqueo_medicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bloqueo_medico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bloqueo_medicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the bloqueo_medico model
   */
  interface bloqueo_medicoFieldRefs {
    readonly id: FieldRef<"bloqueo_medico", 'String'>
    readonly usuario_id: FieldRef<"bloqueo_medico", 'String'>
    readonly fecha_inicio: FieldRef<"bloqueo_medico", 'DateTime'>
    readonly fecha_fin: FieldRef<"bloqueo_medico", 'DateTime'>
    readonly motivo: FieldRef<"bloqueo_medico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * bloqueo_medico findUnique
   */
  export type bloqueo_medicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * Filter, which bloqueo_medico to fetch.
     */
    where: bloqueo_medicoWhereUniqueInput
  }

  /**
   * bloqueo_medico findUniqueOrThrow
   */
  export type bloqueo_medicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * Filter, which bloqueo_medico to fetch.
     */
    where: bloqueo_medicoWhereUniqueInput
  }

  /**
   * bloqueo_medico findFirst
   */
  export type bloqueo_medicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * Filter, which bloqueo_medico to fetch.
     */
    where?: bloqueo_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueo_medicos to fetch.
     */
    orderBy?: bloqueo_medicoOrderByWithRelationInput | bloqueo_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bloqueo_medicos.
     */
    cursor?: bloqueo_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueo_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueo_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bloqueo_medicos.
     */
    distinct?: Bloqueo_medicoScalarFieldEnum | Bloqueo_medicoScalarFieldEnum[]
  }

  /**
   * bloqueo_medico findFirstOrThrow
   */
  export type bloqueo_medicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * Filter, which bloqueo_medico to fetch.
     */
    where?: bloqueo_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueo_medicos to fetch.
     */
    orderBy?: bloqueo_medicoOrderByWithRelationInput | bloqueo_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bloqueo_medicos.
     */
    cursor?: bloqueo_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueo_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueo_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bloqueo_medicos.
     */
    distinct?: Bloqueo_medicoScalarFieldEnum | Bloqueo_medicoScalarFieldEnum[]
  }

  /**
   * bloqueo_medico findMany
   */
  export type bloqueo_medicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * Filter, which bloqueo_medicos to fetch.
     */
    where?: bloqueo_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueo_medicos to fetch.
     */
    orderBy?: bloqueo_medicoOrderByWithRelationInput | bloqueo_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing bloqueo_medicos.
     */
    cursor?: bloqueo_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueo_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueo_medicos.
     */
    skip?: number
    distinct?: Bloqueo_medicoScalarFieldEnum | Bloqueo_medicoScalarFieldEnum[]
  }

  /**
   * bloqueo_medico create
   */
  export type bloqueo_medicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * The data needed to create a bloqueo_medico.
     */
    data: XOR<bloqueo_medicoCreateInput, bloqueo_medicoUncheckedCreateInput>
  }

  /**
   * bloqueo_medico createMany
   */
  export type bloqueo_medicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many bloqueo_medicos.
     */
    data: bloqueo_medicoCreateManyInput | bloqueo_medicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bloqueo_medico createManyAndReturn
   */
  export type bloqueo_medicoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * The data used to create many bloqueo_medicos.
     */
    data: bloqueo_medicoCreateManyInput | bloqueo_medicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bloqueo_medico update
   */
  export type bloqueo_medicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * The data needed to update a bloqueo_medico.
     */
    data: XOR<bloqueo_medicoUpdateInput, bloqueo_medicoUncheckedUpdateInput>
    /**
     * Choose, which bloqueo_medico to update.
     */
    where: bloqueo_medicoWhereUniqueInput
  }

  /**
   * bloqueo_medico updateMany
   */
  export type bloqueo_medicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update bloqueo_medicos.
     */
    data: XOR<bloqueo_medicoUpdateManyMutationInput, bloqueo_medicoUncheckedUpdateManyInput>
    /**
     * Filter which bloqueo_medicos to update
     */
    where?: bloqueo_medicoWhereInput
    /**
     * Limit how many bloqueo_medicos to update.
     */
    limit?: number
  }

  /**
   * bloqueo_medico updateManyAndReturn
   */
  export type bloqueo_medicoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * The data used to update bloqueo_medicos.
     */
    data: XOR<bloqueo_medicoUpdateManyMutationInput, bloqueo_medicoUncheckedUpdateManyInput>
    /**
     * Filter which bloqueo_medicos to update
     */
    where?: bloqueo_medicoWhereInput
    /**
     * Limit how many bloqueo_medicos to update.
     */
    limit?: number
  }

  /**
   * bloqueo_medico upsert
   */
  export type bloqueo_medicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * The filter to search for the bloqueo_medico to update in case it exists.
     */
    where: bloqueo_medicoWhereUniqueInput
    /**
     * In case the bloqueo_medico found by the `where` argument doesn't exist, create a new bloqueo_medico with this data.
     */
    create: XOR<bloqueo_medicoCreateInput, bloqueo_medicoUncheckedCreateInput>
    /**
     * In case the bloqueo_medico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bloqueo_medicoUpdateInput, bloqueo_medicoUncheckedUpdateInput>
  }

  /**
   * bloqueo_medico delete
   */
  export type bloqueo_medicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
    /**
     * Filter which bloqueo_medico to delete.
     */
    where: bloqueo_medicoWhereUniqueInput
  }

  /**
   * bloqueo_medico deleteMany
   */
  export type bloqueo_medicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bloqueo_medicos to delete
     */
    where?: bloqueo_medicoWhereInput
    /**
     * Limit how many bloqueo_medicos to delete.
     */
    limit?: number
  }

  /**
   * bloqueo_medico without action
   */
  export type bloqueo_medicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueo_medico
     */
    select?: bloqueo_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bloqueo_medico
     */
    omit?: bloqueo_medicoOmit<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    costPerUnit: Decimal | null
    minStockLevel: number | null
  }

  export type ProductSumAggregateOutputType = {
    costPerUnit: Decimal | null
    minStockLevel: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    name: string | null
    type: $Enums.ProductType | null
    unit: $Enums.ProductUnit | null
    description: string | null
    costPerUnit: Decimal | null
    minStockLevel: number | null
    createdAt: Date | null
    updatedAt: Date | null
    category: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    name: string | null
    type: $Enums.ProductType | null
    unit: $Enums.ProductUnit | null
    description: string | null
    costPerUnit: Decimal | null
    minStockLevel: number | null
    createdAt: Date | null
    updatedAt: Date | null
    category: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    name: number
    type: number
    unit: number
    description: number
    costPerUnit: number
    minStockLevel: number
    createdAt: number
    updatedAt: number
    category: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    costPerUnit?: true
    minStockLevel?: true
  }

  export type ProductSumAggregateInputType = {
    costPerUnit?: true
    minStockLevel?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    unit?: true
    description?: true
    costPerUnit?: true
    minStockLevel?: true
    createdAt?: true
    updatedAt?: true
    category?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    unit?: true
    description?: true
    costPerUnit?: true
    minStockLevel?: true
    createdAt?: true
    updatedAt?: true
    category?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    unit?: true
    description?: true
    costPerUnit?: true
    minStockLevel?: true
    createdAt?: true
    updatedAt?: true
    category?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description: string | null
    costPerUnit: Decimal
    minStockLevel: number
    createdAt: Date
    updatedAt: Date
    category: string | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    unit?: boolean
    description?: boolean
    costPerUnit?: boolean
    minStockLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
    InventoryUsageDetail?: boolean | Product$InventoryUsageDetailArgs<ExtArgs>
    Movement?: boolean | Product$MovementArgs<ExtArgs>
    ProductAllergen?: boolean | Product$ProductAllergenArgs<ExtArgs>
    ProductExpiration?: boolean | Product$ProductExpirationArgs<ExtArgs>
    StockBySede?: boolean | Product$StockBySedeArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    unit?: boolean
    description?: boolean
    costPerUnit?: boolean
    minStockLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    unit?: boolean
    description?: boolean
    costPerUnit?: boolean
    minStockLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    name?: boolean
    type?: boolean
    unit?: boolean
    description?: boolean
    costPerUnit?: boolean
    minStockLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "type" | "unit" | "description" | "costPerUnit" | "minStockLevel" | "createdAt" | "updatedAt" | "category", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsageDetail?: boolean | Product$InventoryUsageDetailArgs<ExtArgs>
    Movement?: boolean | Product$MovementArgs<ExtArgs>
    ProductAllergen?: boolean | Product$ProductAllergenArgs<ExtArgs>
    ProductExpiration?: boolean | Product$ProductExpirationArgs<ExtArgs>
    StockBySede?: boolean | Product$StockBySedeArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      InventoryUsageDetail: Prisma.$InventoryUsageDetailPayload<ExtArgs>[]
      Movement: Prisma.$MovementPayload<ExtArgs>[]
      ProductAllergen: Prisma.$ProductAllergenPayload<ExtArgs>[]
      ProductExpiration: Prisma.$ProductExpirationPayload<ExtArgs>[]
      StockBySede: Prisma.$StockBySedePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      type: $Enums.ProductType
      unit: $Enums.ProductUnit
      description: string | null
      costPerUnit: Prisma.Decimal
      minStockLevel: number
      createdAt: Date
      updatedAt: Date
      category: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    InventoryUsageDetail<T extends Product$InventoryUsageDetailArgs<ExtArgs> = {}>(args?: Subset<T, Product$InventoryUsageDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Movement<T extends Product$MovementArgs<ExtArgs> = {}>(args?: Subset<T, Product$MovementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProductAllergen<T extends Product$ProductAllergenArgs<ExtArgs> = {}>(args?: Subset<T, Product$ProductAllergenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProductExpiration<T extends Product$ProductExpirationArgs<ExtArgs> = {}>(args?: Subset<T, Product$ProductExpirationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    StockBySede<T extends Product$StockBySedeArgs<ExtArgs> = {}>(args?: Subset<T, Product$StockBySedeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly type: FieldRef<"Product", 'ProductType'>
    readonly unit: FieldRef<"Product", 'ProductUnit'>
    readonly description: FieldRef<"Product", 'String'>
    readonly costPerUnit: FieldRef<"Product", 'Decimal'>
    readonly minStockLevel: FieldRef<"Product", 'Int'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly category: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.InventoryUsageDetail
   */
  export type Product$InventoryUsageDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    where?: InventoryUsageDetailWhereInput
    orderBy?: InventoryUsageDetailOrderByWithRelationInput | InventoryUsageDetailOrderByWithRelationInput[]
    cursor?: InventoryUsageDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryUsageDetailScalarFieldEnum | InventoryUsageDetailScalarFieldEnum[]
  }

  /**
   * Product.Movement
   */
  export type Product$MovementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    where?: MovementWhereInput
    orderBy?: MovementOrderByWithRelationInput | MovementOrderByWithRelationInput[]
    cursor?: MovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovementScalarFieldEnum | MovementScalarFieldEnum[]
  }

  /**
   * Product.ProductAllergen
   */
  export type Product$ProductAllergenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    where?: ProductAllergenWhereInput
    orderBy?: ProductAllergenOrderByWithRelationInput | ProductAllergenOrderByWithRelationInput[]
    cursor?: ProductAllergenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductAllergenScalarFieldEnum | ProductAllergenScalarFieldEnum[]
  }

  /**
   * Product.ProductExpiration
   */
  export type Product$ProductExpirationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    where?: ProductExpirationWhereInput
    orderBy?: ProductExpirationOrderByWithRelationInput | ProductExpirationOrderByWithRelationInput[]
    cursor?: ProductExpirationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductExpirationScalarFieldEnum | ProductExpirationScalarFieldEnum[]
  }

  /**
   * Product.StockBySede
   */
  export type Product$StockBySedeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    where?: StockBySedeWhereInput
    orderBy?: StockBySedeOrderByWithRelationInput | StockBySedeOrderByWithRelationInput[]
    cursor?: StockBySedeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBySedeScalarFieldEnum | StockBySedeScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Sede
   */

  export type AggregateSede = {
    _count: SedeCountAggregateOutputType | null
    _min: SedeMinAggregateOutputType | null
    _max: SedeMaxAggregateOutputType | null
  }

  export type SedeMinAggregateOutputType = {
    id: string | null
    name: string | null
    address: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SedeMaxAggregateOutputType = {
    id: string | null
    name: string | null
    address: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SedeCountAggregateOutputType = {
    id: number
    name: number
    address: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SedeMinAggregateInputType = {
    id?: true
    name?: true
    address?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SedeMaxAggregateInputType = {
    id?: true
    name?: true
    address?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SedeCountAggregateInputType = {
    id?: true
    name?: true
    address?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SedeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sede to aggregate.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sedes
    **/
    _count?: true | SedeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SedeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SedeMaxAggregateInputType
  }

  export type GetSedeAggregateType<T extends SedeAggregateArgs> = {
        [P in keyof T & keyof AggregateSede]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSede[P]>
      : GetScalarType<T[P], AggregateSede[P]>
  }




  export type SedeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SedeWhereInput
    orderBy?: SedeOrderByWithAggregationInput | SedeOrderByWithAggregationInput[]
    by: SedeScalarFieldEnum[] | SedeScalarFieldEnum
    having?: SedeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SedeCountAggregateInputType | true
    _min?: SedeMinAggregateInputType
    _max?: SedeMaxAggregateInputType
  }

  export type SedeGroupByOutputType = {
    id: string
    name: string
    address: string
    createdAt: Date
    updatedAt: Date
    _count: SedeCountAggregateOutputType | null
    _min: SedeMinAggregateOutputType | null
    _max: SedeMaxAggregateOutputType | null
  }

  type GetSedeGroupByPayload<T extends SedeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SedeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SedeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SedeGroupByOutputType[P]>
            : GetScalarType<T[P], SedeGroupByOutputType[P]>
        }
      >
    >


  export type SedeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    InventoryUsage?: boolean | Sede$InventoryUsageArgs<ExtArgs>
    Movement?: boolean | Sede$MovementArgs<ExtArgs>
    ProductExpiration?: boolean | Sede$ProductExpirationArgs<ExtArgs>
    StockBySede?: boolean | Sede$StockBySedeArgs<ExtArgs>
    User?: boolean | Sede$UserArgs<ExtArgs>
    _count?: boolean | SedeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sede"]>

  export type SedeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["sede"]>

  export type SedeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["sede"]>

  export type SedeSelectScalar = {
    id?: boolean
    name?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SedeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "address" | "createdAt" | "updatedAt", ExtArgs["result"]["sede"]>
  export type SedeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsage?: boolean | Sede$InventoryUsageArgs<ExtArgs>
    Movement?: boolean | Sede$MovementArgs<ExtArgs>
    ProductExpiration?: boolean | Sede$ProductExpirationArgs<ExtArgs>
    StockBySede?: boolean | Sede$StockBySedeArgs<ExtArgs>
    User?: boolean | Sede$UserArgs<ExtArgs>
    _count?: boolean | SedeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SedeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SedeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SedePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sede"
    objects: {
      InventoryUsage: Prisma.$InventoryUsagePayload<ExtArgs>[]
      Movement: Prisma.$MovementPayload<ExtArgs>[]
      ProductExpiration: Prisma.$ProductExpirationPayload<ExtArgs>[]
      StockBySede: Prisma.$StockBySedePayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      address: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["sede"]>
    composites: {}
  }

  type SedeGetPayload<S extends boolean | null | undefined | SedeDefaultArgs> = $Result.GetResult<Prisma.$SedePayload, S>

  type SedeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SedeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SedeCountAggregateInputType | true
    }

  export interface SedeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sede'], meta: { name: 'Sede' } }
    /**
     * Find zero or one Sede that matches the filter.
     * @param {SedeFindUniqueArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SedeFindUniqueArgs>(args: SelectSubset<T, SedeFindUniqueArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sede that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SedeFindUniqueOrThrowArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SedeFindUniqueOrThrowArgs>(args: SelectSubset<T, SedeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sede that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeFindFirstArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SedeFindFirstArgs>(args?: SelectSubset<T, SedeFindFirstArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sede that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeFindFirstOrThrowArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SedeFindFirstOrThrowArgs>(args?: SelectSubset<T, SedeFindFirstOrThrowArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sedes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sedes
     * const sedes = await prisma.sede.findMany()
     * 
     * // Get first 10 Sedes
     * const sedes = await prisma.sede.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sedeWithIdOnly = await prisma.sede.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SedeFindManyArgs>(args?: SelectSubset<T, SedeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sede.
     * @param {SedeCreateArgs} args - Arguments to create a Sede.
     * @example
     * // Create one Sede
     * const Sede = await prisma.sede.create({
     *   data: {
     *     // ... data to create a Sede
     *   }
     * })
     * 
     */
    create<T extends SedeCreateArgs>(args: SelectSubset<T, SedeCreateArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sedes.
     * @param {SedeCreateManyArgs} args - Arguments to create many Sedes.
     * @example
     * // Create many Sedes
     * const sede = await prisma.sede.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SedeCreateManyArgs>(args?: SelectSubset<T, SedeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sedes and returns the data saved in the database.
     * @param {SedeCreateManyAndReturnArgs} args - Arguments to create many Sedes.
     * @example
     * // Create many Sedes
     * const sede = await prisma.sede.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sedes and only return the `id`
     * const sedeWithIdOnly = await prisma.sede.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SedeCreateManyAndReturnArgs>(args?: SelectSubset<T, SedeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sede.
     * @param {SedeDeleteArgs} args - Arguments to delete one Sede.
     * @example
     * // Delete one Sede
     * const Sede = await prisma.sede.delete({
     *   where: {
     *     // ... filter to delete one Sede
     *   }
     * })
     * 
     */
    delete<T extends SedeDeleteArgs>(args: SelectSubset<T, SedeDeleteArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sede.
     * @param {SedeUpdateArgs} args - Arguments to update one Sede.
     * @example
     * // Update one Sede
     * const sede = await prisma.sede.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SedeUpdateArgs>(args: SelectSubset<T, SedeUpdateArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sedes.
     * @param {SedeDeleteManyArgs} args - Arguments to filter Sedes to delete.
     * @example
     * // Delete a few Sedes
     * const { count } = await prisma.sede.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SedeDeleteManyArgs>(args?: SelectSubset<T, SedeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sedes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sedes
     * const sede = await prisma.sede.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SedeUpdateManyArgs>(args: SelectSubset<T, SedeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sedes and returns the data updated in the database.
     * @param {SedeUpdateManyAndReturnArgs} args - Arguments to update many Sedes.
     * @example
     * // Update many Sedes
     * const sede = await prisma.sede.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sedes and only return the `id`
     * const sedeWithIdOnly = await prisma.sede.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SedeUpdateManyAndReturnArgs>(args: SelectSubset<T, SedeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sede.
     * @param {SedeUpsertArgs} args - Arguments to update or create a Sede.
     * @example
     * // Update or create a Sede
     * const sede = await prisma.sede.upsert({
     *   create: {
     *     // ... data to create a Sede
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sede we want to update
     *   }
     * })
     */
    upsert<T extends SedeUpsertArgs>(args: SelectSubset<T, SedeUpsertArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sedes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeCountArgs} args - Arguments to filter Sedes to count.
     * @example
     * // Count the number of Sedes
     * const count = await prisma.sede.count({
     *   where: {
     *     // ... the filter for the Sedes we want to count
     *   }
     * })
    **/
    count<T extends SedeCountArgs>(
      args?: Subset<T, SedeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SedeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sede.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SedeAggregateArgs>(args: Subset<T, SedeAggregateArgs>): Prisma.PrismaPromise<GetSedeAggregateType<T>>

    /**
     * Group by Sede.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SedeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SedeGroupByArgs['orderBy'] }
        : { orderBy?: SedeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SedeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSedeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sede model
   */
  readonly fields: SedeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sede.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SedeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    InventoryUsage<T extends Sede$InventoryUsageArgs<ExtArgs> = {}>(args?: Subset<T, Sede$InventoryUsageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Movement<T extends Sede$MovementArgs<ExtArgs> = {}>(args?: Subset<T, Sede$MovementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProductExpiration<T extends Sede$ProductExpirationArgs<ExtArgs> = {}>(args?: Subset<T, Sede$ProductExpirationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    StockBySede<T extends Sede$StockBySedeArgs<ExtArgs> = {}>(args?: Subset<T, Sede$StockBySedeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Sede$UserArgs<ExtArgs> = {}>(args?: Subset<T, Sede$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sede model
   */
  interface SedeFieldRefs {
    readonly id: FieldRef<"Sede", 'String'>
    readonly name: FieldRef<"Sede", 'String'>
    readonly address: FieldRef<"Sede", 'String'>
    readonly createdAt: FieldRef<"Sede", 'DateTime'>
    readonly updatedAt: FieldRef<"Sede", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Sede findUnique
   */
  export type SedeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede findUniqueOrThrow
   */
  export type SedeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede findFirst
   */
  export type SedeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sedes.
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sedes.
     */
    distinct?: SedeScalarFieldEnum | SedeScalarFieldEnum[]
  }

  /**
   * Sede findFirstOrThrow
   */
  export type SedeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sedes.
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sedes.
     */
    distinct?: SedeScalarFieldEnum | SedeScalarFieldEnum[]
  }

  /**
   * Sede findMany
   */
  export type SedeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sedes to fetch.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sedes.
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    distinct?: SedeScalarFieldEnum | SedeScalarFieldEnum[]
  }

  /**
   * Sede create
   */
  export type SedeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * The data needed to create a Sede.
     */
    data: XOR<SedeCreateInput, SedeUncheckedCreateInput>
  }

  /**
   * Sede createMany
   */
  export type SedeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sedes.
     */
    data: SedeCreateManyInput | SedeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sede createManyAndReturn
   */
  export type SedeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * The data used to create many Sedes.
     */
    data: SedeCreateManyInput | SedeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sede update
   */
  export type SedeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * The data needed to update a Sede.
     */
    data: XOR<SedeUpdateInput, SedeUncheckedUpdateInput>
    /**
     * Choose, which Sede to update.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede updateMany
   */
  export type SedeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sedes.
     */
    data: XOR<SedeUpdateManyMutationInput, SedeUncheckedUpdateManyInput>
    /**
     * Filter which Sedes to update
     */
    where?: SedeWhereInput
    /**
     * Limit how many Sedes to update.
     */
    limit?: number
  }

  /**
   * Sede updateManyAndReturn
   */
  export type SedeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * The data used to update Sedes.
     */
    data: XOR<SedeUpdateManyMutationInput, SedeUncheckedUpdateManyInput>
    /**
     * Filter which Sedes to update
     */
    where?: SedeWhereInput
    /**
     * Limit how many Sedes to update.
     */
    limit?: number
  }

  /**
   * Sede upsert
   */
  export type SedeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * The filter to search for the Sede to update in case it exists.
     */
    where: SedeWhereUniqueInput
    /**
     * In case the Sede found by the `where` argument doesn't exist, create a new Sede with this data.
     */
    create: XOR<SedeCreateInput, SedeUncheckedCreateInput>
    /**
     * In case the Sede was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SedeUpdateInput, SedeUncheckedUpdateInput>
  }

  /**
   * Sede delete
   */
  export type SedeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter which Sede to delete.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede deleteMany
   */
  export type SedeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sedes to delete
     */
    where?: SedeWhereInput
    /**
     * Limit how many Sedes to delete.
     */
    limit?: number
  }

  /**
   * Sede.InventoryUsage
   */
  export type Sede$InventoryUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    where?: InventoryUsageWhereInput
    orderBy?: InventoryUsageOrderByWithRelationInput | InventoryUsageOrderByWithRelationInput[]
    cursor?: InventoryUsageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryUsageScalarFieldEnum | InventoryUsageScalarFieldEnum[]
  }

  /**
   * Sede.Movement
   */
  export type Sede$MovementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    where?: MovementWhereInput
    orderBy?: MovementOrderByWithRelationInput | MovementOrderByWithRelationInput[]
    cursor?: MovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovementScalarFieldEnum | MovementScalarFieldEnum[]
  }

  /**
   * Sede.ProductExpiration
   */
  export type Sede$ProductExpirationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    where?: ProductExpirationWhereInput
    orderBy?: ProductExpirationOrderByWithRelationInput | ProductExpirationOrderByWithRelationInput[]
    cursor?: ProductExpirationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductExpirationScalarFieldEnum | ProductExpirationScalarFieldEnum[]
  }

  /**
   * Sede.StockBySede
   */
  export type Sede$StockBySedeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    where?: StockBySedeWhereInput
    orderBy?: StockBySedeOrderByWithRelationInput | StockBySedeOrderByWithRelationInput[]
    cursor?: StockBySedeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBySedeScalarFieldEnum | StockBySedeScalarFieldEnum[]
  }

  /**
   * Sede.User
   */
  export type Sede$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Sede without action
   */
  export type SedeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    role: $Enums.UserRole | null
    sedeId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    role: $Enums.UserRole | null
    sedeId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    name: number
    role: number
    sedeId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    role?: true
    sedeId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    role?: true
    sedeId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    role?: true
    sedeId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    name: string
    role: $Enums.UserRole
    sedeId: string
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    sedeId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    InventoryUsage?: boolean | User$InventoryUsageArgs<ExtArgs>
    Movement?: boolean | User$MovementArgs<ExtArgs>
    Sede?: boolean | SedeDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    sedeId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    sedeId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    sedeId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "name" | "role" | "sedeId" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsage?: boolean | User$InventoryUsageArgs<ExtArgs>
    Movement?: boolean | User$MovementArgs<ExtArgs>
    Sede?: boolean | SedeDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Sede?: boolean | SedeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      InventoryUsage: Prisma.$InventoryUsagePayload<ExtArgs>[]
      Movement: Prisma.$MovementPayload<ExtArgs>[]
      Sede: Prisma.$SedePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string
      role: $Enums.UserRole
      sedeId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    InventoryUsage<T extends User$InventoryUsageArgs<ExtArgs> = {}>(args?: Subset<T, User$InventoryUsageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Movement<T extends User$MovementArgs<ExtArgs> = {}>(args?: Subset<T, User$MovementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'UserRole'>
    readonly sedeId: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.InventoryUsage
   */
  export type User$InventoryUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    where?: InventoryUsageWhereInput
    orderBy?: InventoryUsageOrderByWithRelationInput | InventoryUsageOrderByWithRelationInput[]
    cursor?: InventoryUsageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryUsageScalarFieldEnum | InventoryUsageScalarFieldEnum[]
  }

  /**
   * User.Movement
   */
  export type User$MovementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    where?: MovementWhereInput
    orderBy?: MovementOrderByWithRelationInput | MovementOrderByWithRelationInput[]
    cursor?: MovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovementScalarFieldEnum | MovementScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model InventoryUsage
   */

  export type AggregateInventoryUsage = {
    _count: InventoryUsageCountAggregateOutputType | null
    _min: InventoryUsageMinAggregateOutputType | null
    _max: InventoryUsageMaxAggregateOutputType | null
  }

  export type InventoryUsageMinAggregateOutputType = {
    id: string | null
    nombrePaciente: string | null
    tipoTratamiento: $Enums.TipoTratamiento | null
    observaciones: string | null
    tuvoReaccion: boolean | null
    descripcionReaccion: string | null
    createdAt: Date | null
    sedeId: string | null
    updatedAt: Date | null
    userId: string | null
    pacienteId: string | null
  }

  export type InventoryUsageMaxAggregateOutputType = {
    id: string | null
    nombrePaciente: string | null
    tipoTratamiento: $Enums.TipoTratamiento | null
    observaciones: string | null
    tuvoReaccion: boolean | null
    descripcionReaccion: string | null
    createdAt: Date | null
    sedeId: string | null
    updatedAt: Date | null
    userId: string | null
    pacienteId: string | null
  }

  export type InventoryUsageCountAggregateOutputType = {
    id: number
    nombrePaciente: number
    tipoTratamiento: number
    observaciones: number
    tuvoReaccion: number
    descripcionReaccion: number
    createdAt: number
    sedeId: number
    updatedAt: number
    userId: number
    pacienteId: number
    _all: number
  }


  export type InventoryUsageMinAggregateInputType = {
    id?: true
    nombrePaciente?: true
    tipoTratamiento?: true
    observaciones?: true
    tuvoReaccion?: true
    descripcionReaccion?: true
    createdAt?: true
    sedeId?: true
    updatedAt?: true
    userId?: true
    pacienteId?: true
  }

  export type InventoryUsageMaxAggregateInputType = {
    id?: true
    nombrePaciente?: true
    tipoTratamiento?: true
    observaciones?: true
    tuvoReaccion?: true
    descripcionReaccion?: true
    createdAt?: true
    sedeId?: true
    updatedAt?: true
    userId?: true
    pacienteId?: true
  }

  export type InventoryUsageCountAggregateInputType = {
    id?: true
    nombrePaciente?: true
    tipoTratamiento?: true
    observaciones?: true
    tuvoReaccion?: true
    descripcionReaccion?: true
    createdAt?: true
    sedeId?: true
    updatedAt?: true
    userId?: true
    pacienteId?: true
    _all?: true
  }

  export type InventoryUsageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryUsage to aggregate.
     */
    where?: InventoryUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsages to fetch.
     */
    orderBy?: InventoryUsageOrderByWithRelationInput | InventoryUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryUsages
    **/
    _count?: true | InventoryUsageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryUsageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryUsageMaxAggregateInputType
  }

  export type GetInventoryUsageAggregateType<T extends InventoryUsageAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryUsage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryUsage[P]>
      : GetScalarType<T[P], AggregateInventoryUsage[P]>
  }




  export type InventoryUsageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageWhereInput
    orderBy?: InventoryUsageOrderByWithAggregationInput | InventoryUsageOrderByWithAggregationInput[]
    by: InventoryUsageScalarFieldEnum[] | InventoryUsageScalarFieldEnum
    having?: InventoryUsageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryUsageCountAggregateInputType | true
    _min?: InventoryUsageMinAggregateInputType
    _max?: InventoryUsageMaxAggregateInputType
  }

  export type InventoryUsageGroupByOutputType = {
    id: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones: string | null
    tuvoReaccion: boolean
    descripcionReaccion: string | null
    createdAt: Date
    sedeId: string
    updatedAt: Date
    userId: string
    pacienteId: string | null
    _count: InventoryUsageCountAggregateOutputType | null
    _min: InventoryUsageMinAggregateOutputType | null
    _max: InventoryUsageMaxAggregateOutputType | null
  }

  type GetInventoryUsageGroupByPayload<T extends InventoryUsageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryUsageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryUsageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryUsageGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryUsageGroupByOutputType[P]>
        }
      >
    >


  export type InventoryUsageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombrePaciente?: boolean
    tipoTratamiento?: boolean
    observaciones?: boolean
    tuvoReaccion?: boolean
    descripcionReaccion?: boolean
    createdAt?: boolean
    sedeId?: boolean
    updatedAt?: boolean
    userId?: boolean
    pacienteId?: boolean
    pacientes?: boolean | InventoryUsage$pacientesArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    details?: boolean | InventoryUsage$detailsArgs<ExtArgs>
    _count?: boolean | InventoryUsageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryUsage"]>

  export type InventoryUsageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombrePaciente?: boolean
    tipoTratamiento?: boolean
    observaciones?: boolean
    tuvoReaccion?: boolean
    descripcionReaccion?: boolean
    createdAt?: boolean
    sedeId?: boolean
    updatedAt?: boolean
    userId?: boolean
    pacienteId?: boolean
    pacientes?: boolean | InventoryUsage$pacientesArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryUsage"]>

  export type InventoryUsageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombrePaciente?: boolean
    tipoTratamiento?: boolean
    observaciones?: boolean
    tuvoReaccion?: boolean
    descripcionReaccion?: boolean
    createdAt?: boolean
    sedeId?: boolean
    updatedAt?: boolean
    userId?: boolean
    pacienteId?: boolean
    pacientes?: boolean | InventoryUsage$pacientesArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryUsage"]>

  export type InventoryUsageSelectScalar = {
    id?: boolean
    nombrePaciente?: boolean
    tipoTratamiento?: boolean
    observaciones?: boolean
    tuvoReaccion?: boolean
    descripcionReaccion?: boolean
    createdAt?: boolean
    sedeId?: boolean
    updatedAt?: boolean
    userId?: boolean
    pacienteId?: boolean
  }

  export type InventoryUsageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombrePaciente" | "tipoTratamiento" | "observaciones" | "tuvoReaccion" | "descripcionReaccion" | "createdAt" | "sedeId" | "updatedAt" | "userId" | "pacienteId", ExtArgs["result"]["inventoryUsage"]>
  export type InventoryUsageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pacientes?: boolean | InventoryUsage$pacientesArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    details?: boolean | InventoryUsage$detailsArgs<ExtArgs>
    _count?: boolean | InventoryUsageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InventoryUsageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pacientes?: boolean | InventoryUsage$pacientesArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InventoryUsageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pacientes?: boolean | InventoryUsage$pacientesArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $InventoryUsagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryUsage"
    objects: {
      pacientes: Prisma.$pacientesPayload<ExtArgs> | null
      sede: Prisma.$SedePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      details: Prisma.$InventoryUsageDetailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombrePaciente: string
      tipoTratamiento: $Enums.TipoTratamiento
      observaciones: string | null
      tuvoReaccion: boolean
      descripcionReaccion: string | null
      createdAt: Date
      sedeId: string
      updatedAt: Date
      userId: string
      pacienteId: string | null
    }, ExtArgs["result"]["inventoryUsage"]>
    composites: {}
  }

  type InventoryUsageGetPayload<S extends boolean | null | undefined | InventoryUsageDefaultArgs> = $Result.GetResult<Prisma.$InventoryUsagePayload, S>

  type InventoryUsageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryUsageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryUsageCountAggregateInputType | true
    }

  export interface InventoryUsageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryUsage'], meta: { name: 'InventoryUsage' } }
    /**
     * Find zero or one InventoryUsage that matches the filter.
     * @param {InventoryUsageFindUniqueArgs} args - Arguments to find a InventoryUsage
     * @example
     * // Get one InventoryUsage
     * const inventoryUsage = await prisma.inventoryUsage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryUsageFindUniqueArgs>(args: SelectSubset<T, InventoryUsageFindUniqueArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryUsage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryUsageFindUniqueOrThrowArgs} args - Arguments to find a InventoryUsage
     * @example
     * // Get one InventoryUsage
     * const inventoryUsage = await prisma.inventoryUsage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryUsageFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryUsageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryUsage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageFindFirstArgs} args - Arguments to find a InventoryUsage
     * @example
     * // Get one InventoryUsage
     * const inventoryUsage = await prisma.inventoryUsage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryUsageFindFirstArgs>(args?: SelectSubset<T, InventoryUsageFindFirstArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryUsage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageFindFirstOrThrowArgs} args - Arguments to find a InventoryUsage
     * @example
     * // Get one InventoryUsage
     * const inventoryUsage = await prisma.inventoryUsage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryUsageFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryUsageFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryUsages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryUsages
     * const inventoryUsages = await prisma.inventoryUsage.findMany()
     * 
     * // Get first 10 InventoryUsages
     * const inventoryUsages = await prisma.inventoryUsage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryUsageWithIdOnly = await prisma.inventoryUsage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryUsageFindManyArgs>(args?: SelectSubset<T, InventoryUsageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryUsage.
     * @param {InventoryUsageCreateArgs} args - Arguments to create a InventoryUsage.
     * @example
     * // Create one InventoryUsage
     * const InventoryUsage = await prisma.inventoryUsage.create({
     *   data: {
     *     // ... data to create a InventoryUsage
     *   }
     * })
     * 
     */
    create<T extends InventoryUsageCreateArgs>(args: SelectSubset<T, InventoryUsageCreateArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryUsages.
     * @param {InventoryUsageCreateManyArgs} args - Arguments to create many InventoryUsages.
     * @example
     * // Create many InventoryUsages
     * const inventoryUsage = await prisma.inventoryUsage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryUsageCreateManyArgs>(args?: SelectSubset<T, InventoryUsageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryUsages and returns the data saved in the database.
     * @param {InventoryUsageCreateManyAndReturnArgs} args - Arguments to create many InventoryUsages.
     * @example
     * // Create many InventoryUsages
     * const inventoryUsage = await prisma.inventoryUsage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryUsages and only return the `id`
     * const inventoryUsageWithIdOnly = await prisma.inventoryUsage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryUsageCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryUsageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryUsage.
     * @param {InventoryUsageDeleteArgs} args - Arguments to delete one InventoryUsage.
     * @example
     * // Delete one InventoryUsage
     * const InventoryUsage = await prisma.inventoryUsage.delete({
     *   where: {
     *     // ... filter to delete one InventoryUsage
     *   }
     * })
     * 
     */
    delete<T extends InventoryUsageDeleteArgs>(args: SelectSubset<T, InventoryUsageDeleteArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryUsage.
     * @param {InventoryUsageUpdateArgs} args - Arguments to update one InventoryUsage.
     * @example
     * // Update one InventoryUsage
     * const inventoryUsage = await prisma.inventoryUsage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryUsageUpdateArgs>(args: SelectSubset<T, InventoryUsageUpdateArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryUsages.
     * @param {InventoryUsageDeleteManyArgs} args - Arguments to filter InventoryUsages to delete.
     * @example
     * // Delete a few InventoryUsages
     * const { count } = await prisma.inventoryUsage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryUsageDeleteManyArgs>(args?: SelectSubset<T, InventoryUsageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryUsages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryUsages
     * const inventoryUsage = await prisma.inventoryUsage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryUsageUpdateManyArgs>(args: SelectSubset<T, InventoryUsageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryUsages and returns the data updated in the database.
     * @param {InventoryUsageUpdateManyAndReturnArgs} args - Arguments to update many InventoryUsages.
     * @example
     * // Update many InventoryUsages
     * const inventoryUsage = await prisma.inventoryUsage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryUsages and only return the `id`
     * const inventoryUsageWithIdOnly = await prisma.inventoryUsage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryUsageUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryUsageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryUsage.
     * @param {InventoryUsageUpsertArgs} args - Arguments to update or create a InventoryUsage.
     * @example
     * // Update or create a InventoryUsage
     * const inventoryUsage = await prisma.inventoryUsage.upsert({
     *   create: {
     *     // ... data to create a InventoryUsage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryUsage we want to update
     *   }
     * })
     */
    upsert<T extends InventoryUsageUpsertArgs>(args: SelectSubset<T, InventoryUsageUpsertArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryUsages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageCountArgs} args - Arguments to filter InventoryUsages to count.
     * @example
     * // Count the number of InventoryUsages
     * const count = await prisma.inventoryUsage.count({
     *   where: {
     *     // ... the filter for the InventoryUsages we want to count
     *   }
     * })
    **/
    count<T extends InventoryUsageCountArgs>(
      args?: Subset<T, InventoryUsageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryUsageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryUsage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryUsageAggregateArgs>(args: Subset<T, InventoryUsageAggregateArgs>): Prisma.PrismaPromise<GetInventoryUsageAggregateType<T>>

    /**
     * Group by InventoryUsage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryUsageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryUsageGroupByArgs['orderBy'] }
        : { orderBy?: InventoryUsageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryUsageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryUsageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryUsage model
   */
  readonly fields: InventoryUsageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryUsage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryUsageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pacientes<T extends InventoryUsage$pacientesArgs<ExtArgs> = {}>(args?: Subset<T, InventoryUsage$pacientesArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    details<T extends InventoryUsage$detailsArgs<ExtArgs> = {}>(args?: Subset<T, InventoryUsage$detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryUsage model
   */
  interface InventoryUsageFieldRefs {
    readonly id: FieldRef<"InventoryUsage", 'String'>
    readonly nombrePaciente: FieldRef<"InventoryUsage", 'String'>
    readonly tipoTratamiento: FieldRef<"InventoryUsage", 'TipoTratamiento'>
    readonly observaciones: FieldRef<"InventoryUsage", 'String'>
    readonly tuvoReaccion: FieldRef<"InventoryUsage", 'Boolean'>
    readonly descripcionReaccion: FieldRef<"InventoryUsage", 'String'>
    readonly createdAt: FieldRef<"InventoryUsage", 'DateTime'>
    readonly sedeId: FieldRef<"InventoryUsage", 'String'>
    readonly updatedAt: FieldRef<"InventoryUsage", 'DateTime'>
    readonly userId: FieldRef<"InventoryUsage", 'String'>
    readonly pacienteId: FieldRef<"InventoryUsage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * InventoryUsage findUnique
   */
  export type InventoryUsageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsage to fetch.
     */
    where: InventoryUsageWhereUniqueInput
  }

  /**
   * InventoryUsage findUniqueOrThrow
   */
  export type InventoryUsageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsage to fetch.
     */
    where: InventoryUsageWhereUniqueInput
  }

  /**
   * InventoryUsage findFirst
   */
  export type InventoryUsageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsage to fetch.
     */
    where?: InventoryUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsages to fetch.
     */
    orderBy?: InventoryUsageOrderByWithRelationInput | InventoryUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryUsages.
     */
    cursor?: InventoryUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryUsages.
     */
    distinct?: InventoryUsageScalarFieldEnum | InventoryUsageScalarFieldEnum[]
  }

  /**
   * InventoryUsage findFirstOrThrow
   */
  export type InventoryUsageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsage to fetch.
     */
    where?: InventoryUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsages to fetch.
     */
    orderBy?: InventoryUsageOrderByWithRelationInput | InventoryUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryUsages.
     */
    cursor?: InventoryUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryUsages.
     */
    distinct?: InventoryUsageScalarFieldEnum | InventoryUsageScalarFieldEnum[]
  }

  /**
   * InventoryUsage findMany
   */
  export type InventoryUsageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsages to fetch.
     */
    where?: InventoryUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsages to fetch.
     */
    orderBy?: InventoryUsageOrderByWithRelationInput | InventoryUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryUsages.
     */
    cursor?: InventoryUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsages.
     */
    skip?: number
    distinct?: InventoryUsageScalarFieldEnum | InventoryUsageScalarFieldEnum[]
  }

  /**
   * InventoryUsage create
   */
  export type InventoryUsageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryUsage.
     */
    data: XOR<InventoryUsageCreateInput, InventoryUsageUncheckedCreateInput>
  }

  /**
   * InventoryUsage createMany
   */
  export type InventoryUsageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryUsages.
     */
    data: InventoryUsageCreateManyInput | InventoryUsageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryUsage createManyAndReturn
   */
  export type InventoryUsageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryUsages.
     */
    data: InventoryUsageCreateManyInput | InventoryUsageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryUsage update
   */
  export type InventoryUsageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryUsage.
     */
    data: XOR<InventoryUsageUpdateInput, InventoryUsageUncheckedUpdateInput>
    /**
     * Choose, which InventoryUsage to update.
     */
    where: InventoryUsageWhereUniqueInput
  }

  /**
   * InventoryUsage updateMany
   */
  export type InventoryUsageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryUsages.
     */
    data: XOR<InventoryUsageUpdateManyMutationInput, InventoryUsageUncheckedUpdateManyInput>
    /**
     * Filter which InventoryUsages to update
     */
    where?: InventoryUsageWhereInput
    /**
     * Limit how many InventoryUsages to update.
     */
    limit?: number
  }

  /**
   * InventoryUsage updateManyAndReturn
   */
  export type InventoryUsageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * The data used to update InventoryUsages.
     */
    data: XOR<InventoryUsageUpdateManyMutationInput, InventoryUsageUncheckedUpdateManyInput>
    /**
     * Filter which InventoryUsages to update
     */
    where?: InventoryUsageWhereInput
    /**
     * Limit how many InventoryUsages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryUsage upsert
   */
  export type InventoryUsageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryUsage to update in case it exists.
     */
    where: InventoryUsageWhereUniqueInput
    /**
     * In case the InventoryUsage found by the `where` argument doesn't exist, create a new InventoryUsage with this data.
     */
    create: XOR<InventoryUsageCreateInput, InventoryUsageUncheckedCreateInput>
    /**
     * In case the InventoryUsage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryUsageUpdateInput, InventoryUsageUncheckedUpdateInput>
  }

  /**
   * InventoryUsage delete
   */
  export type InventoryUsageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
    /**
     * Filter which InventoryUsage to delete.
     */
    where: InventoryUsageWhereUniqueInput
  }

  /**
   * InventoryUsage deleteMany
   */
  export type InventoryUsageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryUsages to delete
     */
    where?: InventoryUsageWhereInput
    /**
     * Limit how many InventoryUsages to delete.
     */
    limit?: number
  }

  /**
   * InventoryUsage.pacientes
   */
  export type InventoryUsage$pacientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    where?: pacientesWhereInput
  }

  /**
   * InventoryUsage.details
   */
  export type InventoryUsage$detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    where?: InventoryUsageDetailWhereInput
    orderBy?: InventoryUsageDetailOrderByWithRelationInput | InventoryUsageDetailOrderByWithRelationInput[]
    cursor?: InventoryUsageDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryUsageDetailScalarFieldEnum | InventoryUsageDetailScalarFieldEnum[]
  }

  /**
   * InventoryUsage without action
   */
  export type InventoryUsageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsage
     */
    select?: InventoryUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsage
     */
    omit?: InventoryUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageInclude<ExtArgs> | null
  }


  /**
   * Model InventoryUsageDetail
   */

  export type AggregateInventoryUsageDetail = {
    _count: InventoryUsageDetailCountAggregateOutputType | null
    _avg: InventoryUsageDetailAvgAggregateOutputType | null
    _sum: InventoryUsageDetailSumAggregateOutputType | null
    _min: InventoryUsageDetailMinAggregateOutputType | null
    _max: InventoryUsageDetailMaxAggregateOutputType | null
  }

  export type InventoryUsageDetailAvgAggregateOutputType = {
    doses: number | null
    frascoLevel: number | null
    quantity: Decimal | null
    totalCost: Decimal | null
    unitCost: Decimal | null
    units: number | null
  }

  export type InventoryUsageDetailSumAggregateOutputType = {
    doses: number | null
    frascoLevel: number | null
    quantity: Decimal | null
    totalCost: Decimal | null
    unitCost: Decimal | null
    units: number | null
  }

  export type InventoryUsageDetailMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    doses: number | null
    frascoLevel: number | null
    inventoryUsageId: string | null
    movementId: string | null
    productId: string | null
    quantity: Decimal | null
    totalCost: Decimal | null
    unitCost: Decimal | null
    units: number | null
    updatedAt: Date | null
  }

  export type InventoryUsageDetailMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    doses: number | null
    frascoLevel: number | null
    inventoryUsageId: string | null
    movementId: string | null
    productId: string | null
    quantity: Decimal | null
    totalCost: Decimal | null
    unitCost: Decimal | null
    units: number | null
    updatedAt: Date | null
  }

  export type InventoryUsageDetailCountAggregateOutputType = {
    id: number
    createdAt: number
    doses: number
    frascoLevel: number
    inventoryUsageId: number
    movementId: number
    productId: number
    quantity: number
    totalCost: number
    unitCost: number
    units: number
    updatedAt: number
    _all: number
  }


  export type InventoryUsageDetailAvgAggregateInputType = {
    doses?: true
    frascoLevel?: true
    quantity?: true
    totalCost?: true
    unitCost?: true
    units?: true
  }

  export type InventoryUsageDetailSumAggregateInputType = {
    doses?: true
    frascoLevel?: true
    quantity?: true
    totalCost?: true
    unitCost?: true
    units?: true
  }

  export type InventoryUsageDetailMinAggregateInputType = {
    id?: true
    createdAt?: true
    doses?: true
    frascoLevel?: true
    inventoryUsageId?: true
    movementId?: true
    productId?: true
    quantity?: true
    totalCost?: true
    unitCost?: true
    units?: true
    updatedAt?: true
  }

  export type InventoryUsageDetailMaxAggregateInputType = {
    id?: true
    createdAt?: true
    doses?: true
    frascoLevel?: true
    inventoryUsageId?: true
    movementId?: true
    productId?: true
    quantity?: true
    totalCost?: true
    unitCost?: true
    units?: true
    updatedAt?: true
  }

  export type InventoryUsageDetailCountAggregateInputType = {
    id?: true
    createdAt?: true
    doses?: true
    frascoLevel?: true
    inventoryUsageId?: true
    movementId?: true
    productId?: true
    quantity?: true
    totalCost?: true
    unitCost?: true
    units?: true
    updatedAt?: true
    _all?: true
  }

  export type InventoryUsageDetailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryUsageDetail to aggregate.
     */
    where?: InventoryUsageDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsageDetails to fetch.
     */
    orderBy?: InventoryUsageDetailOrderByWithRelationInput | InventoryUsageDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryUsageDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsageDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsageDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryUsageDetails
    **/
    _count?: true | InventoryUsageDetailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventoryUsageDetailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventoryUsageDetailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryUsageDetailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryUsageDetailMaxAggregateInputType
  }

  export type GetInventoryUsageDetailAggregateType<T extends InventoryUsageDetailAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryUsageDetail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryUsageDetail[P]>
      : GetScalarType<T[P], AggregateInventoryUsageDetail[P]>
  }




  export type InventoryUsageDetailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryUsageDetailWhereInput
    orderBy?: InventoryUsageDetailOrderByWithAggregationInput | InventoryUsageDetailOrderByWithAggregationInput[]
    by: InventoryUsageDetailScalarFieldEnum[] | InventoryUsageDetailScalarFieldEnum
    having?: InventoryUsageDetailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryUsageDetailCountAggregateInputType | true
    _avg?: InventoryUsageDetailAvgAggregateInputType
    _sum?: InventoryUsageDetailSumAggregateInputType
    _min?: InventoryUsageDetailMinAggregateInputType
    _max?: InventoryUsageDetailMaxAggregateInputType
  }

  export type InventoryUsageDetailGroupByOutputType = {
    id: string
    createdAt: Date
    doses: number | null
    frascoLevel: number | null
    inventoryUsageId: string
    movementId: string | null
    productId: string
    quantity: Decimal
    totalCost: Decimal
    unitCost: Decimal
    units: number | null
    updatedAt: Date
    _count: InventoryUsageDetailCountAggregateOutputType | null
    _avg: InventoryUsageDetailAvgAggregateOutputType | null
    _sum: InventoryUsageDetailSumAggregateOutputType | null
    _min: InventoryUsageDetailMinAggregateOutputType | null
    _max: InventoryUsageDetailMaxAggregateOutputType | null
  }

  type GetInventoryUsageDetailGroupByPayload<T extends InventoryUsageDetailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryUsageDetailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryUsageDetailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryUsageDetailGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryUsageDetailGroupByOutputType[P]>
        }
      >
    >


  export type InventoryUsageDetailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    doses?: boolean
    frascoLevel?: boolean
    inventoryUsageId?: boolean
    movementId?: boolean
    productId?: boolean
    quantity?: boolean
    totalCost?: boolean
    unitCost?: boolean
    units?: boolean
    updatedAt?: boolean
    inventoryUsage?: boolean | InventoryUsageDefaultArgs<ExtArgs>
    movement?: boolean | InventoryUsageDetail$movementArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryUsageDetail"]>

  export type InventoryUsageDetailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    doses?: boolean
    frascoLevel?: boolean
    inventoryUsageId?: boolean
    movementId?: boolean
    productId?: boolean
    quantity?: boolean
    totalCost?: boolean
    unitCost?: boolean
    units?: boolean
    updatedAt?: boolean
    inventoryUsage?: boolean | InventoryUsageDefaultArgs<ExtArgs>
    movement?: boolean | InventoryUsageDetail$movementArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryUsageDetail"]>

  export type InventoryUsageDetailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    doses?: boolean
    frascoLevel?: boolean
    inventoryUsageId?: boolean
    movementId?: boolean
    productId?: boolean
    quantity?: boolean
    totalCost?: boolean
    unitCost?: boolean
    units?: boolean
    updatedAt?: boolean
    inventoryUsage?: boolean | InventoryUsageDefaultArgs<ExtArgs>
    movement?: boolean | InventoryUsageDetail$movementArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryUsageDetail"]>

  export type InventoryUsageDetailSelectScalar = {
    id?: boolean
    createdAt?: boolean
    doses?: boolean
    frascoLevel?: boolean
    inventoryUsageId?: boolean
    movementId?: boolean
    productId?: boolean
    quantity?: boolean
    totalCost?: boolean
    unitCost?: boolean
    units?: boolean
    updatedAt?: boolean
  }

  export type InventoryUsageDetailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "doses" | "frascoLevel" | "inventoryUsageId" | "movementId" | "productId" | "quantity" | "totalCost" | "unitCost" | "units" | "updatedAt", ExtArgs["result"]["inventoryUsageDetail"]>
  export type InventoryUsageDetailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryUsage?: boolean | InventoryUsageDefaultArgs<ExtArgs>
    movement?: boolean | InventoryUsageDetail$movementArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type InventoryUsageDetailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryUsage?: boolean | InventoryUsageDefaultArgs<ExtArgs>
    movement?: boolean | InventoryUsageDetail$movementArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type InventoryUsageDetailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryUsage?: boolean | InventoryUsageDefaultArgs<ExtArgs>
    movement?: boolean | InventoryUsageDetail$movementArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $InventoryUsageDetailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryUsageDetail"
    objects: {
      inventoryUsage: Prisma.$InventoryUsagePayload<ExtArgs>
      movement: Prisma.$MovementPayload<ExtArgs> | null
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      doses: number | null
      frascoLevel: number | null
      inventoryUsageId: string
      movementId: string | null
      productId: string
      quantity: Prisma.Decimal
      totalCost: Prisma.Decimal
      unitCost: Prisma.Decimal
      units: number | null
      updatedAt: Date
    }, ExtArgs["result"]["inventoryUsageDetail"]>
    composites: {}
  }

  type InventoryUsageDetailGetPayload<S extends boolean | null | undefined | InventoryUsageDetailDefaultArgs> = $Result.GetResult<Prisma.$InventoryUsageDetailPayload, S>

  type InventoryUsageDetailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryUsageDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryUsageDetailCountAggregateInputType | true
    }

  export interface InventoryUsageDetailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryUsageDetail'], meta: { name: 'InventoryUsageDetail' } }
    /**
     * Find zero or one InventoryUsageDetail that matches the filter.
     * @param {InventoryUsageDetailFindUniqueArgs} args - Arguments to find a InventoryUsageDetail
     * @example
     * // Get one InventoryUsageDetail
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryUsageDetailFindUniqueArgs>(args: SelectSubset<T, InventoryUsageDetailFindUniqueArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryUsageDetail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryUsageDetailFindUniqueOrThrowArgs} args - Arguments to find a InventoryUsageDetail
     * @example
     * // Get one InventoryUsageDetail
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryUsageDetailFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryUsageDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryUsageDetail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageDetailFindFirstArgs} args - Arguments to find a InventoryUsageDetail
     * @example
     * // Get one InventoryUsageDetail
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryUsageDetailFindFirstArgs>(args?: SelectSubset<T, InventoryUsageDetailFindFirstArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryUsageDetail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageDetailFindFirstOrThrowArgs} args - Arguments to find a InventoryUsageDetail
     * @example
     * // Get one InventoryUsageDetail
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryUsageDetailFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryUsageDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryUsageDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageDetailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryUsageDetails
     * const inventoryUsageDetails = await prisma.inventoryUsageDetail.findMany()
     * 
     * // Get first 10 InventoryUsageDetails
     * const inventoryUsageDetails = await prisma.inventoryUsageDetail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryUsageDetailWithIdOnly = await prisma.inventoryUsageDetail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryUsageDetailFindManyArgs>(args?: SelectSubset<T, InventoryUsageDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryUsageDetail.
     * @param {InventoryUsageDetailCreateArgs} args - Arguments to create a InventoryUsageDetail.
     * @example
     * // Create one InventoryUsageDetail
     * const InventoryUsageDetail = await prisma.inventoryUsageDetail.create({
     *   data: {
     *     // ... data to create a InventoryUsageDetail
     *   }
     * })
     * 
     */
    create<T extends InventoryUsageDetailCreateArgs>(args: SelectSubset<T, InventoryUsageDetailCreateArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryUsageDetails.
     * @param {InventoryUsageDetailCreateManyArgs} args - Arguments to create many InventoryUsageDetails.
     * @example
     * // Create many InventoryUsageDetails
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryUsageDetailCreateManyArgs>(args?: SelectSubset<T, InventoryUsageDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryUsageDetails and returns the data saved in the database.
     * @param {InventoryUsageDetailCreateManyAndReturnArgs} args - Arguments to create many InventoryUsageDetails.
     * @example
     * // Create many InventoryUsageDetails
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryUsageDetails and only return the `id`
     * const inventoryUsageDetailWithIdOnly = await prisma.inventoryUsageDetail.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryUsageDetailCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryUsageDetailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryUsageDetail.
     * @param {InventoryUsageDetailDeleteArgs} args - Arguments to delete one InventoryUsageDetail.
     * @example
     * // Delete one InventoryUsageDetail
     * const InventoryUsageDetail = await prisma.inventoryUsageDetail.delete({
     *   where: {
     *     // ... filter to delete one InventoryUsageDetail
     *   }
     * })
     * 
     */
    delete<T extends InventoryUsageDetailDeleteArgs>(args: SelectSubset<T, InventoryUsageDetailDeleteArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryUsageDetail.
     * @param {InventoryUsageDetailUpdateArgs} args - Arguments to update one InventoryUsageDetail.
     * @example
     * // Update one InventoryUsageDetail
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryUsageDetailUpdateArgs>(args: SelectSubset<T, InventoryUsageDetailUpdateArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryUsageDetails.
     * @param {InventoryUsageDetailDeleteManyArgs} args - Arguments to filter InventoryUsageDetails to delete.
     * @example
     * // Delete a few InventoryUsageDetails
     * const { count } = await prisma.inventoryUsageDetail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryUsageDetailDeleteManyArgs>(args?: SelectSubset<T, InventoryUsageDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryUsageDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageDetailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryUsageDetails
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryUsageDetailUpdateManyArgs>(args: SelectSubset<T, InventoryUsageDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryUsageDetails and returns the data updated in the database.
     * @param {InventoryUsageDetailUpdateManyAndReturnArgs} args - Arguments to update many InventoryUsageDetails.
     * @example
     * // Update many InventoryUsageDetails
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryUsageDetails and only return the `id`
     * const inventoryUsageDetailWithIdOnly = await prisma.inventoryUsageDetail.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryUsageDetailUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryUsageDetailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryUsageDetail.
     * @param {InventoryUsageDetailUpsertArgs} args - Arguments to update or create a InventoryUsageDetail.
     * @example
     * // Update or create a InventoryUsageDetail
     * const inventoryUsageDetail = await prisma.inventoryUsageDetail.upsert({
     *   create: {
     *     // ... data to create a InventoryUsageDetail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryUsageDetail we want to update
     *   }
     * })
     */
    upsert<T extends InventoryUsageDetailUpsertArgs>(args: SelectSubset<T, InventoryUsageDetailUpsertArgs<ExtArgs>>): Prisma__InventoryUsageDetailClient<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryUsageDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageDetailCountArgs} args - Arguments to filter InventoryUsageDetails to count.
     * @example
     * // Count the number of InventoryUsageDetails
     * const count = await prisma.inventoryUsageDetail.count({
     *   where: {
     *     // ... the filter for the InventoryUsageDetails we want to count
     *   }
     * })
    **/
    count<T extends InventoryUsageDetailCountArgs>(
      args?: Subset<T, InventoryUsageDetailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryUsageDetailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryUsageDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryUsageDetailAggregateArgs>(args: Subset<T, InventoryUsageDetailAggregateArgs>): Prisma.PrismaPromise<GetInventoryUsageDetailAggregateType<T>>

    /**
     * Group by InventoryUsageDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryUsageDetailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryUsageDetailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryUsageDetailGroupByArgs['orderBy'] }
        : { orderBy?: InventoryUsageDetailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryUsageDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryUsageDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryUsageDetail model
   */
  readonly fields: InventoryUsageDetailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryUsageDetail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryUsageDetailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventoryUsage<T extends InventoryUsageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventoryUsageDefaultArgs<ExtArgs>>): Prisma__InventoryUsageClient<$Result.GetResult<Prisma.$InventoryUsagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    movement<T extends InventoryUsageDetail$movementArgs<ExtArgs> = {}>(args?: Subset<T, InventoryUsageDetail$movementArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryUsageDetail model
   */
  interface InventoryUsageDetailFieldRefs {
    readonly id: FieldRef<"InventoryUsageDetail", 'String'>
    readonly createdAt: FieldRef<"InventoryUsageDetail", 'DateTime'>
    readonly doses: FieldRef<"InventoryUsageDetail", 'Int'>
    readonly frascoLevel: FieldRef<"InventoryUsageDetail", 'Int'>
    readonly inventoryUsageId: FieldRef<"InventoryUsageDetail", 'String'>
    readonly movementId: FieldRef<"InventoryUsageDetail", 'String'>
    readonly productId: FieldRef<"InventoryUsageDetail", 'String'>
    readonly quantity: FieldRef<"InventoryUsageDetail", 'Decimal'>
    readonly totalCost: FieldRef<"InventoryUsageDetail", 'Decimal'>
    readonly unitCost: FieldRef<"InventoryUsageDetail", 'Decimal'>
    readonly units: FieldRef<"InventoryUsageDetail", 'Int'>
    readonly updatedAt: FieldRef<"InventoryUsageDetail", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InventoryUsageDetail findUnique
   */
  export type InventoryUsageDetailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsageDetail to fetch.
     */
    where: InventoryUsageDetailWhereUniqueInput
  }

  /**
   * InventoryUsageDetail findUniqueOrThrow
   */
  export type InventoryUsageDetailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsageDetail to fetch.
     */
    where: InventoryUsageDetailWhereUniqueInput
  }

  /**
   * InventoryUsageDetail findFirst
   */
  export type InventoryUsageDetailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsageDetail to fetch.
     */
    where?: InventoryUsageDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsageDetails to fetch.
     */
    orderBy?: InventoryUsageDetailOrderByWithRelationInput | InventoryUsageDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryUsageDetails.
     */
    cursor?: InventoryUsageDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsageDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsageDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryUsageDetails.
     */
    distinct?: InventoryUsageDetailScalarFieldEnum | InventoryUsageDetailScalarFieldEnum[]
  }

  /**
   * InventoryUsageDetail findFirstOrThrow
   */
  export type InventoryUsageDetailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsageDetail to fetch.
     */
    where?: InventoryUsageDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsageDetails to fetch.
     */
    orderBy?: InventoryUsageDetailOrderByWithRelationInput | InventoryUsageDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryUsageDetails.
     */
    cursor?: InventoryUsageDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsageDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsageDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryUsageDetails.
     */
    distinct?: InventoryUsageDetailScalarFieldEnum | InventoryUsageDetailScalarFieldEnum[]
  }

  /**
   * InventoryUsageDetail findMany
   */
  export type InventoryUsageDetailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * Filter, which InventoryUsageDetails to fetch.
     */
    where?: InventoryUsageDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryUsageDetails to fetch.
     */
    orderBy?: InventoryUsageDetailOrderByWithRelationInput | InventoryUsageDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryUsageDetails.
     */
    cursor?: InventoryUsageDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryUsageDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryUsageDetails.
     */
    skip?: number
    distinct?: InventoryUsageDetailScalarFieldEnum | InventoryUsageDetailScalarFieldEnum[]
  }

  /**
   * InventoryUsageDetail create
   */
  export type InventoryUsageDetailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryUsageDetail.
     */
    data: XOR<InventoryUsageDetailCreateInput, InventoryUsageDetailUncheckedCreateInput>
  }

  /**
   * InventoryUsageDetail createMany
   */
  export type InventoryUsageDetailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryUsageDetails.
     */
    data: InventoryUsageDetailCreateManyInput | InventoryUsageDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryUsageDetail createManyAndReturn
   */
  export type InventoryUsageDetailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryUsageDetails.
     */
    data: InventoryUsageDetailCreateManyInput | InventoryUsageDetailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryUsageDetail update
   */
  export type InventoryUsageDetailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryUsageDetail.
     */
    data: XOR<InventoryUsageDetailUpdateInput, InventoryUsageDetailUncheckedUpdateInput>
    /**
     * Choose, which InventoryUsageDetail to update.
     */
    where: InventoryUsageDetailWhereUniqueInput
  }

  /**
   * InventoryUsageDetail updateMany
   */
  export type InventoryUsageDetailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryUsageDetails.
     */
    data: XOR<InventoryUsageDetailUpdateManyMutationInput, InventoryUsageDetailUncheckedUpdateManyInput>
    /**
     * Filter which InventoryUsageDetails to update
     */
    where?: InventoryUsageDetailWhereInput
    /**
     * Limit how many InventoryUsageDetails to update.
     */
    limit?: number
  }

  /**
   * InventoryUsageDetail updateManyAndReturn
   */
  export type InventoryUsageDetailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * The data used to update InventoryUsageDetails.
     */
    data: XOR<InventoryUsageDetailUpdateManyMutationInput, InventoryUsageDetailUncheckedUpdateManyInput>
    /**
     * Filter which InventoryUsageDetails to update
     */
    where?: InventoryUsageDetailWhereInput
    /**
     * Limit how many InventoryUsageDetails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryUsageDetail upsert
   */
  export type InventoryUsageDetailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryUsageDetail to update in case it exists.
     */
    where: InventoryUsageDetailWhereUniqueInput
    /**
     * In case the InventoryUsageDetail found by the `where` argument doesn't exist, create a new InventoryUsageDetail with this data.
     */
    create: XOR<InventoryUsageDetailCreateInput, InventoryUsageDetailUncheckedCreateInput>
    /**
     * In case the InventoryUsageDetail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryUsageDetailUpdateInput, InventoryUsageDetailUncheckedUpdateInput>
  }

  /**
   * InventoryUsageDetail delete
   */
  export type InventoryUsageDetailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    /**
     * Filter which InventoryUsageDetail to delete.
     */
    where: InventoryUsageDetailWhereUniqueInput
  }

  /**
   * InventoryUsageDetail deleteMany
   */
  export type InventoryUsageDetailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryUsageDetails to delete
     */
    where?: InventoryUsageDetailWhereInput
    /**
     * Limit how many InventoryUsageDetails to delete.
     */
    limit?: number
  }

  /**
   * InventoryUsageDetail.movement
   */
  export type InventoryUsageDetail$movementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    where?: MovementWhereInput
  }

  /**
   * InventoryUsageDetail without action
   */
  export type InventoryUsageDetailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
  }


  /**
   * Model Movement
   */

  export type AggregateMovement = {
    _count: MovementCountAggregateOutputType | null
    _avg: MovementAvgAggregateOutputType | null
    _sum: MovementSumAggregateOutputType | null
    _min: MovementMinAggregateOutputType | null
    _max: MovementMaxAggregateOutputType | null
  }

  export type MovementAvgAggregateOutputType = {
    quantity: Decimal | null
    unitCost: Decimal | null
    totalCost: Decimal | null
  }

  export type MovementSumAggregateOutputType = {
    quantity: Decimal | null
    unitCost: Decimal | null
    totalCost: Decimal | null
  }

  export type MovementMinAggregateOutputType = {
    id: string | null
    userId: string | null
    sedeId: string | null
    productId: string | null
    type: $Enums.MovementType | null
    quantity: Decimal | null
    unitCost: Decimal | null
    totalCost: Decimal | null
    batchNumber: string | null
    expiryDate: Date | null
    createdAt: Date | null
  }

  export type MovementMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    sedeId: string | null
    productId: string | null
    type: $Enums.MovementType | null
    quantity: Decimal | null
    unitCost: Decimal | null
    totalCost: Decimal | null
    batchNumber: string | null
    expiryDate: Date | null
    createdAt: Date | null
  }

  export type MovementCountAggregateOutputType = {
    id: number
    userId: number
    sedeId: number
    productId: number
    type: number
    quantity: number
    unitCost: number
    totalCost: number
    batchNumber: number
    expiryDate: number
    createdAt: number
    _all: number
  }


  export type MovementAvgAggregateInputType = {
    quantity?: true
    unitCost?: true
    totalCost?: true
  }

  export type MovementSumAggregateInputType = {
    quantity?: true
    unitCost?: true
    totalCost?: true
  }

  export type MovementMinAggregateInputType = {
    id?: true
    userId?: true
    sedeId?: true
    productId?: true
    type?: true
    quantity?: true
    unitCost?: true
    totalCost?: true
    batchNumber?: true
    expiryDate?: true
    createdAt?: true
  }

  export type MovementMaxAggregateInputType = {
    id?: true
    userId?: true
    sedeId?: true
    productId?: true
    type?: true
    quantity?: true
    unitCost?: true
    totalCost?: true
    batchNumber?: true
    expiryDate?: true
    createdAt?: true
  }

  export type MovementCountAggregateInputType = {
    id?: true
    userId?: true
    sedeId?: true
    productId?: true
    type?: true
    quantity?: true
    unitCost?: true
    totalCost?: true
    batchNumber?: true
    expiryDate?: true
    createdAt?: true
    _all?: true
  }

  export type MovementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Movement to aggregate.
     */
    where?: MovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Movements to fetch.
     */
    orderBy?: MovementOrderByWithRelationInput | MovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Movements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Movements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Movements
    **/
    _count?: true | MovementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MovementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MovementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MovementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MovementMaxAggregateInputType
  }

  export type GetMovementAggregateType<T extends MovementAggregateArgs> = {
        [P in keyof T & keyof AggregateMovement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovement[P]>
      : GetScalarType<T[P], AggregateMovement[P]>
  }




  export type MovementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovementWhereInput
    orderBy?: MovementOrderByWithAggregationInput | MovementOrderByWithAggregationInput[]
    by: MovementScalarFieldEnum[] | MovementScalarFieldEnum
    having?: MovementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MovementCountAggregateInputType | true
    _avg?: MovementAvgAggregateInputType
    _sum?: MovementSumAggregateInputType
    _min?: MovementMinAggregateInputType
    _max?: MovementMaxAggregateInputType
  }

  export type MovementGroupByOutputType = {
    id: string
    userId: string
    sedeId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal
    unitCost: Decimal
    totalCost: Decimal
    batchNumber: string | null
    expiryDate: Date | null
    createdAt: Date
    _count: MovementCountAggregateOutputType | null
    _avg: MovementAvgAggregateOutputType | null
    _sum: MovementSumAggregateOutputType | null
    _min: MovementMinAggregateOutputType | null
    _max: MovementMaxAggregateOutputType | null
  }

  type GetMovementGroupByPayload<T extends MovementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MovementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MovementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MovementGroupByOutputType[P]>
            : GetScalarType<T[P], MovementGroupByOutputType[P]>
        }
      >
    >


  export type MovementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sedeId?: boolean
    productId?: boolean
    type?: boolean
    quantity?: boolean
    unitCost?: boolean
    totalCost?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    InventoryUsageDetail?: boolean | Movement$InventoryUsageDetailArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | MovementCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movement"]>

  export type MovementSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sedeId?: boolean
    productId?: boolean
    type?: boolean
    quantity?: boolean
    unitCost?: boolean
    totalCost?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movement"]>

  export type MovementSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sedeId?: boolean
    productId?: boolean
    type?: boolean
    quantity?: boolean
    unitCost?: boolean
    totalCost?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movement"]>

  export type MovementSelectScalar = {
    id?: boolean
    userId?: boolean
    sedeId?: boolean
    productId?: boolean
    type?: boolean
    quantity?: boolean
    unitCost?: boolean
    totalCost?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    createdAt?: boolean
  }

  export type MovementOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "sedeId" | "productId" | "type" | "quantity" | "unitCost" | "totalCost" | "batchNumber" | "expiryDate" | "createdAt", ExtArgs["result"]["movement"]>
  export type MovementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InventoryUsageDetail?: boolean | Movement$InventoryUsageDetailArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | MovementCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MovementIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MovementIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MovementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Movement"
    objects: {
      InventoryUsageDetail: Prisma.$InventoryUsageDetailPayload<ExtArgs>[]
      product: Prisma.$ProductPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      sedeId: string
      productId: string
      type: $Enums.MovementType
      quantity: Prisma.Decimal
      unitCost: Prisma.Decimal
      totalCost: Prisma.Decimal
      batchNumber: string | null
      expiryDate: Date | null
      createdAt: Date
    }, ExtArgs["result"]["movement"]>
    composites: {}
  }

  type MovementGetPayload<S extends boolean | null | undefined | MovementDefaultArgs> = $Result.GetResult<Prisma.$MovementPayload, S>

  type MovementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MovementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MovementCountAggregateInputType | true
    }

  export interface MovementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Movement'], meta: { name: 'Movement' } }
    /**
     * Find zero or one Movement that matches the filter.
     * @param {MovementFindUniqueArgs} args - Arguments to find a Movement
     * @example
     * // Get one Movement
     * const movement = await prisma.movement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MovementFindUniqueArgs>(args: SelectSubset<T, MovementFindUniqueArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Movement that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MovementFindUniqueOrThrowArgs} args - Arguments to find a Movement
     * @example
     * // Get one Movement
     * const movement = await prisma.movement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MovementFindUniqueOrThrowArgs>(args: SelectSubset<T, MovementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Movement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovementFindFirstArgs} args - Arguments to find a Movement
     * @example
     * // Get one Movement
     * const movement = await prisma.movement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MovementFindFirstArgs>(args?: SelectSubset<T, MovementFindFirstArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Movement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovementFindFirstOrThrowArgs} args - Arguments to find a Movement
     * @example
     * // Get one Movement
     * const movement = await prisma.movement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MovementFindFirstOrThrowArgs>(args?: SelectSubset<T, MovementFindFirstOrThrowArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Movements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Movements
     * const movements = await prisma.movement.findMany()
     * 
     * // Get first 10 Movements
     * const movements = await prisma.movement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const movementWithIdOnly = await prisma.movement.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MovementFindManyArgs>(args?: SelectSubset<T, MovementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Movement.
     * @param {MovementCreateArgs} args - Arguments to create a Movement.
     * @example
     * // Create one Movement
     * const Movement = await prisma.movement.create({
     *   data: {
     *     // ... data to create a Movement
     *   }
     * })
     * 
     */
    create<T extends MovementCreateArgs>(args: SelectSubset<T, MovementCreateArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Movements.
     * @param {MovementCreateManyArgs} args - Arguments to create many Movements.
     * @example
     * // Create many Movements
     * const movement = await prisma.movement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MovementCreateManyArgs>(args?: SelectSubset<T, MovementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Movements and returns the data saved in the database.
     * @param {MovementCreateManyAndReturnArgs} args - Arguments to create many Movements.
     * @example
     * // Create many Movements
     * const movement = await prisma.movement.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Movements and only return the `id`
     * const movementWithIdOnly = await prisma.movement.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MovementCreateManyAndReturnArgs>(args?: SelectSubset<T, MovementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Movement.
     * @param {MovementDeleteArgs} args - Arguments to delete one Movement.
     * @example
     * // Delete one Movement
     * const Movement = await prisma.movement.delete({
     *   where: {
     *     // ... filter to delete one Movement
     *   }
     * })
     * 
     */
    delete<T extends MovementDeleteArgs>(args: SelectSubset<T, MovementDeleteArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Movement.
     * @param {MovementUpdateArgs} args - Arguments to update one Movement.
     * @example
     * // Update one Movement
     * const movement = await prisma.movement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MovementUpdateArgs>(args: SelectSubset<T, MovementUpdateArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Movements.
     * @param {MovementDeleteManyArgs} args - Arguments to filter Movements to delete.
     * @example
     * // Delete a few Movements
     * const { count } = await prisma.movement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MovementDeleteManyArgs>(args?: SelectSubset<T, MovementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Movements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Movements
     * const movement = await prisma.movement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MovementUpdateManyArgs>(args: SelectSubset<T, MovementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Movements and returns the data updated in the database.
     * @param {MovementUpdateManyAndReturnArgs} args - Arguments to update many Movements.
     * @example
     * // Update many Movements
     * const movement = await prisma.movement.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Movements and only return the `id`
     * const movementWithIdOnly = await prisma.movement.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MovementUpdateManyAndReturnArgs>(args: SelectSubset<T, MovementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Movement.
     * @param {MovementUpsertArgs} args - Arguments to update or create a Movement.
     * @example
     * // Update or create a Movement
     * const movement = await prisma.movement.upsert({
     *   create: {
     *     // ... data to create a Movement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Movement we want to update
     *   }
     * })
     */
    upsert<T extends MovementUpsertArgs>(args: SelectSubset<T, MovementUpsertArgs<ExtArgs>>): Prisma__MovementClient<$Result.GetResult<Prisma.$MovementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Movements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovementCountArgs} args - Arguments to filter Movements to count.
     * @example
     * // Count the number of Movements
     * const count = await prisma.movement.count({
     *   where: {
     *     // ... the filter for the Movements we want to count
     *   }
     * })
    **/
    count<T extends MovementCountArgs>(
      args?: Subset<T, MovementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MovementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Movement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MovementAggregateArgs>(args: Subset<T, MovementAggregateArgs>): Prisma.PrismaPromise<GetMovementAggregateType<T>>

    /**
     * Group by Movement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MovementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MovementGroupByArgs['orderBy'] }
        : { orderBy?: MovementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MovementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Movement model
   */
  readonly fields: MovementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Movement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MovementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    InventoryUsageDetail<T extends Movement$InventoryUsageDetailArgs<ExtArgs> = {}>(args?: Subset<T, Movement$InventoryUsageDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryUsageDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Movement model
   */
  interface MovementFieldRefs {
    readonly id: FieldRef<"Movement", 'String'>
    readonly userId: FieldRef<"Movement", 'String'>
    readonly sedeId: FieldRef<"Movement", 'String'>
    readonly productId: FieldRef<"Movement", 'String'>
    readonly type: FieldRef<"Movement", 'MovementType'>
    readonly quantity: FieldRef<"Movement", 'Decimal'>
    readonly unitCost: FieldRef<"Movement", 'Decimal'>
    readonly totalCost: FieldRef<"Movement", 'Decimal'>
    readonly batchNumber: FieldRef<"Movement", 'String'>
    readonly expiryDate: FieldRef<"Movement", 'DateTime'>
    readonly createdAt: FieldRef<"Movement", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Movement findUnique
   */
  export type MovementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * Filter, which Movement to fetch.
     */
    where: MovementWhereUniqueInput
  }

  /**
   * Movement findUniqueOrThrow
   */
  export type MovementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * Filter, which Movement to fetch.
     */
    where: MovementWhereUniqueInput
  }

  /**
   * Movement findFirst
   */
  export type MovementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * Filter, which Movement to fetch.
     */
    where?: MovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Movements to fetch.
     */
    orderBy?: MovementOrderByWithRelationInput | MovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Movements.
     */
    cursor?: MovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Movements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Movements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Movements.
     */
    distinct?: MovementScalarFieldEnum | MovementScalarFieldEnum[]
  }

  /**
   * Movement findFirstOrThrow
   */
  export type MovementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * Filter, which Movement to fetch.
     */
    where?: MovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Movements to fetch.
     */
    orderBy?: MovementOrderByWithRelationInput | MovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Movements.
     */
    cursor?: MovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Movements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Movements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Movements.
     */
    distinct?: MovementScalarFieldEnum | MovementScalarFieldEnum[]
  }

  /**
   * Movement findMany
   */
  export type MovementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * Filter, which Movements to fetch.
     */
    where?: MovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Movements to fetch.
     */
    orderBy?: MovementOrderByWithRelationInput | MovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Movements.
     */
    cursor?: MovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Movements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Movements.
     */
    skip?: number
    distinct?: MovementScalarFieldEnum | MovementScalarFieldEnum[]
  }

  /**
   * Movement create
   */
  export type MovementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * The data needed to create a Movement.
     */
    data: XOR<MovementCreateInput, MovementUncheckedCreateInput>
  }

  /**
   * Movement createMany
   */
  export type MovementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Movements.
     */
    data: MovementCreateManyInput | MovementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Movement createManyAndReturn
   */
  export type MovementCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * The data used to create many Movements.
     */
    data: MovementCreateManyInput | MovementCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Movement update
   */
  export type MovementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * The data needed to update a Movement.
     */
    data: XOR<MovementUpdateInput, MovementUncheckedUpdateInput>
    /**
     * Choose, which Movement to update.
     */
    where: MovementWhereUniqueInput
  }

  /**
   * Movement updateMany
   */
  export type MovementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Movements.
     */
    data: XOR<MovementUpdateManyMutationInput, MovementUncheckedUpdateManyInput>
    /**
     * Filter which Movements to update
     */
    where?: MovementWhereInput
    /**
     * Limit how many Movements to update.
     */
    limit?: number
  }

  /**
   * Movement updateManyAndReturn
   */
  export type MovementUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * The data used to update Movements.
     */
    data: XOR<MovementUpdateManyMutationInput, MovementUncheckedUpdateManyInput>
    /**
     * Filter which Movements to update
     */
    where?: MovementWhereInput
    /**
     * Limit how many Movements to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Movement upsert
   */
  export type MovementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * The filter to search for the Movement to update in case it exists.
     */
    where: MovementWhereUniqueInput
    /**
     * In case the Movement found by the `where` argument doesn't exist, create a new Movement with this data.
     */
    create: XOR<MovementCreateInput, MovementUncheckedCreateInput>
    /**
     * In case the Movement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MovementUpdateInput, MovementUncheckedUpdateInput>
  }

  /**
   * Movement delete
   */
  export type MovementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
    /**
     * Filter which Movement to delete.
     */
    where: MovementWhereUniqueInput
  }

  /**
   * Movement deleteMany
   */
  export type MovementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Movements to delete
     */
    where?: MovementWhereInput
    /**
     * Limit how many Movements to delete.
     */
    limit?: number
  }

  /**
   * Movement.InventoryUsageDetail
   */
  export type Movement$InventoryUsageDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryUsageDetail
     */
    select?: InventoryUsageDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryUsageDetail
     */
    omit?: InventoryUsageDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryUsageDetailInclude<ExtArgs> | null
    where?: InventoryUsageDetailWhereInput
    orderBy?: InventoryUsageDetailOrderByWithRelationInput | InventoryUsageDetailOrderByWithRelationInput[]
    cursor?: InventoryUsageDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryUsageDetailScalarFieldEnum | InventoryUsageDetailScalarFieldEnum[]
  }

  /**
   * Movement without action
   */
  export type MovementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Movement
     */
    select?: MovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Movement
     */
    omit?: MovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovementInclude<ExtArgs> | null
  }


  /**
   * Model StockBySede
   */

  export type AggregateStockBySede = {
    _count: StockBySedeCountAggregateOutputType | null
    _avg: StockBySedeAvgAggregateOutputType | null
    _sum: StockBySedeSumAggregateOutputType | null
    _min: StockBySedeMinAggregateOutputType | null
    _max: StockBySedeMaxAggregateOutputType | null
  }

  export type StockBySedeAvgAggregateOutputType = {
    quantity: Decimal | null
  }

  export type StockBySedeSumAggregateOutputType = {
    quantity: Decimal | null
  }

  export type StockBySedeMinAggregateOutputType = {
    id: string | null
    productId: string | null
    sedeId: string | null
    quantity: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockBySedeMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    sedeId: string | null
    quantity: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockBySedeCountAggregateOutputType = {
    id: number
    productId: number
    sedeId: number
    quantity: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type StockBySedeAvgAggregateInputType = {
    quantity?: true
  }

  export type StockBySedeSumAggregateInputType = {
    quantity?: true
  }

  export type StockBySedeMinAggregateInputType = {
    id?: true
    productId?: true
    sedeId?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockBySedeMaxAggregateInputType = {
    id?: true
    productId?: true
    sedeId?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockBySedeCountAggregateInputType = {
    id?: true
    productId?: true
    sedeId?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type StockBySedeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockBySede to aggregate.
     */
    where?: StockBySedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBySedes to fetch.
     */
    orderBy?: StockBySedeOrderByWithRelationInput | StockBySedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockBySedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBySedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBySedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockBySedes
    **/
    _count?: true | StockBySedeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockBySedeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockBySedeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockBySedeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockBySedeMaxAggregateInputType
  }

  export type GetStockBySedeAggregateType<T extends StockBySedeAggregateArgs> = {
        [P in keyof T & keyof AggregateStockBySede]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockBySede[P]>
      : GetScalarType<T[P], AggregateStockBySede[P]>
  }




  export type StockBySedeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBySedeWhereInput
    orderBy?: StockBySedeOrderByWithAggregationInput | StockBySedeOrderByWithAggregationInput[]
    by: StockBySedeScalarFieldEnum[] | StockBySedeScalarFieldEnum
    having?: StockBySedeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockBySedeCountAggregateInputType | true
    _avg?: StockBySedeAvgAggregateInputType
    _sum?: StockBySedeSumAggregateInputType
    _min?: StockBySedeMinAggregateInputType
    _max?: StockBySedeMaxAggregateInputType
  }

  export type StockBySedeGroupByOutputType = {
    id: string
    productId: string
    sedeId: string
    quantity: Decimal
    createdAt: Date
    updatedAt: Date
    _count: StockBySedeCountAggregateOutputType | null
    _avg: StockBySedeAvgAggregateOutputType | null
    _sum: StockBySedeSumAggregateOutputType | null
    _min: StockBySedeMinAggregateOutputType | null
    _max: StockBySedeMaxAggregateOutputType | null
  }

  type GetStockBySedeGroupByPayload<T extends StockBySedeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockBySedeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockBySedeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockBySedeGroupByOutputType[P]>
            : GetScalarType<T[P], StockBySedeGroupByOutputType[P]>
        }
      >
    >


  export type StockBySedeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockBySede"]>

  export type StockBySedeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockBySede"]>

  export type StockBySedeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockBySede"]>

  export type StockBySedeSelectScalar = {
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type StockBySedeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "sedeId" | "quantity" | "createdAt" | "updatedAt", ExtArgs["result"]["stockBySede"]>
  export type StockBySedeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type StockBySedeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type StockBySedeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }

  export type $StockBySedePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockBySede"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      sedeId: string
      quantity: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["stockBySede"]>
    composites: {}
  }

  type StockBySedeGetPayload<S extends boolean | null | undefined | StockBySedeDefaultArgs> = $Result.GetResult<Prisma.$StockBySedePayload, S>

  type StockBySedeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockBySedeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockBySedeCountAggregateInputType | true
    }

  export interface StockBySedeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockBySede'], meta: { name: 'StockBySede' } }
    /**
     * Find zero or one StockBySede that matches the filter.
     * @param {StockBySedeFindUniqueArgs} args - Arguments to find a StockBySede
     * @example
     * // Get one StockBySede
     * const stockBySede = await prisma.stockBySede.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockBySedeFindUniqueArgs>(args: SelectSubset<T, StockBySedeFindUniqueArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockBySede that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockBySedeFindUniqueOrThrowArgs} args - Arguments to find a StockBySede
     * @example
     * // Get one StockBySede
     * const stockBySede = await prisma.stockBySede.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockBySedeFindUniqueOrThrowArgs>(args: SelectSubset<T, StockBySedeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockBySede that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBySedeFindFirstArgs} args - Arguments to find a StockBySede
     * @example
     * // Get one StockBySede
     * const stockBySede = await prisma.stockBySede.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockBySedeFindFirstArgs>(args?: SelectSubset<T, StockBySedeFindFirstArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockBySede that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBySedeFindFirstOrThrowArgs} args - Arguments to find a StockBySede
     * @example
     * // Get one StockBySede
     * const stockBySede = await prisma.stockBySede.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockBySedeFindFirstOrThrowArgs>(args?: SelectSubset<T, StockBySedeFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockBySedes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBySedeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockBySedes
     * const stockBySedes = await prisma.stockBySede.findMany()
     * 
     * // Get first 10 StockBySedes
     * const stockBySedes = await prisma.stockBySede.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockBySedeWithIdOnly = await prisma.stockBySede.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockBySedeFindManyArgs>(args?: SelectSubset<T, StockBySedeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockBySede.
     * @param {StockBySedeCreateArgs} args - Arguments to create a StockBySede.
     * @example
     * // Create one StockBySede
     * const StockBySede = await prisma.stockBySede.create({
     *   data: {
     *     // ... data to create a StockBySede
     *   }
     * })
     * 
     */
    create<T extends StockBySedeCreateArgs>(args: SelectSubset<T, StockBySedeCreateArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockBySedes.
     * @param {StockBySedeCreateManyArgs} args - Arguments to create many StockBySedes.
     * @example
     * // Create many StockBySedes
     * const stockBySede = await prisma.stockBySede.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockBySedeCreateManyArgs>(args?: SelectSubset<T, StockBySedeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StockBySedes and returns the data saved in the database.
     * @param {StockBySedeCreateManyAndReturnArgs} args - Arguments to create many StockBySedes.
     * @example
     * // Create many StockBySedes
     * const stockBySede = await prisma.stockBySede.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StockBySedes and only return the `id`
     * const stockBySedeWithIdOnly = await prisma.stockBySede.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StockBySedeCreateManyAndReturnArgs>(args?: SelectSubset<T, StockBySedeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StockBySede.
     * @param {StockBySedeDeleteArgs} args - Arguments to delete one StockBySede.
     * @example
     * // Delete one StockBySede
     * const StockBySede = await prisma.stockBySede.delete({
     *   where: {
     *     // ... filter to delete one StockBySede
     *   }
     * })
     * 
     */
    delete<T extends StockBySedeDeleteArgs>(args: SelectSubset<T, StockBySedeDeleteArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockBySede.
     * @param {StockBySedeUpdateArgs} args - Arguments to update one StockBySede.
     * @example
     * // Update one StockBySede
     * const stockBySede = await prisma.stockBySede.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockBySedeUpdateArgs>(args: SelectSubset<T, StockBySedeUpdateArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockBySedes.
     * @param {StockBySedeDeleteManyArgs} args - Arguments to filter StockBySedes to delete.
     * @example
     * // Delete a few StockBySedes
     * const { count } = await prisma.stockBySede.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockBySedeDeleteManyArgs>(args?: SelectSubset<T, StockBySedeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockBySedes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBySedeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockBySedes
     * const stockBySede = await prisma.stockBySede.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockBySedeUpdateManyArgs>(args: SelectSubset<T, StockBySedeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockBySedes and returns the data updated in the database.
     * @param {StockBySedeUpdateManyAndReturnArgs} args - Arguments to update many StockBySedes.
     * @example
     * // Update many StockBySedes
     * const stockBySede = await prisma.stockBySede.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StockBySedes and only return the `id`
     * const stockBySedeWithIdOnly = await prisma.stockBySede.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StockBySedeUpdateManyAndReturnArgs>(args: SelectSubset<T, StockBySedeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StockBySede.
     * @param {StockBySedeUpsertArgs} args - Arguments to update or create a StockBySede.
     * @example
     * // Update or create a StockBySede
     * const stockBySede = await prisma.stockBySede.upsert({
     *   create: {
     *     // ... data to create a StockBySede
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockBySede we want to update
     *   }
     * })
     */
    upsert<T extends StockBySedeUpsertArgs>(args: SelectSubset<T, StockBySedeUpsertArgs<ExtArgs>>): Prisma__StockBySedeClient<$Result.GetResult<Prisma.$StockBySedePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockBySedes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBySedeCountArgs} args - Arguments to filter StockBySedes to count.
     * @example
     * // Count the number of StockBySedes
     * const count = await prisma.stockBySede.count({
     *   where: {
     *     // ... the filter for the StockBySedes we want to count
     *   }
     * })
    **/
    count<T extends StockBySedeCountArgs>(
      args?: Subset<T, StockBySedeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockBySedeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockBySede.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBySedeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockBySedeAggregateArgs>(args: Subset<T, StockBySedeAggregateArgs>): Prisma.PrismaPromise<GetStockBySedeAggregateType<T>>

    /**
     * Group by StockBySede.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBySedeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockBySedeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockBySedeGroupByArgs['orderBy'] }
        : { orderBy?: StockBySedeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockBySedeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockBySedeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockBySede model
   */
  readonly fields: StockBySedeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockBySede.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockBySedeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockBySede model
   */
  interface StockBySedeFieldRefs {
    readonly id: FieldRef<"StockBySede", 'String'>
    readonly productId: FieldRef<"StockBySede", 'String'>
    readonly sedeId: FieldRef<"StockBySede", 'String'>
    readonly quantity: FieldRef<"StockBySede", 'Decimal'>
    readonly createdAt: FieldRef<"StockBySede", 'DateTime'>
    readonly updatedAt: FieldRef<"StockBySede", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * StockBySede findUnique
   */
  export type StockBySedeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * Filter, which StockBySede to fetch.
     */
    where: StockBySedeWhereUniqueInput
  }

  /**
   * StockBySede findUniqueOrThrow
   */
  export type StockBySedeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * Filter, which StockBySede to fetch.
     */
    where: StockBySedeWhereUniqueInput
  }

  /**
   * StockBySede findFirst
   */
  export type StockBySedeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * Filter, which StockBySede to fetch.
     */
    where?: StockBySedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBySedes to fetch.
     */
    orderBy?: StockBySedeOrderByWithRelationInput | StockBySedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockBySedes.
     */
    cursor?: StockBySedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBySedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBySedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockBySedes.
     */
    distinct?: StockBySedeScalarFieldEnum | StockBySedeScalarFieldEnum[]
  }

  /**
   * StockBySede findFirstOrThrow
   */
  export type StockBySedeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * Filter, which StockBySede to fetch.
     */
    where?: StockBySedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBySedes to fetch.
     */
    orderBy?: StockBySedeOrderByWithRelationInput | StockBySedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockBySedes.
     */
    cursor?: StockBySedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBySedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBySedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockBySedes.
     */
    distinct?: StockBySedeScalarFieldEnum | StockBySedeScalarFieldEnum[]
  }

  /**
   * StockBySede findMany
   */
  export type StockBySedeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * Filter, which StockBySedes to fetch.
     */
    where?: StockBySedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBySedes to fetch.
     */
    orderBy?: StockBySedeOrderByWithRelationInput | StockBySedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockBySedes.
     */
    cursor?: StockBySedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBySedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBySedes.
     */
    skip?: number
    distinct?: StockBySedeScalarFieldEnum | StockBySedeScalarFieldEnum[]
  }

  /**
   * StockBySede create
   */
  export type StockBySedeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * The data needed to create a StockBySede.
     */
    data: XOR<StockBySedeCreateInput, StockBySedeUncheckedCreateInput>
  }

  /**
   * StockBySede createMany
   */
  export type StockBySedeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockBySedes.
     */
    data: StockBySedeCreateManyInput | StockBySedeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockBySede createManyAndReturn
   */
  export type StockBySedeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * The data used to create many StockBySedes.
     */
    data: StockBySedeCreateManyInput | StockBySedeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockBySede update
   */
  export type StockBySedeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * The data needed to update a StockBySede.
     */
    data: XOR<StockBySedeUpdateInput, StockBySedeUncheckedUpdateInput>
    /**
     * Choose, which StockBySede to update.
     */
    where: StockBySedeWhereUniqueInput
  }

  /**
   * StockBySede updateMany
   */
  export type StockBySedeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockBySedes.
     */
    data: XOR<StockBySedeUpdateManyMutationInput, StockBySedeUncheckedUpdateManyInput>
    /**
     * Filter which StockBySedes to update
     */
    where?: StockBySedeWhereInput
    /**
     * Limit how many StockBySedes to update.
     */
    limit?: number
  }

  /**
   * StockBySede updateManyAndReturn
   */
  export type StockBySedeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * The data used to update StockBySedes.
     */
    data: XOR<StockBySedeUpdateManyMutationInput, StockBySedeUncheckedUpdateManyInput>
    /**
     * Filter which StockBySedes to update
     */
    where?: StockBySedeWhereInput
    /**
     * Limit how many StockBySedes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockBySede upsert
   */
  export type StockBySedeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * The filter to search for the StockBySede to update in case it exists.
     */
    where: StockBySedeWhereUniqueInput
    /**
     * In case the StockBySede found by the `where` argument doesn't exist, create a new StockBySede with this data.
     */
    create: XOR<StockBySedeCreateInput, StockBySedeUncheckedCreateInput>
    /**
     * In case the StockBySede was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockBySedeUpdateInput, StockBySedeUncheckedUpdateInput>
  }

  /**
   * StockBySede delete
   */
  export type StockBySedeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
    /**
     * Filter which StockBySede to delete.
     */
    where: StockBySedeWhereUniqueInput
  }

  /**
   * StockBySede deleteMany
   */
  export type StockBySedeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockBySedes to delete
     */
    where?: StockBySedeWhereInput
    /**
     * Limit how many StockBySedes to delete.
     */
    limit?: number
  }

  /**
   * StockBySede without action
   */
  export type StockBySedeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBySede
     */
    select?: StockBySedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBySede
     */
    omit?: StockBySedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBySedeInclude<ExtArgs> | null
  }


  /**
   * Model ProductExpiration
   */

  export type AggregateProductExpiration = {
    _count: ProductExpirationCountAggregateOutputType | null
    _avg: ProductExpirationAvgAggregateOutputType | null
    _sum: ProductExpirationSumAggregateOutputType | null
    _min: ProductExpirationMinAggregateOutputType | null
    _max: ProductExpirationMaxAggregateOutputType | null
  }

  export type ProductExpirationAvgAggregateOutputType = {
    quantity: number | null
  }

  export type ProductExpirationSumAggregateOutputType = {
    quantity: number | null
  }

  export type ProductExpirationMinAggregateOutputType = {
    id: string | null
    productId: string | null
    sedeId: string | null
    batchNumber: string | null
    expiryDate: Date | null
    quantity: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductExpirationMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    sedeId: string | null
    batchNumber: string | null
    expiryDate: Date | null
    quantity: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductExpirationCountAggregateOutputType = {
    id: number
    productId: number
    sedeId: number
    batchNumber: number
    expiryDate: number
    quantity: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductExpirationAvgAggregateInputType = {
    quantity?: true
  }

  export type ProductExpirationSumAggregateInputType = {
    quantity?: true
  }

  export type ProductExpirationMinAggregateInputType = {
    id?: true
    productId?: true
    sedeId?: true
    batchNumber?: true
    expiryDate?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductExpirationMaxAggregateInputType = {
    id?: true
    productId?: true
    sedeId?: true
    batchNumber?: true
    expiryDate?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductExpirationCountAggregateInputType = {
    id?: true
    productId?: true
    sedeId?: true
    batchNumber?: true
    expiryDate?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductExpirationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductExpiration to aggregate.
     */
    where?: ProductExpirationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductExpirations to fetch.
     */
    orderBy?: ProductExpirationOrderByWithRelationInput | ProductExpirationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductExpirationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductExpirations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductExpirations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductExpirations
    **/
    _count?: true | ProductExpirationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductExpirationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductExpirationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductExpirationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductExpirationMaxAggregateInputType
  }

  export type GetProductExpirationAggregateType<T extends ProductExpirationAggregateArgs> = {
        [P in keyof T & keyof AggregateProductExpiration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductExpiration[P]>
      : GetScalarType<T[P], AggregateProductExpiration[P]>
  }




  export type ProductExpirationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductExpirationWhereInput
    orderBy?: ProductExpirationOrderByWithAggregationInput | ProductExpirationOrderByWithAggregationInput[]
    by: ProductExpirationScalarFieldEnum[] | ProductExpirationScalarFieldEnum
    having?: ProductExpirationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductExpirationCountAggregateInputType | true
    _avg?: ProductExpirationAvgAggregateInputType
    _sum?: ProductExpirationSumAggregateInputType
    _min?: ProductExpirationMinAggregateInputType
    _max?: ProductExpirationMaxAggregateInputType
  }

  export type ProductExpirationGroupByOutputType = {
    id: string
    productId: string
    sedeId: string
    batchNumber: string
    expiryDate: Date
    quantity: number
    createdAt: Date
    updatedAt: Date
    _count: ProductExpirationCountAggregateOutputType | null
    _avg: ProductExpirationAvgAggregateOutputType | null
    _sum: ProductExpirationSumAggregateOutputType | null
    _min: ProductExpirationMinAggregateOutputType | null
    _max: ProductExpirationMaxAggregateOutputType | null
  }

  type GetProductExpirationGroupByPayload<T extends ProductExpirationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductExpirationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductExpirationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductExpirationGroupByOutputType[P]>
            : GetScalarType<T[P], ProductExpirationGroupByOutputType[P]>
        }
      >
    >


  export type ProductExpirationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productExpiration"]>

  export type ProductExpirationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productExpiration"]>

  export type ProductExpirationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productExpiration"]>

  export type ProductExpirationSelectScalar = {
    id?: boolean
    productId?: boolean
    sedeId?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    quantity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductExpirationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "sedeId" | "batchNumber" | "expiryDate" | "quantity" | "createdAt" | "updatedAt", ExtArgs["result"]["productExpiration"]>
  export type ProductExpirationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type ProductExpirationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type ProductExpirationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }

  export type $ProductExpirationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductExpiration"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      sedeId: string
      batchNumber: string
      expiryDate: Date
      quantity: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productExpiration"]>
    composites: {}
  }

  type ProductExpirationGetPayload<S extends boolean | null | undefined | ProductExpirationDefaultArgs> = $Result.GetResult<Prisma.$ProductExpirationPayload, S>

  type ProductExpirationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductExpirationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductExpirationCountAggregateInputType | true
    }

  export interface ProductExpirationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductExpiration'], meta: { name: 'ProductExpiration' } }
    /**
     * Find zero or one ProductExpiration that matches the filter.
     * @param {ProductExpirationFindUniqueArgs} args - Arguments to find a ProductExpiration
     * @example
     * // Get one ProductExpiration
     * const productExpiration = await prisma.productExpiration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductExpirationFindUniqueArgs>(args: SelectSubset<T, ProductExpirationFindUniqueArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductExpiration that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductExpirationFindUniqueOrThrowArgs} args - Arguments to find a ProductExpiration
     * @example
     * // Get one ProductExpiration
     * const productExpiration = await prisma.productExpiration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductExpirationFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductExpirationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductExpiration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductExpirationFindFirstArgs} args - Arguments to find a ProductExpiration
     * @example
     * // Get one ProductExpiration
     * const productExpiration = await prisma.productExpiration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductExpirationFindFirstArgs>(args?: SelectSubset<T, ProductExpirationFindFirstArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductExpiration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductExpirationFindFirstOrThrowArgs} args - Arguments to find a ProductExpiration
     * @example
     * // Get one ProductExpiration
     * const productExpiration = await prisma.productExpiration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductExpirationFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductExpirationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductExpirations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductExpirationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductExpirations
     * const productExpirations = await prisma.productExpiration.findMany()
     * 
     * // Get first 10 ProductExpirations
     * const productExpirations = await prisma.productExpiration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productExpirationWithIdOnly = await prisma.productExpiration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductExpirationFindManyArgs>(args?: SelectSubset<T, ProductExpirationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductExpiration.
     * @param {ProductExpirationCreateArgs} args - Arguments to create a ProductExpiration.
     * @example
     * // Create one ProductExpiration
     * const ProductExpiration = await prisma.productExpiration.create({
     *   data: {
     *     // ... data to create a ProductExpiration
     *   }
     * })
     * 
     */
    create<T extends ProductExpirationCreateArgs>(args: SelectSubset<T, ProductExpirationCreateArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductExpirations.
     * @param {ProductExpirationCreateManyArgs} args - Arguments to create many ProductExpirations.
     * @example
     * // Create many ProductExpirations
     * const productExpiration = await prisma.productExpiration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductExpirationCreateManyArgs>(args?: SelectSubset<T, ProductExpirationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductExpirations and returns the data saved in the database.
     * @param {ProductExpirationCreateManyAndReturnArgs} args - Arguments to create many ProductExpirations.
     * @example
     * // Create many ProductExpirations
     * const productExpiration = await prisma.productExpiration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductExpirations and only return the `id`
     * const productExpirationWithIdOnly = await prisma.productExpiration.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductExpirationCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductExpirationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductExpiration.
     * @param {ProductExpirationDeleteArgs} args - Arguments to delete one ProductExpiration.
     * @example
     * // Delete one ProductExpiration
     * const ProductExpiration = await prisma.productExpiration.delete({
     *   where: {
     *     // ... filter to delete one ProductExpiration
     *   }
     * })
     * 
     */
    delete<T extends ProductExpirationDeleteArgs>(args: SelectSubset<T, ProductExpirationDeleteArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductExpiration.
     * @param {ProductExpirationUpdateArgs} args - Arguments to update one ProductExpiration.
     * @example
     * // Update one ProductExpiration
     * const productExpiration = await prisma.productExpiration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductExpirationUpdateArgs>(args: SelectSubset<T, ProductExpirationUpdateArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductExpirations.
     * @param {ProductExpirationDeleteManyArgs} args - Arguments to filter ProductExpirations to delete.
     * @example
     * // Delete a few ProductExpirations
     * const { count } = await prisma.productExpiration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductExpirationDeleteManyArgs>(args?: SelectSubset<T, ProductExpirationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductExpirations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductExpirationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductExpirations
     * const productExpiration = await prisma.productExpiration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductExpirationUpdateManyArgs>(args: SelectSubset<T, ProductExpirationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductExpirations and returns the data updated in the database.
     * @param {ProductExpirationUpdateManyAndReturnArgs} args - Arguments to update many ProductExpirations.
     * @example
     * // Update many ProductExpirations
     * const productExpiration = await prisma.productExpiration.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductExpirations and only return the `id`
     * const productExpirationWithIdOnly = await prisma.productExpiration.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductExpirationUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductExpirationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductExpiration.
     * @param {ProductExpirationUpsertArgs} args - Arguments to update or create a ProductExpiration.
     * @example
     * // Update or create a ProductExpiration
     * const productExpiration = await prisma.productExpiration.upsert({
     *   create: {
     *     // ... data to create a ProductExpiration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductExpiration we want to update
     *   }
     * })
     */
    upsert<T extends ProductExpirationUpsertArgs>(args: SelectSubset<T, ProductExpirationUpsertArgs<ExtArgs>>): Prisma__ProductExpirationClient<$Result.GetResult<Prisma.$ProductExpirationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductExpirations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductExpirationCountArgs} args - Arguments to filter ProductExpirations to count.
     * @example
     * // Count the number of ProductExpirations
     * const count = await prisma.productExpiration.count({
     *   where: {
     *     // ... the filter for the ProductExpirations we want to count
     *   }
     * })
    **/
    count<T extends ProductExpirationCountArgs>(
      args?: Subset<T, ProductExpirationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductExpirationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductExpiration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductExpirationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductExpirationAggregateArgs>(args: Subset<T, ProductExpirationAggregateArgs>): Prisma.PrismaPromise<GetProductExpirationAggregateType<T>>

    /**
     * Group by ProductExpiration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductExpirationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductExpirationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductExpirationGroupByArgs['orderBy'] }
        : { orderBy?: ProductExpirationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductExpirationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductExpirationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductExpiration model
   */
  readonly fields: ProductExpirationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductExpiration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductExpirationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductExpiration model
   */
  interface ProductExpirationFieldRefs {
    readonly id: FieldRef<"ProductExpiration", 'String'>
    readonly productId: FieldRef<"ProductExpiration", 'String'>
    readonly sedeId: FieldRef<"ProductExpiration", 'String'>
    readonly batchNumber: FieldRef<"ProductExpiration", 'String'>
    readonly expiryDate: FieldRef<"ProductExpiration", 'DateTime'>
    readonly quantity: FieldRef<"ProductExpiration", 'Int'>
    readonly createdAt: FieldRef<"ProductExpiration", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductExpiration", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductExpiration findUnique
   */
  export type ProductExpirationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * Filter, which ProductExpiration to fetch.
     */
    where: ProductExpirationWhereUniqueInput
  }

  /**
   * ProductExpiration findUniqueOrThrow
   */
  export type ProductExpirationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * Filter, which ProductExpiration to fetch.
     */
    where: ProductExpirationWhereUniqueInput
  }

  /**
   * ProductExpiration findFirst
   */
  export type ProductExpirationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * Filter, which ProductExpiration to fetch.
     */
    where?: ProductExpirationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductExpirations to fetch.
     */
    orderBy?: ProductExpirationOrderByWithRelationInput | ProductExpirationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductExpirations.
     */
    cursor?: ProductExpirationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductExpirations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductExpirations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductExpirations.
     */
    distinct?: ProductExpirationScalarFieldEnum | ProductExpirationScalarFieldEnum[]
  }

  /**
   * ProductExpiration findFirstOrThrow
   */
  export type ProductExpirationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * Filter, which ProductExpiration to fetch.
     */
    where?: ProductExpirationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductExpirations to fetch.
     */
    orderBy?: ProductExpirationOrderByWithRelationInput | ProductExpirationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductExpirations.
     */
    cursor?: ProductExpirationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductExpirations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductExpirations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductExpirations.
     */
    distinct?: ProductExpirationScalarFieldEnum | ProductExpirationScalarFieldEnum[]
  }

  /**
   * ProductExpiration findMany
   */
  export type ProductExpirationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * Filter, which ProductExpirations to fetch.
     */
    where?: ProductExpirationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductExpirations to fetch.
     */
    orderBy?: ProductExpirationOrderByWithRelationInput | ProductExpirationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductExpirations.
     */
    cursor?: ProductExpirationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductExpirations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductExpirations.
     */
    skip?: number
    distinct?: ProductExpirationScalarFieldEnum | ProductExpirationScalarFieldEnum[]
  }

  /**
   * ProductExpiration create
   */
  export type ProductExpirationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductExpiration.
     */
    data: XOR<ProductExpirationCreateInput, ProductExpirationUncheckedCreateInput>
  }

  /**
   * ProductExpiration createMany
   */
  export type ProductExpirationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductExpirations.
     */
    data: ProductExpirationCreateManyInput | ProductExpirationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductExpiration createManyAndReturn
   */
  export type ProductExpirationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * The data used to create many ProductExpirations.
     */
    data: ProductExpirationCreateManyInput | ProductExpirationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductExpiration update
   */
  export type ProductExpirationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductExpiration.
     */
    data: XOR<ProductExpirationUpdateInput, ProductExpirationUncheckedUpdateInput>
    /**
     * Choose, which ProductExpiration to update.
     */
    where: ProductExpirationWhereUniqueInput
  }

  /**
   * ProductExpiration updateMany
   */
  export type ProductExpirationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductExpirations.
     */
    data: XOR<ProductExpirationUpdateManyMutationInput, ProductExpirationUncheckedUpdateManyInput>
    /**
     * Filter which ProductExpirations to update
     */
    where?: ProductExpirationWhereInput
    /**
     * Limit how many ProductExpirations to update.
     */
    limit?: number
  }

  /**
   * ProductExpiration updateManyAndReturn
   */
  export type ProductExpirationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * The data used to update ProductExpirations.
     */
    data: XOR<ProductExpirationUpdateManyMutationInput, ProductExpirationUncheckedUpdateManyInput>
    /**
     * Filter which ProductExpirations to update
     */
    where?: ProductExpirationWhereInput
    /**
     * Limit how many ProductExpirations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductExpiration upsert
   */
  export type ProductExpirationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductExpiration to update in case it exists.
     */
    where: ProductExpirationWhereUniqueInput
    /**
     * In case the ProductExpiration found by the `where` argument doesn't exist, create a new ProductExpiration with this data.
     */
    create: XOR<ProductExpirationCreateInput, ProductExpirationUncheckedCreateInput>
    /**
     * In case the ProductExpiration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductExpirationUpdateInput, ProductExpirationUncheckedUpdateInput>
  }

  /**
   * ProductExpiration delete
   */
  export type ProductExpirationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
    /**
     * Filter which ProductExpiration to delete.
     */
    where: ProductExpirationWhereUniqueInput
  }

  /**
   * ProductExpiration deleteMany
   */
  export type ProductExpirationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductExpirations to delete
     */
    where?: ProductExpirationWhereInput
    /**
     * Limit how many ProductExpirations to delete.
     */
    limit?: number
  }

  /**
   * ProductExpiration without action
   */
  export type ProductExpirationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductExpiration
     */
    select?: ProductExpirationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductExpiration
     */
    omit?: ProductExpirationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductExpirationInclude<ExtArgs> | null
  }


  /**
   * Model Allergen
   */

  export type AggregateAllergen = {
    _count: AllergenCountAggregateOutputType | null
    _min: AllergenMinAggregateOutputType | null
    _max: AllergenMaxAggregateOutputType | null
  }

  export type AllergenMinAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
    alxoidType: $Enums.AlxoidType | null
    isAlxoidExclusive: boolean | null
  }

  export type AllergenMaxAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
    alxoidType: $Enums.AlxoidType | null
    isAlxoidExclusive: boolean | null
  }

  export type AllergenCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    alxoidType: number
    isAlxoidExclusive: number
    _all: number
  }


  export type AllergenMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    alxoidType?: true
    isAlxoidExclusive?: true
  }

  export type AllergenMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    alxoidType?: true
    isAlxoidExclusive?: true
  }

  export type AllergenCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    alxoidType?: true
    isAlxoidExclusive?: true
    _all?: true
  }

  export type AllergenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Allergen to aggregate.
     */
    where?: AllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Allergens to fetch.
     */
    orderBy?: AllergenOrderByWithRelationInput | AllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Allergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Allergens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Allergens
    **/
    _count?: true | AllergenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AllergenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AllergenMaxAggregateInputType
  }

  export type GetAllergenAggregateType<T extends AllergenAggregateArgs> = {
        [P in keyof T & keyof AggregateAllergen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAllergen[P]>
      : GetScalarType<T[P], AggregateAllergen[P]>
  }




  export type AllergenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AllergenWhereInput
    orderBy?: AllergenOrderByWithAggregationInput | AllergenOrderByWithAggregationInput[]
    by: AllergenScalarFieldEnum[] | AllergenScalarFieldEnum
    having?: AllergenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AllergenCountAggregateInputType | true
    _min?: AllergenMinAggregateInputType
    _max?: AllergenMaxAggregateInputType
  }

  export type AllergenGroupByOutputType = {
    id: string
    name: string
    createdAt: Date
    updatedAt: Date
    alxoidType: $Enums.AlxoidType | null
    isAlxoidExclusive: boolean
    _count: AllergenCountAggregateOutputType | null
    _min: AllergenMinAggregateOutputType | null
    _max: AllergenMaxAggregateOutputType | null
  }

  type GetAllergenGroupByPayload<T extends AllergenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AllergenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AllergenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AllergenGroupByOutputType[P]>
            : GetScalarType<T[P], AllergenGroupByOutputType[P]>
        }
      >
    >


  export type AllergenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    alxoidType?: boolean
    isAlxoidExclusive?: boolean
    ProductAllergen?: boolean | Allergen$ProductAllergenArgs<ExtArgs>
    _count?: boolean | AllergenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["allergen"]>

  export type AllergenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    alxoidType?: boolean
    isAlxoidExclusive?: boolean
  }, ExtArgs["result"]["allergen"]>

  export type AllergenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    alxoidType?: boolean
    isAlxoidExclusive?: boolean
  }, ExtArgs["result"]["allergen"]>

  export type AllergenSelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    alxoidType?: boolean
    isAlxoidExclusive?: boolean
  }

  export type AllergenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdAt" | "updatedAt" | "alxoidType" | "isAlxoidExclusive", ExtArgs["result"]["allergen"]>
  export type AllergenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAllergen?: boolean | Allergen$ProductAllergenArgs<ExtArgs>
    _count?: boolean | AllergenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AllergenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AllergenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AllergenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Allergen"
    objects: {
      ProductAllergen: Prisma.$ProductAllergenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      createdAt: Date
      updatedAt: Date
      alxoidType: $Enums.AlxoidType | null
      isAlxoidExclusive: boolean
    }, ExtArgs["result"]["allergen"]>
    composites: {}
  }

  type AllergenGetPayload<S extends boolean | null | undefined | AllergenDefaultArgs> = $Result.GetResult<Prisma.$AllergenPayload, S>

  type AllergenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AllergenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AllergenCountAggregateInputType | true
    }

  export interface AllergenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Allergen'], meta: { name: 'Allergen' } }
    /**
     * Find zero or one Allergen that matches the filter.
     * @param {AllergenFindUniqueArgs} args - Arguments to find a Allergen
     * @example
     * // Get one Allergen
     * const allergen = await prisma.allergen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AllergenFindUniqueArgs>(args: SelectSubset<T, AllergenFindUniqueArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Allergen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AllergenFindUniqueOrThrowArgs} args - Arguments to find a Allergen
     * @example
     * // Get one Allergen
     * const allergen = await prisma.allergen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AllergenFindUniqueOrThrowArgs>(args: SelectSubset<T, AllergenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Allergen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllergenFindFirstArgs} args - Arguments to find a Allergen
     * @example
     * // Get one Allergen
     * const allergen = await prisma.allergen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AllergenFindFirstArgs>(args?: SelectSubset<T, AllergenFindFirstArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Allergen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllergenFindFirstOrThrowArgs} args - Arguments to find a Allergen
     * @example
     * // Get one Allergen
     * const allergen = await prisma.allergen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AllergenFindFirstOrThrowArgs>(args?: SelectSubset<T, AllergenFindFirstOrThrowArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Allergens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllergenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Allergens
     * const allergens = await prisma.allergen.findMany()
     * 
     * // Get first 10 Allergens
     * const allergens = await prisma.allergen.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const allergenWithIdOnly = await prisma.allergen.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AllergenFindManyArgs>(args?: SelectSubset<T, AllergenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Allergen.
     * @param {AllergenCreateArgs} args - Arguments to create a Allergen.
     * @example
     * // Create one Allergen
     * const Allergen = await prisma.allergen.create({
     *   data: {
     *     // ... data to create a Allergen
     *   }
     * })
     * 
     */
    create<T extends AllergenCreateArgs>(args: SelectSubset<T, AllergenCreateArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Allergens.
     * @param {AllergenCreateManyArgs} args - Arguments to create many Allergens.
     * @example
     * // Create many Allergens
     * const allergen = await prisma.allergen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AllergenCreateManyArgs>(args?: SelectSubset<T, AllergenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Allergens and returns the data saved in the database.
     * @param {AllergenCreateManyAndReturnArgs} args - Arguments to create many Allergens.
     * @example
     * // Create many Allergens
     * const allergen = await prisma.allergen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Allergens and only return the `id`
     * const allergenWithIdOnly = await prisma.allergen.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AllergenCreateManyAndReturnArgs>(args?: SelectSubset<T, AllergenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Allergen.
     * @param {AllergenDeleteArgs} args - Arguments to delete one Allergen.
     * @example
     * // Delete one Allergen
     * const Allergen = await prisma.allergen.delete({
     *   where: {
     *     // ... filter to delete one Allergen
     *   }
     * })
     * 
     */
    delete<T extends AllergenDeleteArgs>(args: SelectSubset<T, AllergenDeleteArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Allergen.
     * @param {AllergenUpdateArgs} args - Arguments to update one Allergen.
     * @example
     * // Update one Allergen
     * const allergen = await prisma.allergen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AllergenUpdateArgs>(args: SelectSubset<T, AllergenUpdateArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Allergens.
     * @param {AllergenDeleteManyArgs} args - Arguments to filter Allergens to delete.
     * @example
     * // Delete a few Allergens
     * const { count } = await prisma.allergen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AllergenDeleteManyArgs>(args?: SelectSubset<T, AllergenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Allergens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllergenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Allergens
     * const allergen = await prisma.allergen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AllergenUpdateManyArgs>(args: SelectSubset<T, AllergenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Allergens and returns the data updated in the database.
     * @param {AllergenUpdateManyAndReturnArgs} args - Arguments to update many Allergens.
     * @example
     * // Update many Allergens
     * const allergen = await prisma.allergen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Allergens and only return the `id`
     * const allergenWithIdOnly = await prisma.allergen.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AllergenUpdateManyAndReturnArgs>(args: SelectSubset<T, AllergenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Allergen.
     * @param {AllergenUpsertArgs} args - Arguments to update or create a Allergen.
     * @example
     * // Update or create a Allergen
     * const allergen = await prisma.allergen.upsert({
     *   create: {
     *     // ... data to create a Allergen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Allergen we want to update
     *   }
     * })
     */
    upsert<T extends AllergenUpsertArgs>(args: SelectSubset<T, AllergenUpsertArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Allergens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllergenCountArgs} args - Arguments to filter Allergens to count.
     * @example
     * // Count the number of Allergens
     * const count = await prisma.allergen.count({
     *   where: {
     *     // ... the filter for the Allergens we want to count
     *   }
     * })
    **/
    count<T extends AllergenCountArgs>(
      args?: Subset<T, AllergenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AllergenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Allergen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllergenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AllergenAggregateArgs>(args: Subset<T, AllergenAggregateArgs>): Prisma.PrismaPromise<GetAllergenAggregateType<T>>

    /**
     * Group by Allergen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllergenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AllergenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AllergenGroupByArgs['orderBy'] }
        : { orderBy?: AllergenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AllergenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAllergenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Allergen model
   */
  readonly fields: AllergenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Allergen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AllergenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ProductAllergen<T extends Allergen$ProductAllergenArgs<ExtArgs> = {}>(args?: Subset<T, Allergen$ProductAllergenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Allergen model
   */
  interface AllergenFieldRefs {
    readonly id: FieldRef<"Allergen", 'String'>
    readonly name: FieldRef<"Allergen", 'String'>
    readonly createdAt: FieldRef<"Allergen", 'DateTime'>
    readonly updatedAt: FieldRef<"Allergen", 'DateTime'>
    readonly alxoidType: FieldRef<"Allergen", 'AlxoidType'>
    readonly isAlxoidExclusive: FieldRef<"Allergen", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Allergen findUnique
   */
  export type AllergenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * Filter, which Allergen to fetch.
     */
    where: AllergenWhereUniqueInput
  }

  /**
   * Allergen findUniqueOrThrow
   */
  export type AllergenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * Filter, which Allergen to fetch.
     */
    where: AllergenWhereUniqueInput
  }

  /**
   * Allergen findFirst
   */
  export type AllergenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * Filter, which Allergen to fetch.
     */
    where?: AllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Allergens to fetch.
     */
    orderBy?: AllergenOrderByWithRelationInput | AllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Allergens.
     */
    cursor?: AllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Allergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Allergens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Allergens.
     */
    distinct?: AllergenScalarFieldEnum | AllergenScalarFieldEnum[]
  }

  /**
   * Allergen findFirstOrThrow
   */
  export type AllergenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * Filter, which Allergen to fetch.
     */
    where?: AllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Allergens to fetch.
     */
    orderBy?: AllergenOrderByWithRelationInput | AllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Allergens.
     */
    cursor?: AllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Allergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Allergens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Allergens.
     */
    distinct?: AllergenScalarFieldEnum | AllergenScalarFieldEnum[]
  }

  /**
   * Allergen findMany
   */
  export type AllergenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * Filter, which Allergens to fetch.
     */
    where?: AllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Allergens to fetch.
     */
    orderBy?: AllergenOrderByWithRelationInput | AllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Allergens.
     */
    cursor?: AllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Allergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Allergens.
     */
    skip?: number
    distinct?: AllergenScalarFieldEnum | AllergenScalarFieldEnum[]
  }

  /**
   * Allergen create
   */
  export type AllergenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * The data needed to create a Allergen.
     */
    data: XOR<AllergenCreateInput, AllergenUncheckedCreateInput>
  }

  /**
   * Allergen createMany
   */
  export type AllergenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Allergens.
     */
    data: AllergenCreateManyInput | AllergenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Allergen createManyAndReturn
   */
  export type AllergenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * The data used to create many Allergens.
     */
    data: AllergenCreateManyInput | AllergenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Allergen update
   */
  export type AllergenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * The data needed to update a Allergen.
     */
    data: XOR<AllergenUpdateInput, AllergenUncheckedUpdateInput>
    /**
     * Choose, which Allergen to update.
     */
    where: AllergenWhereUniqueInput
  }

  /**
   * Allergen updateMany
   */
  export type AllergenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Allergens.
     */
    data: XOR<AllergenUpdateManyMutationInput, AllergenUncheckedUpdateManyInput>
    /**
     * Filter which Allergens to update
     */
    where?: AllergenWhereInput
    /**
     * Limit how many Allergens to update.
     */
    limit?: number
  }

  /**
   * Allergen updateManyAndReturn
   */
  export type AllergenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * The data used to update Allergens.
     */
    data: XOR<AllergenUpdateManyMutationInput, AllergenUncheckedUpdateManyInput>
    /**
     * Filter which Allergens to update
     */
    where?: AllergenWhereInput
    /**
     * Limit how many Allergens to update.
     */
    limit?: number
  }

  /**
   * Allergen upsert
   */
  export type AllergenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * The filter to search for the Allergen to update in case it exists.
     */
    where: AllergenWhereUniqueInput
    /**
     * In case the Allergen found by the `where` argument doesn't exist, create a new Allergen with this data.
     */
    create: XOR<AllergenCreateInput, AllergenUncheckedCreateInput>
    /**
     * In case the Allergen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AllergenUpdateInput, AllergenUncheckedUpdateInput>
  }

  /**
   * Allergen delete
   */
  export type AllergenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
    /**
     * Filter which Allergen to delete.
     */
    where: AllergenWhereUniqueInput
  }

  /**
   * Allergen deleteMany
   */
  export type AllergenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Allergens to delete
     */
    where?: AllergenWhereInput
    /**
     * Limit how many Allergens to delete.
     */
    limit?: number
  }

  /**
   * Allergen.ProductAllergen
   */
  export type Allergen$ProductAllergenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    where?: ProductAllergenWhereInput
    orderBy?: ProductAllergenOrderByWithRelationInput | ProductAllergenOrderByWithRelationInput[]
    cursor?: ProductAllergenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductAllergenScalarFieldEnum | ProductAllergenScalarFieldEnum[]
  }

  /**
   * Allergen without action
   */
  export type AllergenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Allergen
     */
    select?: AllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Allergen
     */
    omit?: AllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AllergenInclude<ExtArgs> | null
  }


  /**
   * Model ProductAllergen
   */

  export type AggregateProductAllergen = {
    _count: ProductAllergenCountAggregateOutputType | null
    _avg: ProductAllergenAvgAggregateOutputType | null
    _sum: ProductAllergenSumAggregateOutputType | null
    _min: ProductAllergenMinAggregateOutputType | null
    _max: ProductAllergenMaxAggregateOutputType | null
  }

  export type ProductAllergenAvgAggregateOutputType = {
    mlPerDose: Decimal | null
  }

  export type ProductAllergenSumAggregateOutputType = {
    mlPerDose: Decimal | null
  }

  export type ProductAllergenMinAggregateOutputType = {
    id: string | null
    productId: string | null
    allergenId: string | null
    mlPerDose: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductAllergenMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    allergenId: string | null
    mlPerDose: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductAllergenCountAggregateOutputType = {
    id: number
    productId: number
    allergenId: number
    mlPerDose: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductAllergenAvgAggregateInputType = {
    mlPerDose?: true
  }

  export type ProductAllergenSumAggregateInputType = {
    mlPerDose?: true
  }

  export type ProductAllergenMinAggregateInputType = {
    id?: true
    productId?: true
    allergenId?: true
    mlPerDose?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductAllergenMaxAggregateInputType = {
    id?: true
    productId?: true
    allergenId?: true
    mlPerDose?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductAllergenCountAggregateInputType = {
    id?: true
    productId?: true
    allergenId?: true
    mlPerDose?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductAllergenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAllergen to aggregate.
     */
    where?: ProductAllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAllergens to fetch.
     */
    orderBy?: ProductAllergenOrderByWithRelationInput | ProductAllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductAllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAllergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAllergens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductAllergens
    **/
    _count?: true | ProductAllergenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAllergenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductAllergenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductAllergenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductAllergenMaxAggregateInputType
  }

  export type GetProductAllergenAggregateType<T extends ProductAllergenAggregateArgs> = {
        [P in keyof T & keyof AggregateProductAllergen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductAllergen[P]>
      : GetScalarType<T[P], AggregateProductAllergen[P]>
  }




  export type ProductAllergenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAllergenWhereInput
    orderBy?: ProductAllergenOrderByWithAggregationInput | ProductAllergenOrderByWithAggregationInput[]
    by: ProductAllergenScalarFieldEnum[] | ProductAllergenScalarFieldEnum
    having?: ProductAllergenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductAllergenCountAggregateInputType | true
    _avg?: ProductAllergenAvgAggregateInputType
    _sum?: ProductAllergenSumAggregateInputType
    _min?: ProductAllergenMinAggregateInputType
    _max?: ProductAllergenMaxAggregateInputType
  }

  export type ProductAllergenGroupByOutputType = {
    id: string
    productId: string
    allergenId: string
    mlPerDose: Decimal
    createdAt: Date
    updatedAt: Date
    _count: ProductAllergenCountAggregateOutputType | null
    _avg: ProductAllergenAvgAggregateOutputType | null
    _sum: ProductAllergenSumAggregateOutputType | null
    _min: ProductAllergenMinAggregateOutputType | null
    _max: ProductAllergenMaxAggregateOutputType | null
  }

  type GetProductAllergenGroupByPayload<T extends ProductAllergenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductAllergenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductAllergenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductAllergenGroupByOutputType[P]>
            : GetScalarType<T[P], ProductAllergenGroupByOutputType[P]>
        }
      >
    >


  export type ProductAllergenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    allergenId?: boolean
    mlPerDose?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    allergen?: boolean | AllergenDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAllergen"]>

  export type ProductAllergenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    allergenId?: boolean
    mlPerDose?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    allergen?: boolean | AllergenDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAllergen"]>

  export type ProductAllergenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    allergenId?: boolean
    mlPerDose?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    allergen?: boolean | AllergenDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAllergen"]>

  export type ProductAllergenSelectScalar = {
    id?: boolean
    productId?: boolean
    allergenId?: boolean
    mlPerDose?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductAllergenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "allergenId" | "mlPerDose" | "createdAt" | "updatedAt", ExtArgs["result"]["productAllergen"]>
  export type ProductAllergenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    allergen?: boolean | AllergenDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductAllergenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    allergen?: boolean | AllergenDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductAllergenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    allergen?: boolean | AllergenDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductAllergenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductAllergen"
    objects: {
      allergen: Prisma.$AllergenPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      allergenId: string
      mlPerDose: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productAllergen"]>
    composites: {}
  }

  type ProductAllergenGetPayload<S extends boolean | null | undefined | ProductAllergenDefaultArgs> = $Result.GetResult<Prisma.$ProductAllergenPayload, S>

  type ProductAllergenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductAllergenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductAllergenCountAggregateInputType | true
    }

  export interface ProductAllergenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductAllergen'], meta: { name: 'ProductAllergen' } }
    /**
     * Find zero or one ProductAllergen that matches the filter.
     * @param {ProductAllergenFindUniqueArgs} args - Arguments to find a ProductAllergen
     * @example
     * // Get one ProductAllergen
     * const productAllergen = await prisma.productAllergen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductAllergenFindUniqueArgs>(args: SelectSubset<T, ProductAllergenFindUniqueArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductAllergen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductAllergenFindUniqueOrThrowArgs} args - Arguments to find a ProductAllergen
     * @example
     * // Get one ProductAllergen
     * const productAllergen = await prisma.productAllergen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductAllergenFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductAllergenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductAllergen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAllergenFindFirstArgs} args - Arguments to find a ProductAllergen
     * @example
     * // Get one ProductAllergen
     * const productAllergen = await prisma.productAllergen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductAllergenFindFirstArgs>(args?: SelectSubset<T, ProductAllergenFindFirstArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductAllergen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAllergenFindFirstOrThrowArgs} args - Arguments to find a ProductAllergen
     * @example
     * // Get one ProductAllergen
     * const productAllergen = await prisma.productAllergen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductAllergenFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductAllergenFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductAllergens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAllergenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductAllergens
     * const productAllergens = await prisma.productAllergen.findMany()
     * 
     * // Get first 10 ProductAllergens
     * const productAllergens = await prisma.productAllergen.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productAllergenWithIdOnly = await prisma.productAllergen.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductAllergenFindManyArgs>(args?: SelectSubset<T, ProductAllergenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductAllergen.
     * @param {ProductAllergenCreateArgs} args - Arguments to create a ProductAllergen.
     * @example
     * // Create one ProductAllergen
     * const ProductAllergen = await prisma.productAllergen.create({
     *   data: {
     *     // ... data to create a ProductAllergen
     *   }
     * })
     * 
     */
    create<T extends ProductAllergenCreateArgs>(args: SelectSubset<T, ProductAllergenCreateArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductAllergens.
     * @param {ProductAllergenCreateManyArgs} args - Arguments to create many ProductAllergens.
     * @example
     * // Create many ProductAllergens
     * const productAllergen = await prisma.productAllergen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductAllergenCreateManyArgs>(args?: SelectSubset<T, ProductAllergenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductAllergens and returns the data saved in the database.
     * @param {ProductAllergenCreateManyAndReturnArgs} args - Arguments to create many ProductAllergens.
     * @example
     * // Create many ProductAllergens
     * const productAllergen = await prisma.productAllergen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductAllergens and only return the `id`
     * const productAllergenWithIdOnly = await prisma.productAllergen.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductAllergenCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductAllergenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductAllergen.
     * @param {ProductAllergenDeleteArgs} args - Arguments to delete one ProductAllergen.
     * @example
     * // Delete one ProductAllergen
     * const ProductAllergen = await prisma.productAllergen.delete({
     *   where: {
     *     // ... filter to delete one ProductAllergen
     *   }
     * })
     * 
     */
    delete<T extends ProductAllergenDeleteArgs>(args: SelectSubset<T, ProductAllergenDeleteArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductAllergen.
     * @param {ProductAllergenUpdateArgs} args - Arguments to update one ProductAllergen.
     * @example
     * // Update one ProductAllergen
     * const productAllergen = await prisma.productAllergen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductAllergenUpdateArgs>(args: SelectSubset<T, ProductAllergenUpdateArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductAllergens.
     * @param {ProductAllergenDeleteManyArgs} args - Arguments to filter ProductAllergens to delete.
     * @example
     * // Delete a few ProductAllergens
     * const { count } = await prisma.productAllergen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductAllergenDeleteManyArgs>(args?: SelectSubset<T, ProductAllergenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductAllergens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAllergenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductAllergens
     * const productAllergen = await prisma.productAllergen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductAllergenUpdateManyArgs>(args: SelectSubset<T, ProductAllergenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductAllergens and returns the data updated in the database.
     * @param {ProductAllergenUpdateManyAndReturnArgs} args - Arguments to update many ProductAllergens.
     * @example
     * // Update many ProductAllergens
     * const productAllergen = await prisma.productAllergen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductAllergens and only return the `id`
     * const productAllergenWithIdOnly = await prisma.productAllergen.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductAllergenUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductAllergenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductAllergen.
     * @param {ProductAllergenUpsertArgs} args - Arguments to update or create a ProductAllergen.
     * @example
     * // Update or create a ProductAllergen
     * const productAllergen = await prisma.productAllergen.upsert({
     *   create: {
     *     // ... data to create a ProductAllergen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductAllergen we want to update
     *   }
     * })
     */
    upsert<T extends ProductAllergenUpsertArgs>(args: SelectSubset<T, ProductAllergenUpsertArgs<ExtArgs>>): Prisma__ProductAllergenClient<$Result.GetResult<Prisma.$ProductAllergenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductAllergens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAllergenCountArgs} args - Arguments to filter ProductAllergens to count.
     * @example
     * // Count the number of ProductAllergens
     * const count = await prisma.productAllergen.count({
     *   where: {
     *     // ... the filter for the ProductAllergens we want to count
     *   }
     * })
    **/
    count<T extends ProductAllergenCountArgs>(
      args?: Subset<T, ProductAllergenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductAllergenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductAllergen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAllergenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAllergenAggregateArgs>(args: Subset<T, ProductAllergenAggregateArgs>): Prisma.PrismaPromise<GetProductAllergenAggregateType<T>>

    /**
     * Group by ProductAllergen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAllergenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductAllergenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductAllergenGroupByArgs['orderBy'] }
        : { orderBy?: ProductAllergenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductAllergenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductAllergenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductAllergen model
   */
  readonly fields: ProductAllergenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductAllergen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductAllergenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    allergen<T extends AllergenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AllergenDefaultArgs<ExtArgs>>): Prisma__AllergenClient<$Result.GetResult<Prisma.$AllergenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductAllergen model
   */
  interface ProductAllergenFieldRefs {
    readonly id: FieldRef<"ProductAllergen", 'String'>
    readonly productId: FieldRef<"ProductAllergen", 'String'>
    readonly allergenId: FieldRef<"ProductAllergen", 'String'>
    readonly mlPerDose: FieldRef<"ProductAllergen", 'Decimal'>
    readonly createdAt: FieldRef<"ProductAllergen", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductAllergen", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductAllergen findUnique
   */
  export type ProductAllergenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * Filter, which ProductAllergen to fetch.
     */
    where: ProductAllergenWhereUniqueInput
  }

  /**
   * ProductAllergen findUniqueOrThrow
   */
  export type ProductAllergenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * Filter, which ProductAllergen to fetch.
     */
    where: ProductAllergenWhereUniqueInput
  }

  /**
   * ProductAllergen findFirst
   */
  export type ProductAllergenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * Filter, which ProductAllergen to fetch.
     */
    where?: ProductAllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAllergens to fetch.
     */
    orderBy?: ProductAllergenOrderByWithRelationInput | ProductAllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAllergens.
     */
    cursor?: ProductAllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAllergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAllergens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAllergens.
     */
    distinct?: ProductAllergenScalarFieldEnum | ProductAllergenScalarFieldEnum[]
  }

  /**
   * ProductAllergen findFirstOrThrow
   */
  export type ProductAllergenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * Filter, which ProductAllergen to fetch.
     */
    where?: ProductAllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAllergens to fetch.
     */
    orderBy?: ProductAllergenOrderByWithRelationInput | ProductAllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAllergens.
     */
    cursor?: ProductAllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAllergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAllergens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAllergens.
     */
    distinct?: ProductAllergenScalarFieldEnum | ProductAllergenScalarFieldEnum[]
  }

  /**
   * ProductAllergen findMany
   */
  export type ProductAllergenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * Filter, which ProductAllergens to fetch.
     */
    where?: ProductAllergenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAllergens to fetch.
     */
    orderBy?: ProductAllergenOrderByWithRelationInput | ProductAllergenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductAllergens.
     */
    cursor?: ProductAllergenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAllergens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAllergens.
     */
    skip?: number
    distinct?: ProductAllergenScalarFieldEnum | ProductAllergenScalarFieldEnum[]
  }

  /**
   * ProductAllergen create
   */
  export type ProductAllergenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductAllergen.
     */
    data: XOR<ProductAllergenCreateInput, ProductAllergenUncheckedCreateInput>
  }

  /**
   * ProductAllergen createMany
   */
  export type ProductAllergenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductAllergens.
     */
    data: ProductAllergenCreateManyInput | ProductAllergenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductAllergen createManyAndReturn
   */
  export type ProductAllergenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * The data used to create many ProductAllergens.
     */
    data: ProductAllergenCreateManyInput | ProductAllergenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductAllergen update
   */
  export type ProductAllergenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductAllergen.
     */
    data: XOR<ProductAllergenUpdateInput, ProductAllergenUncheckedUpdateInput>
    /**
     * Choose, which ProductAllergen to update.
     */
    where: ProductAllergenWhereUniqueInput
  }

  /**
   * ProductAllergen updateMany
   */
  export type ProductAllergenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductAllergens.
     */
    data: XOR<ProductAllergenUpdateManyMutationInput, ProductAllergenUncheckedUpdateManyInput>
    /**
     * Filter which ProductAllergens to update
     */
    where?: ProductAllergenWhereInput
    /**
     * Limit how many ProductAllergens to update.
     */
    limit?: number
  }

  /**
   * ProductAllergen updateManyAndReturn
   */
  export type ProductAllergenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * The data used to update ProductAllergens.
     */
    data: XOR<ProductAllergenUpdateManyMutationInput, ProductAllergenUncheckedUpdateManyInput>
    /**
     * Filter which ProductAllergens to update
     */
    where?: ProductAllergenWhereInput
    /**
     * Limit how many ProductAllergens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductAllergen upsert
   */
  export type ProductAllergenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductAllergen to update in case it exists.
     */
    where: ProductAllergenWhereUniqueInput
    /**
     * In case the ProductAllergen found by the `where` argument doesn't exist, create a new ProductAllergen with this data.
     */
    create: XOR<ProductAllergenCreateInput, ProductAllergenUncheckedCreateInput>
    /**
     * In case the ProductAllergen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductAllergenUpdateInput, ProductAllergenUncheckedUpdateInput>
  }

  /**
   * ProductAllergen delete
   */
  export type ProductAllergenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
    /**
     * Filter which ProductAllergen to delete.
     */
    where: ProductAllergenWhereUniqueInput
  }

  /**
   * ProductAllergen deleteMany
   */
  export type ProductAllergenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAllergens to delete
     */
    where?: ProductAllergenWhereInput
    /**
     * Limit how many ProductAllergens to delete.
     */
    limit?: number
  }

  /**
   * ProductAllergen without action
   */
  export type ProductAllergenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAllergen
     */
    select?: ProductAllergenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductAllergen
     */
    omit?: ProductAllergenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAllergenInclude<ExtArgs> | null
  }


  /**
   * Model Supplier
   */

  export type AggregateSupplier = {
    _count: SupplierCountAggregateOutputType | null
    _avg: SupplierAvgAggregateOutputType | null
    _sum: SupplierSumAggregateOutputType | null
    _min: SupplierMinAggregateOutputType | null
    _max: SupplierMaxAggregateOutputType | null
  }

  export type SupplierAvgAggregateOutputType = {
    amountSupplied: Decimal | null
  }

  export type SupplierSumAggregateOutputType = {
    amountSupplied: Decimal | null
  }

  export type SupplierMinAggregateOutputType = {
    id: string | null
    name: string | null
    invoiceNumber: string | null
    amountSupplied: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SupplierMaxAggregateOutputType = {
    id: string | null
    name: string | null
    invoiceNumber: string | null
    amountSupplied: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SupplierCountAggregateOutputType = {
    id: number
    name: number
    invoiceNumber: number
    amountSupplied: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SupplierAvgAggregateInputType = {
    amountSupplied?: true
  }

  export type SupplierSumAggregateInputType = {
    amountSupplied?: true
  }

  export type SupplierMinAggregateInputType = {
    id?: true
    name?: true
    invoiceNumber?: true
    amountSupplied?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SupplierMaxAggregateInputType = {
    id?: true
    name?: true
    invoiceNumber?: true
    amountSupplied?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SupplierCountAggregateInputType = {
    id?: true
    name?: true
    invoiceNumber?: true
    amountSupplied?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SupplierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Supplier to aggregate.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Suppliers
    **/
    _count?: true | SupplierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplierMaxAggregateInputType
  }

  export type GetSupplierAggregateType<T extends SupplierAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplier[P]>
      : GetScalarType<T[P], AggregateSupplier[P]>
  }




  export type SupplierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierWhereInput
    orderBy?: SupplierOrderByWithAggregationInput | SupplierOrderByWithAggregationInput[]
    by: SupplierScalarFieldEnum[] | SupplierScalarFieldEnum
    having?: SupplierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplierCountAggregateInputType | true
    _avg?: SupplierAvgAggregateInputType
    _sum?: SupplierSumAggregateInputType
    _min?: SupplierMinAggregateInputType
    _max?: SupplierMaxAggregateInputType
  }

  export type SupplierGroupByOutputType = {
    id: string
    name: string
    invoiceNumber: string | null
    amountSupplied: Decimal
    createdAt: Date
    updatedAt: Date
    _count: SupplierCountAggregateOutputType | null
    _avg: SupplierAvgAggregateOutputType | null
    _sum: SupplierSumAggregateOutputType | null
    _min: SupplierMinAggregateOutputType | null
    _max: SupplierMaxAggregateOutputType | null
  }

  type GetSupplierGroupByPayload<T extends SupplierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplierGroupByOutputType[P]>
            : GetScalarType<T[P], SupplierGroupByOutputType[P]>
        }
      >
    >


  export type SupplierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    invoiceNumber?: boolean
    amountSupplied?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["supplier"]>

  export type SupplierSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    invoiceNumber?: boolean
    amountSupplied?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["supplier"]>

  export type SupplierSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    invoiceNumber?: boolean
    amountSupplied?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["supplier"]>

  export type SupplierSelectScalar = {
    id?: boolean
    name?: boolean
    invoiceNumber?: boolean
    amountSupplied?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SupplierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "invoiceNumber" | "amountSupplied" | "createdAt" | "updatedAt", ExtArgs["result"]["supplier"]>

  export type $SupplierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Supplier"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      invoiceNumber: string | null
      amountSupplied: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["supplier"]>
    composites: {}
  }

  type SupplierGetPayload<S extends boolean | null | undefined | SupplierDefaultArgs> = $Result.GetResult<Prisma.$SupplierPayload, S>

  type SupplierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplierCountAggregateInputType | true
    }

  export interface SupplierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Supplier'], meta: { name: 'Supplier' } }
    /**
     * Find zero or one Supplier that matches the filter.
     * @param {SupplierFindUniqueArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplierFindUniqueArgs>(args: SelectSubset<T, SupplierFindUniqueArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Supplier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplierFindUniqueOrThrowArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplierFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindFirstArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplierFindFirstArgs>(args?: SelectSubset<T, SupplierFindFirstArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindFirstOrThrowArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplierFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplierFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Suppliers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Suppliers
     * const suppliers = await prisma.supplier.findMany()
     * 
     * // Get first 10 Suppliers
     * const suppliers = await prisma.supplier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplierWithIdOnly = await prisma.supplier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplierFindManyArgs>(args?: SelectSubset<T, SupplierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Supplier.
     * @param {SupplierCreateArgs} args - Arguments to create a Supplier.
     * @example
     * // Create one Supplier
     * const Supplier = await prisma.supplier.create({
     *   data: {
     *     // ... data to create a Supplier
     *   }
     * })
     * 
     */
    create<T extends SupplierCreateArgs>(args: SelectSubset<T, SupplierCreateArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Suppliers.
     * @param {SupplierCreateManyArgs} args - Arguments to create many Suppliers.
     * @example
     * // Create many Suppliers
     * const supplier = await prisma.supplier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplierCreateManyArgs>(args?: SelectSubset<T, SupplierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Suppliers and returns the data saved in the database.
     * @param {SupplierCreateManyAndReturnArgs} args - Arguments to create many Suppliers.
     * @example
     * // Create many Suppliers
     * const supplier = await prisma.supplier.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Suppliers and only return the `id`
     * const supplierWithIdOnly = await prisma.supplier.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplierCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplierCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Supplier.
     * @param {SupplierDeleteArgs} args - Arguments to delete one Supplier.
     * @example
     * // Delete one Supplier
     * const Supplier = await prisma.supplier.delete({
     *   where: {
     *     // ... filter to delete one Supplier
     *   }
     * })
     * 
     */
    delete<T extends SupplierDeleteArgs>(args: SelectSubset<T, SupplierDeleteArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Supplier.
     * @param {SupplierUpdateArgs} args - Arguments to update one Supplier.
     * @example
     * // Update one Supplier
     * const supplier = await prisma.supplier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplierUpdateArgs>(args: SelectSubset<T, SupplierUpdateArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Suppliers.
     * @param {SupplierDeleteManyArgs} args - Arguments to filter Suppliers to delete.
     * @example
     * // Delete a few Suppliers
     * const { count } = await prisma.supplier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplierDeleteManyArgs>(args?: SelectSubset<T, SupplierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Suppliers
     * const supplier = await prisma.supplier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplierUpdateManyArgs>(args: SelectSubset<T, SupplierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suppliers and returns the data updated in the database.
     * @param {SupplierUpdateManyAndReturnArgs} args - Arguments to update many Suppliers.
     * @example
     * // Update many Suppliers
     * const supplier = await prisma.supplier.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Suppliers and only return the `id`
     * const supplierWithIdOnly = await prisma.supplier.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplierUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplierUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Supplier.
     * @param {SupplierUpsertArgs} args - Arguments to update or create a Supplier.
     * @example
     * // Update or create a Supplier
     * const supplier = await prisma.supplier.upsert({
     *   create: {
     *     // ... data to create a Supplier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Supplier we want to update
     *   }
     * })
     */
    upsert<T extends SupplierUpsertArgs>(args: SelectSubset<T, SupplierUpsertArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierCountArgs} args - Arguments to filter Suppliers to count.
     * @example
     * // Count the number of Suppliers
     * const count = await prisma.supplier.count({
     *   where: {
     *     // ... the filter for the Suppliers we want to count
     *   }
     * })
    **/
    count<T extends SupplierCountArgs>(
      args?: Subset<T, SupplierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplierAggregateArgs>(args: Subset<T, SupplierAggregateArgs>): Prisma.PrismaPromise<GetSupplierAggregateType<T>>

    /**
     * Group by Supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplierGroupByArgs['orderBy'] }
        : { orderBy?: SupplierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Supplier model
   */
  readonly fields: SupplierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Supplier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Supplier model
   */
  interface SupplierFieldRefs {
    readonly id: FieldRef<"Supplier", 'String'>
    readonly name: FieldRef<"Supplier", 'String'>
    readonly invoiceNumber: FieldRef<"Supplier", 'String'>
    readonly amountSupplied: FieldRef<"Supplier", 'Decimal'>
    readonly createdAt: FieldRef<"Supplier", 'DateTime'>
    readonly updatedAt: FieldRef<"Supplier", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Supplier findUnique
   */
  export type SupplierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier findUniqueOrThrow
   */
  export type SupplierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier findFirst
   */
  export type SupplierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Suppliers.
     */
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier findFirstOrThrow
   */
  export type SupplierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Suppliers.
     */
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier findMany
   */
  export type SupplierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Filter, which Suppliers to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier create
   */
  export type SupplierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * The data needed to create a Supplier.
     */
    data: XOR<SupplierCreateInput, SupplierUncheckedCreateInput>
  }

  /**
   * Supplier createMany
   */
  export type SupplierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Suppliers.
     */
    data: SupplierCreateManyInput | SupplierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Supplier createManyAndReturn
   */
  export type SupplierCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * The data used to create many Suppliers.
     */
    data: SupplierCreateManyInput | SupplierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Supplier update
   */
  export type SupplierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * The data needed to update a Supplier.
     */
    data: XOR<SupplierUpdateInput, SupplierUncheckedUpdateInput>
    /**
     * Choose, which Supplier to update.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier updateMany
   */
  export type SupplierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Suppliers.
     */
    data: XOR<SupplierUpdateManyMutationInput, SupplierUncheckedUpdateManyInput>
    /**
     * Filter which Suppliers to update
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to update.
     */
    limit?: number
  }

  /**
   * Supplier updateManyAndReturn
   */
  export type SupplierUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * The data used to update Suppliers.
     */
    data: XOR<SupplierUpdateManyMutationInput, SupplierUncheckedUpdateManyInput>
    /**
     * Filter which Suppliers to update
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to update.
     */
    limit?: number
  }

  /**
   * Supplier upsert
   */
  export type SupplierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * The filter to search for the Supplier to update in case it exists.
     */
    where: SupplierWhereUniqueInput
    /**
     * In case the Supplier found by the `where` argument doesn't exist, create a new Supplier with this data.
     */
    create: XOR<SupplierCreateInput, SupplierUncheckedCreateInput>
    /**
     * In case the Supplier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplierUpdateInput, SupplierUncheckedUpdateInput>
  }

  /**
   * Supplier delete
   */
  export type SupplierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Filter which Supplier to delete.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier deleteMany
   */
  export type SupplierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Suppliers to delete
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to delete.
     */
    limit?: number
  }

  /**
   * Supplier without action
   */
  export type SupplierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
  }


  /**
   * Model whatsapp_config
   */

  export type AggregateWhatsapp_config = {
    _count: Whatsapp_configCountAggregateOutputType | null
    _min: Whatsapp_configMinAggregateOutputType | null
    _max: Whatsapp_configMaxAggregateOutputType | null
  }

  export type Whatsapp_configMinAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    whatsapp_business_id: string | null
    phone_number_id: string | null
    access_token: string | null
    webhook_verify_token: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_configMaxAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    whatsapp_business_id: string | null
    phone_number_id: string | null
    access_token: string | null
    webhook_verify_token: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_configCountAggregateOutputType = {
    id: number
    usuario_id: number
    whatsapp_business_id: number
    phone_number_id: number
    access_token: number
    webhook_verify_token: number
    is_active: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Whatsapp_configMinAggregateInputType = {
    id?: true
    usuario_id?: true
    whatsapp_business_id?: true
    phone_number_id?: true
    access_token?: true
    webhook_verify_token?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_configMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    whatsapp_business_id?: true
    phone_number_id?: true
    access_token?: true
    webhook_verify_token?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_configCountAggregateInputType = {
    id?: true
    usuario_id?: true
    whatsapp_business_id?: true
    phone_number_id?: true
    access_token?: true
    webhook_verify_token?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Whatsapp_configAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_config to aggregate.
     */
    where?: whatsapp_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_configs to fetch.
     */
    orderBy?: whatsapp_configOrderByWithRelationInput | whatsapp_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: whatsapp_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned whatsapp_configs
    **/
    _count?: true | Whatsapp_configCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Whatsapp_configMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Whatsapp_configMaxAggregateInputType
  }

  export type GetWhatsapp_configAggregateType<T extends Whatsapp_configAggregateArgs> = {
        [P in keyof T & keyof AggregateWhatsapp_config]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWhatsapp_config[P]>
      : GetScalarType<T[P], AggregateWhatsapp_config[P]>
  }




  export type whatsapp_configGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_configWhereInput
    orderBy?: whatsapp_configOrderByWithAggregationInput | whatsapp_configOrderByWithAggregationInput[]
    by: Whatsapp_configScalarFieldEnum[] | Whatsapp_configScalarFieldEnum
    having?: whatsapp_configScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Whatsapp_configCountAggregateInputType | true
    _min?: Whatsapp_configMinAggregateInputType
    _max?: Whatsapp_configMaxAggregateInputType
  }

  export type Whatsapp_configGroupByOutputType = {
    id: string
    usuario_id: string
    whatsapp_business_id: string | null
    phone_number_id: string | null
    access_token: string | null
    webhook_verify_token: string | null
    is_active: boolean
    created_at: Date
    updated_at: Date
    _count: Whatsapp_configCountAggregateOutputType | null
    _min: Whatsapp_configMinAggregateOutputType | null
    _max: Whatsapp_configMaxAggregateOutputType | null
  }

  type GetWhatsapp_configGroupByPayload<T extends whatsapp_configGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Whatsapp_configGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Whatsapp_configGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Whatsapp_configGroupByOutputType[P]>
            : GetScalarType<T[P], Whatsapp_configGroupByOutputType[P]>
        }
      >
    >


  export type whatsapp_configSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    whatsapp_business_id?: boolean
    phone_number_id?: boolean
    access_token?: boolean
    webhook_verify_token?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_config"]>

  export type whatsapp_configSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    whatsapp_business_id?: boolean
    phone_number_id?: boolean
    access_token?: boolean
    webhook_verify_token?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_config"]>

  export type whatsapp_configSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    whatsapp_business_id?: boolean
    phone_number_id?: boolean
    access_token?: boolean
    webhook_verify_token?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_config"]>

  export type whatsapp_configSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    whatsapp_business_id?: boolean
    phone_number_id?: boolean
    access_token?: boolean
    webhook_verify_token?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type whatsapp_configOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "whatsapp_business_id" | "phone_number_id" | "access_token" | "webhook_verify_token" | "is_active" | "created_at" | "updated_at", ExtArgs["result"]["whatsapp_config"]>
  export type whatsapp_configInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_configIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_configIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $whatsapp_configPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "whatsapp_config"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      usuario_id: string
      whatsapp_business_id: string | null
      phone_number_id: string | null
      access_token: string | null
      webhook_verify_token: string | null
      is_active: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["whatsapp_config"]>
    composites: {}
  }

  type whatsapp_configGetPayload<S extends boolean | null | undefined | whatsapp_configDefaultArgs> = $Result.GetResult<Prisma.$whatsapp_configPayload, S>

  type whatsapp_configCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<whatsapp_configFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Whatsapp_configCountAggregateInputType | true
    }

  export interface whatsapp_configDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['whatsapp_config'], meta: { name: 'whatsapp_config' } }
    /**
     * Find zero or one Whatsapp_config that matches the filter.
     * @param {whatsapp_configFindUniqueArgs} args - Arguments to find a Whatsapp_config
     * @example
     * // Get one Whatsapp_config
     * const whatsapp_config = await prisma.whatsapp_config.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends whatsapp_configFindUniqueArgs>(args: SelectSubset<T, whatsapp_configFindUniqueArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Whatsapp_config that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {whatsapp_configFindUniqueOrThrowArgs} args - Arguments to find a Whatsapp_config
     * @example
     * // Get one Whatsapp_config
     * const whatsapp_config = await prisma.whatsapp_config.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends whatsapp_configFindUniqueOrThrowArgs>(args: SelectSubset<T, whatsapp_configFindUniqueOrThrowArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_config that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_configFindFirstArgs} args - Arguments to find a Whatsapp_config
     * @example
     * // Get one Whatsapp_config
     * const whatsapp_config = await prisma.whatsapp_config.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends whatsapp_configFindFirstArgs>(args?: SelectSubset<T, whatsapp_configFindFirstArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_config that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_configFindFirstOrThrowArgs} args - Arguments to find a Whatsapp_config
     * @example
     * // Get one Whatsapp_config
     * const whatsapp_config = await prisma.whatsapp_config.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends whatsapp_configFindFirstOrThrowArgs>(args?: SelectSubset<T, whatsapp_configFindFirstOrThrowArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Whatsapp_configs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_configFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Whatsapp_configs
     * const whatsapp_configs = await prisma.whatsapp_config.findMany()
     * 
     * // Get first 10 Whatsapp_configs
     * const whatsapp_configs = await prisma.whatsapp_config.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const whatsapp_configWithIdOnly = await prisma.whatsapp_config.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends whatsapp_configFindManyArgs>(args?: SelectSubset<T, whatsapp_configFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Whatsapp_config.
     * @param {whatsapp_configCreateArgs} args - Arguments to create a Whatsapp_config.
     * @example
     * // Create one Whatsapp_config
     * const Whatsapp_config = await prisma.whatsapp_config.create({
     *   data: {
     *     // ... data to create a Whatsapp_config
     *   }
     * })
     * 
     */
    create<T extends whatsapp_configCreateArgs>(args: SelectSubset<T, whatsapp_configCreateArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Whatsapp_configs.
     * @param {whatsapp_configCreateManyArgs} args - Arguments to create many Whatsapp_configs.
     * @example
     * // Create many Whatsapp_configs
     * const whatsapp_config = await prisma.whatsapp_config.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends whatsapp_configCreateManyArgs>(args?: SelectSubset<T, whatsapp_configCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Whatsapp_configs and returns the data saved in the database.
     * @param {whatsapp_configCreateManyAndReturnArgs} args - Arguments to create many Whatsapp_configs.
     * @example
     * // Create many Whatsapp_configs
     * const whatsapp_config = await prisma.whatsapp_config.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Whatsapp_configs and only return the `id`
     * const whatsapp_configWithIdOnly = await prisma.whatsapp_config.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends whatsapp_configCreateManyAndReturnArgs>(args?: SelectSubset<T, whatsapp_configCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Whatsapp_config.
     * @param {whatsapp_configDeleteArgs} args - Arguments to delete one Whatsapp_config.
     * @example
     * // Delete one Whatsapp_config
     * const Whatsapp_config = await prisma.whatsapp_config.delete({
     *   where: {
     *     // ... filter to delete one Whatsapp_config
     *   }
     * })
     * 
     */
    delete<T extends whatsapp_configDeleteArgs>(args: SelectSubset<T, whatsapp_configDeleteArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Whatsapp_config.
     * @param {whatsapp_configUpdateArgs} args - Arguments to update one Whatsapp_config.
     * @example
     * // Update one Whatsapp_config
     * const whatsapp_config = await prisma.whatsapp_config.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends whatsapp_configUpdateArgs>(args: SelectSubset<T, whatsapp_configUpdateArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Whatsapp_configs.
     * @param {whatsapp_configDeleteManyArgs} args - Arguments to filter Whatsapp_configs to delete.
     * @example
     * // Delete a few Whatsapp_configs
     * const { count } = await prisma.whatsapp_config.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends whatsapp_configDeleteManyArgs>(args?: SelectSubset<T, whatsapp_configDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_configUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Whatsapp_configs
     * const whatsapp_config = await prisma.whatsapp_config.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends whatsapp_configUpdateManyArgs>(args: SelectSubset<T, whatsapp_configUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_configs and returns the data updated in the database.
     * @param {whatsapp_configUpdateManyAndReturnArgs} args - Arguments to update many Whatsapp_configs.
     * @example
     * // Update many Whatsapp_configs
     * const whatsapp_config = await prisma.whatsapp_config.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Whatsapp_configs and only return the `id`
     * const whatsapp_configWithIdOnly = await prisma.whatsapp_config.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends whatsapp_configUpdateManyAndReturnArgs>(args: SelectSubset<T, whatsapp_configUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Whatsapp_config.
     * @param {whatsapp_configUpsertArgs} args - Arguments to update or create a Whatsapp_config.
     * @example
     * // Update or create a Whatsapp_config
     * const whatsapp_config = await prisma.whatsapp_config.upsert({
     *   create: {
     *     // ... data to create a Whatsapp_config
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Whatsapp_config we want to update
     *   }
     * })
     */
    upsert<T extends whatsapp_configUpsertArgs>(args: SelectSubset<T, whatsapp_configUpsertArgs<ExtArgs>>): Prisma__whatsapp_configClient<$Result.GetResult<Prisma.$whatsapp_configPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Whatsapp_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_configCountArgs} args - Arguments to filter Whatsapp_configs to count.
     * @example
     * // Count the number of Whatsapp_configs
     * const count = await prisma.whatsapp_config.count({
     *   where: {
     *     // ... the filter for the Whatsapp_configs we want to count
     *   }
     * })
    **/
    count<T extends whatsapp_configCountArgs>(
      args?: Subset<T, whatsapp_configCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Whatsapp_configCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Whatsapp_config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Whatsapp_configAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Whatsapp_configAggregateArgs>(args: Subset<T, Whatsapp_configAggregateArgs>): Prisma.PrismaPromise<GetWhatsapp_configAggregateType<T>>

    /**
     * Group by Whatsapp_config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_configGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends whatsapp_configGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: whatsapp_configGroupByArgs['orderBy'] }
        : { orderBy?: whatsapp_configGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, whatsapp_configGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWhatsapp_configGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the whatsapp_config model
   */
  readonly fields: whatsapp_configFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for whatsapp_config.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__whatsapp_configClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the whatsapp_config model
   */
  interface whatsapp_configFieldRefs {
    readonly id: FieldRef<"whatsapp_config", 'String'>
    readonly usuario_id: FieldRef<"whatsapp_config", 'String'>
    readonly whatsapp_business_id: FieldRef<"whatsapp_config", 'String'>
    readonly phone_number_id: FieldRef<"whatsapp_config", 'String'>
    readonly access_token: FieldRef<"whatsapp_config", 'String'>
    readonly webhook_verify_token: FieldRef<"whatsapp_config", 'String'>
    readonly is_active: FieldRef<"whatsapp_config", 'Boolean'>
    readonly created_at: FieldRef<"whatsapp_config", 'DateTime'>
    readonly updated_at: FieldRef<"whatsapp_config", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * whatsapp_config findUnique
   */
  export type whatsapp_configFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_config to fetch.
     */
    where: whatsapp_configWhereUniqueInput
  }

  /**
   * whatsapp_config findUniqueOrThrow
   */
  export type whatsapp_configFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_config to fetch.
     */
    where: whatsapp_configWhereUniqueInput
  }

  /**
   * whatsapp_config findFirst
   */
  export type whatsapp_configFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_config to fetch.
     */
    where?: whatsapp_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_configs to fetch.
     */
    orderBy?: whatsapp_configOrderByWithRelationInput | whatsapp_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_configs.
     */
    cursor?: whatsapp_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_configs.
     */
    distinct?: Whatsapp_configScalarFieldEnum | Whatsapp_configScalarFieldEnum[]
  }

  /**
   * whatsapp_config findFirstOrThrow
   */
  export type whatsapp_configFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_config to fetch.
     */
    where?: whatsapp_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_configs to fetch.
     */
    orderBy?: whatsapp_configOrderByWithRelationInput | whatsapp_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_configs.
     */
    cursor?: whatsapp_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_configs.
     */
    distinct?: Whatsapp_configScalarFieldEnum | Whatsapp_configScalarFieldEnum[]
  }

  /**
   * whatsapp_config findMany
   */
  export type whatsapp_configFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_configs to fetch.
     */
    where?: whatsapp_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_configs to fetch.
     */
    orderBy?: whatsapp_configOrderByWithRelationInput | whatsapp_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing whatsapp_configs.
     */
    cursor?: whatsapp_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_configs.
     */
    skip?: number
    distinct?: Whatsapp_configScalarFieldEnum | Whatsapp_configScalarFieldEnum[]
  }

  /**
   * whatsapp_config create
   */
  export type whatsapp_configCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * The data needed to create a whatsapp_config.
     */
    data: XOR<whatsapp_configCreateInput, whatsapp_configUncheckedCreateInput>
  }

  /**
   * whatsapp_config createMany
   */
  export type whatsapp_configCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many whatsapp_configs.
     */
    data: whatsapp_configCreateManyInput | whatsapp_configCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * whatsapp_config createManyAndReturn
   */
  export type whatsapp_configCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * The data used to create many whatsapp_configs.
     */
    data: whatsapp_configCreateManyInput | whatsapp_configCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_config update
   */
  export type whatsapp_configUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * The data needed to update a whatsapp_config.
     */
    data: XOR<whatsapp_configUpdateInput, whatsapp_configUncheckedUpdateInput>
    /**
     * Choose, which whatsapp_config to update.
     */
    where: whatsapp_configWhereUniqueInput
  }

  /**
   * whatsapp_config updateMany
   */
  export type whatsapp_configUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update whatsapp_configs.
     */
    data: XOR<whatsapp_configUpdateManyMutationInput, whatsapp_configUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_configs to update
     */
    where?: whatsapp_configWhereInput
    /**
     * Limit how many whatsapp_configs to update.
     */
    limit?: number
  }

  /**
   * whatsapp_config updateManyAndReturn
   */
  export type whatsapp_configUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * The data used to update whatsapp_configs.
     */
    data: XOR<whatsapp_configUpdateManyMutationInput, whatsapp_configUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_configs to update
     */
    where?: whatsapp_configWhereInput
    /**
     * Limit how many whatsapp_configs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_config upsert
   */
  export type whatsapp_configUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * The filter to search for the whatsapp_config to update in case it exists.
     */
    where: whatsapp_configWhereUniqueInput
    /**
     * In case the whatsapp_config found by the `where` argument doesn't exist, create a new whatsapp_config with this data.
     */
    create: XOR<whatsapp_configCreateInput, whatsapp_configUncheckedCreateInput>
    /**
     * In case the whatsapp_config was found with the provided `where` argument, update it with this data.
     */
    update: XOR<whatsapp_configUpdateInput, whatsapp_configUncheckedUpdateInput>
  }

  /**
   * whatsapp_config delete
   */
  export type whatsapp_configDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
    /**
     * Filter which whatsapp_config to delete.
     */
    where: whatsapp_configWhereUniqueInput
  }

  /**
   * whatsapp_config deleteMany
   */
  export type whatsapp_configDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_configs to delete
     */
    where?: whatsapp_configWhereInput
    /**
     * Limit how many whatsapp_configs to delete.
     */
    limit?: number
  }

  /**
   * whatsapp_config without action
   */
  export type whatsapp_configDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_config
     */
    select?: whatsapp_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_config
     */
    omit?: whatsapp_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_configInclude<ExtArgs> | null
  }


  /**
   * Model whatsapp_templates
   */

  export type AggregateWhatsapp_templates = {
    _count: Whatsapp_templatesCountAggregateOutputType | null
    _min: Whatsapp_templatesMinAggregateOutputType | null
    _max: Whatsapp_templatesMaxAggregateOutputType | null
  }

  export type Whatsapp_templatesMinAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    name: string | null
    language: string | null
    category: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_templatesMaxAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    name: string | null
    language: string | null
    category: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_templatesCountAggregateOutputType = {
    id: number
    usuario_id: number
    name: number
    language: number
    category: number
    components: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Whatsapp_templatesMinAggregateInputType = {
    id?: true
    usuario_id?: true
    name?: true
    language?: true
    category?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_templatesMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    name?: true
    language?: true
    category?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_templatesCountAggregateInputType = {
    id?: true
    usuario_id?: true
    name?: true
    language?: true
    category?: true
    components?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Whatsapp_templatesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_templates to aggregate.
     */
    where?: whatsapp_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_templates to fetch.
     */
    orderBy?: whatsapp_templatesOrderByWithRelationInput | whatsapp_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: whatsapp_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned whatsapp_templates
    **/
    _count?: true | Whatsapp_templatesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Whatsapp_templatesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Whatsapp_templatesMaxAggregateInputType
  }

  export type GetWhatsapp_templatesAggregateType<T extends Whatsapp_templatesAggregateArgs> = {
        [P in keyof T & keyof AggregateWhatsapp_templates]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWhatsapp_templates[P]>
      : GetScalarType<T[P], AggregateWhatsapp_templates[P]>
  }




  export type whatsapp_templatesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_templatesWhereInput
    orderBy?: whatsapp_templatesOrderByWithAggregationInput | whatsapp_templatesOrderByWithAggregationInput[]
    by: Whatsapp_templatesScalarFieldEnum[] | Whatsapp_templatesScalarFieldEnum
    having?: whatsapp_templatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Whatsapp_templatesCountAggregateInputType | true
    _min?: Whatsapp_templatesMinAggregateInputType
    _max?: Whatsapp_templatesMaxAggregateInputType
  }

  export type Whatsapp_templatesGroupByOutputType = {
    id: string
    usuario_id: string
    name: string
    language: string
    category: string
    components: JsonValue
    status: string
    created_at: Date
    updated_at: Date
    _count: Whatsapp_templatesCountAggregateOutputType | null
    _min: Whatsapp_templatesMinAggregateOutputType | null
    _max: Whatsapp_templatesMaxAggregateOutputType | null
  }

  type GetWhatsapp_templatesGroupByPayload<T extends whatsapp_templatesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Whatsapp_templatesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Whatsapp_templatesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Whatsapp_templatesGroupByOutputType[P]>
            : GetScalarType<T[P], Whatsapp_templatesGroupByOutputType[P]>
        }
      >
    >


  export type whatsapp_templatesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    name?: boolean
    language?: boolean
    category?: boolean
    components?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_templates"]>

  export type whatsapp_templatesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    name?: boolean
    language?: boolean
    category?: boolean
    components?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_templates"]>

  export type whatsapp_templatesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    name?: boolean
    language?: boolean
    category?: boolean
    components?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_templates"]>

  export type whatsapp_templatesSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    name?: boolean
    language?: boolean
    category?: boolean
    components?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type whatsapp_templatesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "name" | "language" | "category" | "components" | "status" | "created_at" | "updated_at", ExtArgs["result"]["whatsapp_templates"]>
  export type whatsapp_templatesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_templatesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_templatesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $whatsapp_templatesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "whatsapp_templates"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      usuario_id: string
      name: string
      language: string
      category: string
      components: Prisma.JsonValue
      status: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["whatsapp_templates"]>
    composites: {}
  }

  type whatsapp_templatesGetPayload<S extends boolean | null | undefined | whatsapp_templatesDefaultArgs> = $Result.GetResult<Prisma.$whatsapp_templatesPayload, S>

  type whatsapp_templatesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<whatsapp_templatesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Whatsapp_templatesCountAggregateInputType | true
    }

  export interface whatsapp_templatesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['whatsapp_templates'], meta: { name: 'whatsapp_templates' } }
    /**
     * Find zero or one Whatsapp_templates that matches the filter.
     * @param {whatsapp_templatesFindUniqueArgs} args - Arguments to find a Whatsapp_templates
     * @example
     * // Get one Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends whatsapp_templatesFindUniqueArgs>(args: SelectSubset<T, whatsapp_templatesFindUniqueArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Whatsapp_templates that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {whatsapp_templatesFindUniqueOrThrowArgs} args - Arguments to find a Whatsapp_templates
     * @example
     * // Get one Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends whatsapp_templatesFindUniqueOrThrowArgs>(args: SelectSubset<T, whatsapp_templatesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_templates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_templatesFindFirstArgs} args - Arguments to find a Whatsapp_templates
     * @example
     * // Get one Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends whatsapp_templatesFindFirstArgs>(args?: SelectSubset<T, whatsapp_templatesFindFirstArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_templates that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_templatesFindFirstOrThrowArgs} args - Arguments to find a Whatsapp_templates
     * @example
     * // Get one Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends whatsapp_templatesFindFirstOrThrowArgs>(args?: SelectSubset<T, whatsapp_templatesFindFirstOrThrowArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Whatsapp_templates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_templatesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.findMany()
     * 
     * // Get first 10 Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const whatsapp_templatesWithIdOnly = await prisma.whatsapp_templates.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends whatsapp_templatesFindManyArgs>(args?: SelectSubset<T, whatsapp_templatesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Whatsapp_templates.
     * @param {whatsapp_templatesCreateArgs} args - Arguments to create a Whatsapp_templates.
     * @example
     * // Create one Whatsapp_templates
     * const Whatsapp_templates = await prisma.whatsapp_templates.create({
     *   data: {
     *     // ... data to create a Whatsapp_templates
     *   }
     * })
     * 
     */
    create<T extends whatsapp_templatesCreateArgs>(args: SelectSubset<T, whatsapp_templatesCreateArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Whatsapp_templates.
     * @param {whatsapp_templatesCreateManyArgs} args - Arguments to create many Whatsapp_templates.
     * @example
     * // Create many Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends whatsapp_templatesCreateManyArgs>(args?: SelectSubset<T, whatsapp_templatesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Whatsapp_templates and returns the data saved in the database.
     * @param {whatsapp_templatesCreateManyAndReturnArgs} args - Arguments to create many Whatsapp_templates.
     * @example
     * // Create many Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Whatsapp_templates and only return the `id`
     * const whatsapp_templatesWithIdOnly = await prisma.whatsapp_templates.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends whatsapp_templatesCreateManyAndReturnArgs>(args?: SelectSubset<T, whatsapp_templatesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Whatsapp_templates.
     * @param {whatsapp_templatesDeleteArgs} args - Arguments to delete one Whatsapp_templates.
     * @example
     * // Delete one Whatsapp_templates
     * const Whatsapp_templates = await prisma.whatsapp_templates.delete({
     *   where: {
     *     // ... filter to delete one Whatsapp_templates
     *   }
     * })
     * 
     */
    delete<T extends whatsapp_templatesDeleteArgs>(args: SelectSubset<T, whatsapp_templatesDeleteArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Whatsapp_templates.
     * @param {whatsapp_templatesUpdateArgs} args - Arguments to update one Whatsapp_templates.
     * @example
     * // Update one Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends whatsapp_templatesUpdateArgs>(args: SelectSubset<T, whatsapp_templatesUpdateArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Whatsapp_templates.
     * @param {whatsapp_templatesDeleteManyArgs} args - Arguments to filter Whatsapp_templates to delete.
     * @example
     * // Delete a few Whatsapp_templates
     * const { count } = await prisma.whatsapp_templates.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends whatsapp_templatesDeleteManyArgs>(args?: SelectSubset<T, whatsapp_templatesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_templatesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends whatsapp_templatesUpdateManyArgs>(args: SelectSubset<T, whatsapp_templatesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_templates and returns the data updated in the database.
     * @param {whatsapp_templatesUpdateManyAndReturnArgs} args - Arguments to update many Whatsapp_templates.
     * @example
     * // Update many Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Whatsapp_templates and only return the `id`
     * const whatsapp_templatesWithIdOnly = await prisma.whatsapp_templates.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends whatsapp_templatesUpdateManyAndReturnArgs>(args: SelectSubset<T, whatsapp_templatesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Whatsapp_templates.
     * @param {whatsapp_templatesUpsertArgs} args - Arguments to update or create a Whatsapp_templates.
     * @example
     * // Update or create a Whatsapp_templates
     * const whatsapp_templates = await prisma.whatsapp_templates.upsert({
     *   create: {
     *     // ... data to create a Whatsapp_templates
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Whatsapp_templates we want to update
     *   }
     * })
     */
    upsert<T extends whatsapp_templatesUpsertArgs>(args: SelectSubset<T, whatsapp_templatesUpsertArgs<ExtArgs>>): Prisma__whatsapp_templatesClient<$Result.GetResult<Prisma.$whatsapp_templatesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Whatsapp_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_templatesCountArgs} args - Arguments to filter Whatsapp_templates to count.
     * @example
     * // Count the number of Whatsapp_templates
     * const count = await prisma.whatsapp_templates.count({
     *   where: {
     *     // ... the filter for the Whatsapp_templates we want to count
     *   }
     * })
    **/
    count<T extends whatsapp_templatesCountArgs>(
      args?: Subset<T, whatsapp_templatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Whatsapp_templatesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Whatsapp_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Whatsapp_templatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Whatsapp_templatesAggregateArgs>(args: Subset<T, Whatsapp_templatesAggregateArgs>): Prisma.PrismaPromise<GetWhatsapp_templatesAggregateType<T>>

    /**
     * Group by Whatsapp_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_templatesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends whatsapp_templatesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: whatsapp_templatesGroupByArgs['orderBy'] }
        : { orderBy?: whatsapp_templatesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, whatsapp_templatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWhatsapp_templatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the whatsapp_templates model
   */
  readonly fields: whatsapp_templatesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for whatsapp_templates.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__whatsapp_templatesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the whatsapp_templates model
   */
  interface whatsapp_templatesFieldRefs {
    readonly id: FieldRef<"whatsapp_templates", 'String'>
    readonly usuario_id: FieldRef<"whatsapp_templates", 'String'>
    readonly name: FieldRef<"whatsapp_templates", 'String'>
    readonly language: FieldRef<"whatsapp_templates", 'String'>
    readonly category: FieldRef<"whatsapp_templates", 'String'>
    readonly components: FieldRef<"whatsapp_templates", 'Json'>
    readonly status: FieldRef<"whatsapp_templates", 'String'>
    readonly created_at: FieldRef<"whatsapp_templates", 'DateTime'>
    readonly updated_at: FieldRef<"whatsapp_templates", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * whatsapp_templates findUnique
   */
  export type whatsapp_templatesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_templates to fetch.
     */
    where: whatsapp_templatesWhereUniqueInput
  }

  /**
   * whatsapp_templates findUniqueOrThrow
   */
  export type whatsapp_templatesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_templates to fetch.
     */
    where: whatsapp_templatesWhereUniqueInput
  }

  /**
   * whatsapp_templates findFirst
   */
  export type whatsapp_templatesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_templates to fetch.
     */
    where?: whatsapp_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_templates to fetch.
     */
    orderBy?: whatsapp_templatesOrderByWithRelationInput | whatsapp_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_templates.
     */
    cursor?: whatsapp_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_templates.
     */
    distinct?: Whatsapp_templatesScalarFieldEnum | Whatsapp_templatesScalarFieldEnum[]
  }

  /**
   * whatsapp_templates findFirstOrThrow
   */
  export type whatsapp_templatesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_templates to fetch.
     */
    where?: whatsapp_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_templates to fetch.
     */
    orderBy?: whatsapp_templatesOrderByWithRelationInput | whatsapp_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_templates.
     */
    cursor?: whatsapp_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_templates.
     */
    distinct?: Whatsapp_templatesScalarFieldEnum | Whatsapp_templatesScalarFieldEnum[]
  }

  /**
   * whatsapp_templates findMany
   */
  export type whatsapp_templatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_templates to fetch.
     */
    where?: whatsapp_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_templates to fetch.
     */
    orderBy?: whatsapp_templatesOrderByWithRelationInput | whatsapp_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing whatsapp_templates.
     */
    cursor?: whatsapp_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_templates.
     */
    skip?: number
    distinct?: Whatsapp_templatesScalarFieldEnum | Whatsapp_templatesScalarFieldEnum[]
  }

  /**
   * whatsapp_templates create
   */
  export type whatsapp_templatesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * The data needed to create a whatsapp_templates.
     */
    data: XOR<whatsapp_templatesCreateInput, whatsapp_templatesUncheckedCreateInput>
  }

  /**
   * whatsapp_templates createMany
   */
  export type whatsapp_templatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many whatsapp_templates.
     */
    data: whatsapp_templatesCreateManyInput | whatsapp_templatesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * whatsapp_templates createManyAndReturn
   */
  export type whatsapp_templatesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * The data used to create many whatsapp_templates.
     */
    data: whatsapp_templatesCreateManyInput | whatsapp_templatesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_templates update
   */
  export type whatsapp_templatesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * The data needed to update a whatsapp_templates.
     */
    data: XOR<whatsapp_templatesUpdateInput, whatsapp_templatesUncheckedUpdateInput>
    /**
     * Choose, which whatsapp_templates to update.
     */
    where: whatsapp_templatesWhereUniqueInput
  }

  /**
   * whatsapp_templates updateMany
   */
  export type whatsapp_templatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update whatsapp_templates.
     */
    data: XOR<whatsapp_templatesUpdateManyMutationInput, whatsapp_templatesUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_templates to update
     */
    where?: whatsapp_templatesWhereInput
    /**
     * Limit how many whatsapp_templates to update.
     */
    limit?: number
  }

  /**
   * whatsapp_templates updateManyAndReturn
   */
  export type whatsapp_templatesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * The data used to update whatsapp_templates.
     */
    data: XOR<whatsapp_templatesUpdateManyMutationInput, whatsapp_templatesUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_templates to update
     */
    where?: whatsapp_templatesWhereInput
    /**
     * Limit how many whatsapp_templates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_templates upsert
   */
  export type whatsapp_templatesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * The filter to search for the whatsapp_templates to update in case it exists.
     */
    where: whatsapp_templatesWhereUniqueInput
    /**
     * In case the whatsapp_templates found by the `where` argument doesn't exist, create a new whatsapp_templates with this data.
     */
    create: XOR<whatsapp_templatesCreateInput, whatsapp_templatesUncheckedCreateInput>
    /**
     * In case the whatsapp_templates was found with the provided `where` argument, update it with this data.
     */
    update: XOR<whatsapp_templatesUpdateInput, whatsapp_templatesUncheckedUpdateInput>
  }

  /**
   * whatsapp_templates delete
   */
  export type whatsapp_templatesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
    /**
     * Filter which whatsapp_templates to delete.
     */
    where: whatsapp_templatesWhereUniqueInput
  }

  /**
   * whatsapp_templates deleteMany
   */
  export type whatsapp_templatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_templates to delete
     */
    where?: whatsapp_templatesWhereInput
    /**
     * Limit how many whatsapp_templates to delete.
     */
    limit?: number
  }

  /**
   * whatsapp_templates without action
   */
  export type whatsapp_templatesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_templates
     */
    select?: whatsapp_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_templates
     */
    omit?: whatsapp_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_templatesInclude<ExtArgs> | null
  }


  /**
   * Model whatsapp_messages
   */

  export type AggregateWhatsapp_messages = {
    _count: Whatsapp_messagesCountAggregateOutputType | null
    _min: Whatsapp_messagesMinAggregateOutputType | null
    _max: Whatsapp_messagesMaxAggregateOutputType | null
  }

  export type Whatsapp_messagesMinAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    paciente_id: string | null
    cita_id: string | null
    template_name: string | null
    message_type: string | null
    phone_number: string | null
    status: $Enums.WhatsAppMessageStatus | null
    whatsapp_message_id: string | null
    error_message: string | null
    sent_at: Date | null
    delivered_at: Date | null
    read_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_messagesMaxAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    paciente_id: string | null
    cita_id: string | null
    template_name: string | null
    message_type: string | null
    phone_number: string | null
    status: $Enums.WhatsAppMessageStatus | null
    whatsapp_message_id: string | null
    error_message: string | null
    sent_at: Date | null
    delivered_at: Date | null
    read_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_messagesCountAggregateOutputType = {
    id: number
    usuario_id: number
    paciente_id: number
    cita_id: number
    template_name: number
    message_type: number
    content: number
    phone_number: number
    status: number
    whatsapp_message_id: number
    error_message: number
    sent_at: number
    delivered_at: number
    read_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Whatsapp_messagesMinAggregateInputType = {
    id?: true
    usuario_id?: true
    paciente_id?: true
    cita_id?: true
    template_name?: true
    message_type?: true
    phone_number?: true
    status?: true
    whatsapp_message_id?: true
    error_message?: true
    sent_at?: true
    delivered_at?: true
    read_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_messagesMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    paciente_id?: true
    cita_id?: true
    template_name?: true
    message_type?: true
    phone_number?: true
    status?: true
    whatsapp_message_id?: true
    error_message?: true
    sent_at?: true
    delivered_at?: true
    read_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_messagesCountAggregateInputType = {
    id?: true
    usuario_id?: true
    paciente_id?: true
    cita_id?: true
    template_name?: true
    message_type?: true
    content?: true
    phone_number?: true
    status?: true
    whatsapp_message_id?: true
    error_message?: true
    sent_at?: true
    delivered_at?: true
    read_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Whatsapp_messagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_messages to aggregate.
     */
    where?: whatsapp_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_messages to fetch.
     */
    orderBy?: whatsapp_messagesOrderByWithRelationInput | whatsapp_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: whatsapp_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned whatsapp_messages
    **/
    _count?: true | Whatsapp_messagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Whatsapp_messagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Whatsapp_messagesMaxAggregateInputType
  }

  export type GetWhatsapp_messagesAggregateType<T extends Whatsapp_messagesAggregateArgs> = {
        [P in keyof T & keyof AggregateWhatsapp_messages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWhatsapp_messages[P]>
      : GetScalarType<T[P], AggregateWhatsapp_messages[P]>
  }




  export type whatsapp_messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_messagesWhereInput
    orderBy?: whatsapp_messagesOrderByWithAggregationInput | whatsapp_messagesOrderByWithAggregationInput[]
    by: Whatsapp_messagesScalarFieldEnum[] | Whatsapp_messagesScalarFieldEnum
    having?: whatsapp_messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Whatsapp_messagesCountAggregateInputType | true
    _min?: Whatsapp_messagesMinAggregateInputType
    _max?: Whatsapp_messagesMaxAggregateInputType
  }

  export type Whatsapp_messagesGroupByOutputType = {
    id: string
    usuario_id: string
    paciente_id: string | null
    cita_id: string | null
    template_name: string | null
    message_type: string
    content: JsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id: string | null
    error_message: string | null
    sent_at: Date | null
    delivered_at: Date | null
    read_at: Date | null
    created_at: Date
    updated_at: Date
    _count: Whatsapp_messagesCountAggregateOutputType | null
    _min: Whatsapp_messagesMinAggregateOutputType | null
    _max: Whatsapp_messagesMaxAggregateOutputType | null
  }

  type GetWhatsapp_messagesGroupByPayload<T extends whatsapp_messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Whatsapp_messagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Whatsapp_messagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Whatsapp_messagesGroupByOutputType[P]>
            : GetScalarType<T[P], Whatsapp_messagesGroupByOutputType[P]>
        }
      >
    >


  export type whatsapp_messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    paciente_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    message_type?: boolean
    content?: boolean
    phone_number?: boolean
    status?: boolean
    whatsapp_message_id?: boolean
    error_message?: boolean
    sent_at?: boolean
    delivered_at?: boolean
    read_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    citas?: boolean | whatsapp_messages$citasArgs<ExtArgs>
    pacientes?: boolean | whatsapp_messages$pacientesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_messages"]>

  export type whatsapp_messagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    paciente_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    message_type?: boolean
    content?: boolean
    phone_number?: boolean
    status?: boolean
    whatsapp_message_id?: boolean
    error_message?: boolean
    sent_at?: boolean
    delivered_at?: boolean
    read_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    citas?: boolean | whatsapp_messages$citasArgs<ExtArgs>
    pacientes?: boolean | whatsapp_messages$pacientesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_messages"]>

  export type whatsapp_messagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    paciente_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    message_type?: boolean
    content?: boolean
    phone_number?: boolean
    status?: boolean
    whatsapp_message_id?: boolean
    error_message?: boolean
    sent_at?: boolean
    delivered_at?: boolean
    read_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    citas?: boolean | whatsapp_messages$citasArgs<ExtArgs>
    pacientes?: boolean | whatsapp_messages$pacientesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_messages"]>

  export type whatsapp_messagesSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    paciente_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    message_type?: boolean
    content?: boolean
    phone_number?: boolean
    status?: boolean
    whatsapp_message_id?: boolean
    error_message?: boolean
    sent_at?: boolean
    delivered_at?: boolean
    read_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type whatsapp_messagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "paciente_id" | "cita_id" | "template_name" | "message_type" | "content" | "phone_number" | "status" | "whatsapp_message_id" | "error_message" | "sent_at" | "delivered_at" | "read_at" | "created_at" | "updated_at", ExtArgs["result"]["whatsapp_messages"]>
  export type whatsapp_messagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | whatsapp_messages$citasArgs<ExtArgs>
    pacientes?: boolean | whatsapp_messages$pacientesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_messagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | whatsapp_messages$citasArgs<ExtArgs>
    pacientes?: boolean | whatsapp_messages$pacientesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_messagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | whatsapp_messages$citasArgs<ExtArgs>
    pacientes?: boolean | whatsapp_messages$pacientesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $whatsapp_messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "whatsapp_messages"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs> | null
      pacientes: Prisma.$pacientesPayload<ExtArgs> | null
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      usuario_id: string
      paciente_id: string | null
      cita_id: string | null
      template_name: string | null
      message_type: string
      content: Prisma.JsonValue
      phone_number: string
      status: $Enums.WhatsAppMessageStatus
      whatsapp_message_id: string | null
      error_message: string | null
      sent_at: Date | null
      delivered_at: Date | null
      read_at: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["whatsapp_messages"]>
    composites: {}
  }

  type whatsapp_messagesGetPayload<S extends boolean | null | undefined | whatsapp_messagesDefaultArgs> = $Result.GetResult<Prisma.$whatsapp_messagesPayload, S>

  type whatsapp_messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<whatsapp_messagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Whatsapp_messagesCountAggregateInputType | true
    }

  export interface whatsapp_messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['whatsapp_messages'], meta: { name: 'whatsapp_messages' } }
    /**
     * Find zero or one Whatsapp_messages that matches the filter.
     * @param {whatsapp_messagesFindUniqueArgs} args - Arguments to find a Whatsapp_messages
     * @example
     * // Get one Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends whatsapp_messagesFindUniqueArgs>(args: SelectSubset<T, whatsapp_messagesFindUniqueArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Whatsapp_messages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {whatsapp_messagesFindUniqueOrThrowArgs} args - Arguments to find a Whatsapp_messages
     * @example
     * // Get one Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends whatsapp_messagesFindUniqueOrThrowArgs>(args: SelectSubset<T, whatsapp_messagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_messagesFindFirstArgs} args - Arguments to find a Whatsapp_messages
     * @example
     * // Get one Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends whatsapp_messagesFindFirstArgs>(args?: SelectSubset<T, whatsapp_messagesFindFirstArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_messagesFindFirstOrThrowArgs} args - Arguments to find a Whatsapp_messages
     * @example
     * // Get one Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends whatsapp_messagesFindFirstOrThrowArgs>(args?: SelectSubset<T, whatsapp_messagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Whatsapp_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_messagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.findMany()
     * 
     * // Get first 10 Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const whatsapp_messagesWithIdOnly = await prisma.whatsapp_messages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends whatsapp_messagesFindManyArgs>(args?: SelectSubset<T, whatsapp_messagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Whatsapp_messages.
     * @param {whatsapp_messagesCreateArgs} args - Arguments to create a Whatsapp_messages.
     * @example
     * // Create one Whatsapp_messages
     * const Whatsapp_messages = await prisma.whatsapp_messages.create({
     *   data: {
     *     // ... data to create a Whatsapp_messages
     *   }
     * })
     * 
     */
    create<T extends whatsapp_messagesCreateArgs>(args: SelectSubset<T, whatsapp_messagesCreateArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Whatsapp_messages.
     * @param {whatsapp_messagesCreateManyArgs} args - Arguments to create many Whatsapp_messages.
     * @example
     * // Create many Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends whatsapp_messagesCreateManyArgs>(args?: SelectSubset<T, whatsapp_messagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Whatsapp_messages and returns the data saved in the database.
     * @param {whatsapp_messagesCreateManyAndReturnArgs} args - Arguments to create many Whatsapp_messages.
     * @example
     * // Create many Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Whatsapp_messages and only return the `id`
     * const whatsapp_messagesWithIdOnly = await prisma.whatsapp_messages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends whatsapp_messagesCreateManyAndReturnArgs>(args?: SelectSubset<T, whatsapp_messagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Whatsapp_messages.
     * @param {whatsapp_messagesDeleteArgs} args - Arguments to delete one Whatsapp_messages.
     * @example
     * // Delete one Whatsapp_messages
     * const Whatsapp_messages = await prisma.whatsapp_messages.delete({
     *   where: {
     *     // ... filter to delete one Whatsapp_messages
     *   }
     * })
     * 
     */
    delete<T extends whatsapp_messagesDeleteArgs>(args: SelectSubset<T, whatsapp_messagesDeleteArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Whatsapp_messages.
     * @param {whatsapp_messagesUpdateArgs} args - Arguments to update one Whatsapp_messages.
     * @example
     * // Update one Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends whatsapp_messagesUpdateArgs>(args: SelectSubset<T, whatsapp_messagesUpdateArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Whatsapp_messages.
     * @param {whatsapp_messagesDeleteManyArgs} args - Arguments to filter Whatsapp_messages to delete.
     * @example
     * // Delete a few Whatsapp_messages
     * const { count } = await prisma.whatsapp_messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends whatsapp_messagesDeleteManyArgs>(args?: SelectSubset<T, whatsapp_messagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends whatsapp_messagesUpdateManyArgs>(args: SelectSubset<T, whatsapp_messagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_messages and returns the data updated in the database.
     * @param {whatsapp_messagesUpdateManyAndReturnArgs} args - Arguments to update many Whatsapp_messages.
     * @example
     * // Update many Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Whatsapp_messages and only return the `id`
     * const whatsapp_messagesWithIdOnly = await prisma.whatsapp_messages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends whatsapp_messagesUpdateManyAndReturnArgs>(args: SelectSubset<T, whatsapp_messagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Whatsapp_messages.
     * @param {whatsapp_messagesUpsertArgs} args - Arguments to update or create a Whatsapp_messages.
     * @example
     * // Update or create a Whatsapp_messages
     * const whatsapp_messages = await prisma.whatsapp_messages.upsert({
     *   create: {
     *     // ... data to create a Whatsapp_messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Whatsapp_messages we want to update
     *   }
     * })
     */
    upsert<T extends whatsapp_messagesUpsertArgs>(args: SelectSubset<T, whatsapp_messagesUpsertArgs<ExtArgs>>): Prisma__whatsapp_messagesClient<$Result.GetResult<Prisma.$whatsapp_messagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Whatsapp_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_messagesCountArgs} args - Arguments to filter Whatsapp_messages to count.
     * @example
     * // Count the number of Whatsapp_messages
     * const count = await prisma.whatsapp_messages.count({
     *   where: {
     *     // ... the filter for the Whatsapp_messages we want to count
     *   }
     * })
    **/
    count<T extends whatsapp_messagesCountArgs>(
      args?: Subset<T, whatsapp_messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Whatsapp_messagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Whatsapp_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Whatsapp_messagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Whatsapp_messagesAggregateArgs>(args: Subset<T, Whatsapp_messagesAggregateArgs>): Prisma.PrismaPromise<GetWhatsapp_messagesAggregateType<T>>

    /**
     * Group by Whatsapp_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends whatsapp_messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: whatsapp_messagesGroupByArgs['orderBy'] }
        : { orderBy?: whatsapp_messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, whatsapp_messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWhatsapp_messagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the whatsapp_messages model
   */
  readonly fields: whatsapp_messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for whatsapp_messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__whatsapp_messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    citas<T extends whatsapp_messages$citasArgs<ExtArgs> = {}>(args?: Subset<T, whatsapp_messages$citasArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pacientes<T extends whatsapp_messages$pacientesArgs<ExtArgs> = {}>(args?: Subset<T, whatsapp_messages$pacientesArgs<ExtArgs>>): Prisma__pacientesClient<$Result.GetResult<Prisma.$pacientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the whatsapp_messages model
   */
  interface whatsapp_messagesFieldRefs {
    readonly id: FieldRef<"whatsapp_messages", 'String'>
    readonly usuario_id: FieldRef<"whatsapp_messages", 'String'>
    readonly paciente_id: FieldRef<"whatsapp_messages", 'String'>
    readonly cita_id: FieldRef<"whatsapp_messages", 'String'>
    readonly template_name: FieldRef<"whatsapp_messages", 'String'>
    readonly message_type: FieldRef<"whatsapp_messages", 'String'>
    readonly content: FieldRef<"whatsapp_messages", 'Json'>
    readonly phone_number: FieldRef<"whatsapp_messages", 'String'>
    readonly status: FieldRef<"whatsapp_messages", 'WhatsAppMessageStatus'>
    readonly whatsapp_message_id: FieldRef<"whatsapp_messages", 'String'>
    readonly error_message: FieldRef<"whatsapp_messages", 'String'>
    readonly sent_at: FieldRef<"whatsapp_messages", 'DateTime'>
    readonly delivered_at: FieldRef<"whatsapp_messages", 'DateTime'>
    readonly read_at: FieldRef<"whatsapp_messages", 'DateTime'>
    readonly created_at: FieldRef<"whatsapp_messages", 'DateTime'>
    readonly updated_at: FieldRef<"whatsapp_messages", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * whatsapp_messages findUnique
   */
  export type whatsapp_messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_messages to fetch.
     */
    where: whatsapp_messagesWhereUniqueInput
  }

  /**
   * whatsapp_messages findUniqueOrThrow
   */
  export type whatsapp_messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_messages to fetch.
     */
    where: whatsapp_messagesWhereUniqueInput
  }

  /**
   * whatsapp_messages findFirst
   */
  export type whatsapp_messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_messages to fetch.
     */
    where?: whatsapp_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_messages to fetch.
     */
    orderBy?: whatsapp_messagesOrderByWithRelationInput | whatsapp_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_messages.
     */
    cursor?: whatsapp_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_messages.
     */
    distinct?: Whatsapp_messagesScalarFieldEnum | Whatsapp_messagesScalarFieldEnum[]
  }

  /**
   * whatsapp_messages findFirstOrThrow
   */
  export type whatsapp_messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_messages to fetch.
     */
    where?: whatsapp_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_messages to fetch.
     */
    orderBy?: whatsapp_messagesOrderByWithRelationInput | whatsapp_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_messages.
     */
    cursor?: whatsapp_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_messages.
     */
    distinct?: Whatsapp_messagesScalarFieldEnum | Whatsapp_messagesScalarFieldEnum[]
  }

  /**
   * whatsapp_messages findMany
   */
  export type whatsapp_messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_messages to fetch.
     */
    where?: whatsapp_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_messages to fetch.
     */
    orderBy?: whatsapp_messagesOrderByWithRelationInput | whatsapp_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing whatsapp_messages.
     */
    cursor?: whatsapp_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_messages.
     */
    skip?: number
    distinct?: Whatsapp_messagesScalarFieldEnum | Whatsapp_messagesScalarFieldEnum[]
  }

  /**
   * whatsapp_messages create
   */
  export type whatsapp_messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * The data needed to create a whatsapp_messages.
     */
    data: XOR<whatsapp_messagesCreateInput, whatsapp_messagesUncheckedCreateInput>
  }

  /**
   * whatsapp_messages createMany
   */
  export type whatsapp_messagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many whatsapp_messages.
     */
    data: whatsapp_messagesCreateManyInput | whatsapp_messagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * whatsapp_messages createManyAndReturn
   */
  export type whatsapp_messagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * The data used to create many whatsapp_messages.
     */
    data: whatsapp_messagesCreateManyInput | whatsapp_messagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_messages update
   */
  export type whatsapp_messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * The data needed to update a whatsapp_messages.
     */
    data: XOR<whatsapp_messagesUpdateInput, whatsapp_messagesUncheckedUpdateInput>
    /**
     * Choose, which whatsapp_messages to update.
     */
    where: whatsapp_messagesWhereUniqueInput
  }

  /**
   * whatsapp_messages updateMany
   */
  export type whatsapp_messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update whatsapp_messages.
     */
    data: XOR<whatsapp_messagesUpdateManyMutationInput, whatsapp_messagesUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_messages to update
     */
    where?: whatsapp_messagesWhereInput
    /**
     * Limit how many whatsapp_messages to update.
     */
    limit?: number
  }

  /**
   * whatsapp_messages updateManyAndReturn
   */
  export type whatsapp_messagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * The data used to update whatsapp_messages.
     */
    data: XOR<whatsapp_messagesUpdateManyMutationInput, whatsapp_messagesUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_messages to update
     */
    where?: whatsapp_messagesWhereInput
    /**
     * Limit how many whatsapp_messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_messages upsert
   */
  export type whatsapp_messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * The filter to search for the whatsapp_messages to update in case it exists.
     */
    where: whatsapp_messagesWhereUniqueInput
    /**
     * In case the whatsapp_messages found by the `where` argument doesn't exist, create a new whatsapp_messages with this data.
     */
    create: XOR<whatsapp_messagesCreateInput, whatsapp_messagesUncheckedCreateInput>
    /**
     * In case the whatsapp_messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<whatsapp_messagesUpdateInput, whatsapp_messagesUncheckedUpdateInput>
  }

  /**
   * whatsapp_messages delete
   */
  export type whatsapp_messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
    /**
     * Filter which whatsapp_messages to delete.
     */
    where: whatsapp_messagesWhereUniqueInput
  }

  /**
   * whatsapp_messages deleteMany
   */
  export type whatsapp_messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_messages to delete
     */
    where?: whatsapp_messagesWhereInput
    /**
     * Limit how many whatsapp_messages to delete.
     */
    limit?: number
  }

  /**
   * whatsapp_messages.citas
   */
  export type whatsapp_messages$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the citas
     */
    omit?: citasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
  }

  /**
   * whatsapp_messages.pacientes
   */
  export type whatsapp_messages$pacientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pacientes
     */
    select?: pacientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pacientes
     */
    omit?: pacientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pacientesInclude<ExtArgs> | null
    where?: pacientesWhereInput
  }

  /**
   * whatsapp_messages without action
   */
  export type whatsapp_messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_messages
     */
    select?: whatsapp_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_messages
     */
    omit?: whatsapp_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_messagesInclude<ExtArgs> | null
  }


  /**
   * Model whatsapp_reminders
   */

  export type AggregateWhatsapp_reminders = {
    _count: Whatsapp_remindersCountAggregateOutputType | null
    _min: Whatsapp_remindersMinAggregateOutputType | null
    _max: Whatsapp_remindersMaxAggregateOutputType | null
  }

  export type Whatsapp_remindersMinAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    cita_id: string | null
    template_name: string | null
    reminder_type: string | null
    scheduled_time: Date | null
    is_sent: boolean | null
    sent_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_remindersMaxAggregateOutputType = {
    id: string | null
    usuario_id: string | null
    cita_id: string | null
    template_name: string | null
    reminder_type: string | null
    scheduled_time: Date | null
    is_sent: boolean | null
    sent_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Whatsapp_remindersCountAggregateOutputType = {
    id: number
    usuario_id: number
    cita_id: number
    template_name: number
    reminder_type: number
    scheduled_time: number
    is_sent: number
    sent_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Whatsapp_remindersMinAggregateInputType = {
    id?: true
    usuario_id?: true
    cita_id?: true
    template_name?: true
    reminder_type?: true
    scheduled_time?: true
    is_sent?: true
    sent_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_remindersMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    cita_id?: true
    template_name?: true
    reminder_type?: true
    scheduled_time?: true
    is_sent?: true
    sent_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Whatsapp_remindersCountAggregateInputType = {
    id?: true
    usuario_id?: true
    cita_id?: true
    template_name?: true
    reminder_type?: true
    scheduled_time?: true
    is_sent?: true
    sent_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Whatsapp_remindersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_reminders to aggregate.
     */
    where?: whatsapp_remindersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_reminders to fetch.
     */
    orderBy?: whatsapp_remindersOrderByWithRelationInput | whatsapp_remindersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: whatsapp_remindersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_reminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned whatsapp_reminders
    **/
    _count?: true | Whatsapp_remindersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Whatsapp_remindersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Whatsapp_remindersMaxAggregateInputType
  }

  export type GetWhatsapp_remindersAggregateType<T extends Whatsapp_remindersAggregateArgs> = {
        [P in keyof T & keyof AggregateWhatsapp_reminders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWhatsapp_reminders[P]>
      : GetScalarType<T[P], AggregateWhatsapp_reminders[P]>
  }




  export type whatsapp_remindersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsapp_remindersWhereInput
    orderBy?: whatsapp_remindersOrderByWithAggregationInput | whatsapp_remindersOrderByWithAggregationInput[]
    by: Whatsapp_remindersScalarFieldEnum[] | Whatsapp_remindersScalarFieldEnum
    having?: whatsapp_remindersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Whatsapp_remindersCountAggregateInputType | true
    _min?: Whatsapp_remindersMinAggregateInputType
    _max?: Whatsapp_remindersMaxAggregateInputType
  }

  export type Whatsapp_remindersGroupByOutputType = {
    id: string
    usuario_id: string
    cita_id: string
    template_name: string
    reminder_type: string
    scheduled_time: Date
    is_sent: boolean
    sent_at: Date | null
    created_at: Date
    updated_at: Date
    _count: Whatsapp_remindersCountAggregateOutputType | null
    _min: Whatsapp_remindersMinAggregateOutputType | null
    _max: Whatsapp_remindersMaxAggregateOutputType | null
  }

  type GetWhatsapp_remindersGroupByPayload<T extends whatsapp_remindersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Whatsapp_remindersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Whatsapp_remindersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Whatsapp_remindersGroupByOutputType[P]>
            : GetScalarType<T[P], Whatsapp_remindersGroupByOutputType[P]>
        }
      >
    >


  export type whatsapp_remindersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    reminder_type?: boolean
    scheduled_time?: boolean
    is_sent?: boolean
    sent_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    citas?: boolean | citasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_reminders"]>

  export type whatsapp_remindersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    reminder_type?: boolean
    scheduled_time?: boolean
    is_sent?: boolean
    sent_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    citas?: boolean | citasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_reminders"]>

  export type whatsapp_remindersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    reminder_type?: boolean
    scheduled_time?: boolean
    is_sent?: boolean
    sent_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    citas?: boolean | citasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsapp_reminders"]>

  export type whatsapp_remindersSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    cita_id?: boolean
    template_name?: boolean
    reminder_type?: boolean
    scheduled_time?: boolean
    is_sent?: boolean
    sent_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type whatsapp_remindersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "cita_id" | "template_name" | "reminder_type" | "scheduled_time" | "is_sent" | "sent_at" | "created_at" | "updated_at", ExtArgs["result"]["whatsapp_reminders"]>
  export type whatsapp_remindersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | citasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_remindersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | citasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type whatsapp_remindersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | citasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $whatsapp_remindersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "whatsapp_reminders"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      usuario_id: string
      cita_id: string
      template_name: string
      reminder_type: string
      scheduled_time: Date
      is_sent: boolean
      sent_at: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["whatsapp_reminders"]>
    composites: {}
  }

  type whatsapp_remindersGetPayload<S extends boolean | null | undefined | whatsapp_remindersDefaultArgs> = $Result.GetResult<Prisma.$whatsapp_remindersPayload, S>

  type whatsapp_remindersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<whatsapp_remindersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Whatsapp_remindersCountAggregateInputType | true
    }

  export interface whatsapp_remindersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['whatsapp_reminders'], meta: { name: 'whatsapp_reminders' } }
    /**
     * Find zero or one Whatsapp_reminders that matches the filter.
     * @param {whatsapp_remindersFindUniqueArgs} args - Arguments to find a Whatsapp_reminders
     * @example
     * // Get one Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends whatsapp_remindersFindUniqueArgs>(args: SelectSubset<T, whatsapp_remindersFindUniqueArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Whatsapp_reminders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {whatsapp_remindersFindUniqueOrThrowArgs} args - Arguments to find a Whatsapp_reminders
     * @example
     * // Get one Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends whatsapp_remindersFindUniqueOrThrowArgs>(args: SelectSubset<T, whatsapp_remindersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_reminders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_remindersFindFirstArgs} args - Arguments to find a Whatsapp_reminders
     * @example
     * // Get one Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends whatsapp_remindersFindFirstArgs>(args?: SelectSubset<T, whatsapp_remindersFindFirstArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Whatsapp_reminders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_remindersFindFirstOrThrowArgs} args - Arguments to find a Whatsapp_reminders
     * @example
     * // Get one Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends whatsapp_remindersFindFirstOrThrowArgs>(args?: SelectSubset<T, whatsapp_remindersFindFirstOrThrowArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Whatsapp_reminders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_remindersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.findMany()
     * 
     * // Get first 10 Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const whatsapp_remindersWithIdOnly = await prisma.whatsapp_reminders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends whatsapp_remindersFindManyArgs>(args?: SelectSubset<T, whatsapp_remindersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Whatsapp_reminders.
     * @param {whatsapp_remindersCreateArgs} args - Arguments to create a Whatsapp_reminders.
     * @example
     * // Create one Whatsapp_reminders
     * const Whatsapp_reminders = await prisma.whatsapp_reminders.create({
     *   data: {
     *     // ... data to create a Whatsapp_reminders
     *   }
     * })
     * 
     */
    create<T extends whatsapp_remindersCreateArgs>(args: SelectSubset<T, whatsapp_remindersCreateArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Whatsapp_reminders.
     * @param {whatsapp_remindersCreateManyArgs} args - Arguments to create many Whatsapp_reminders.
     * @example
     * // Create many Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends whatsapp_remindersCreateManyArgs>(args?: SelectSubset<T, whatsapp_remindersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Whatsapp_reminders and returns the data saved in the database.
     * @param {whatsapp_remindersCreateManyAndReturnArgs} args - Arguments to create many Whatsapp_reminders.
     * @example
     * // Create many Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Whatsapp_reminders and only return the `id`
     * const whatsapp_remindersWithIdOnly = await prisma.whatsapp_reminders.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends whatsapp_remindersCreateManyAndReturnArgs>(args?: SelectSubset<T, whatsapp_remindersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Whatsapp_reminders.
     * @param {whatsapp_remindersDeleteArgs} args - Arguments to delete one Whatsapp_reminders.
     * @example
     * // Delete one Whatsapp_reminders
     * const Whatsapp_reminders = await prisma.whatsapp_reminders.delete({
     *   where: {
     *     // ... filter to delete one Whatsapp_reminders
     *   }
     * })
     * 
     */
    delete<T extends whatsapp_remindersDeleteArgs>(args: SelectSubset<T, whatsapp_remindersDeleteArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Whatsapp_reminders.
     * @param {whatsapp_remindersUpdateArgs} args - Arguments to update one Whatsapp_reminders.
     * @example
     * // Update one Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends whatsapp_remindersUpdateArgs>(args: SelectSubset<T, whatsapp_remindersUpdateArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Whatsapp_reminders.
     * @param {whatsapp_remindersDeleteManyArgs} args - Arguments to filter Whatsapp_reminders to delete.
     * @example
     * // Delete a few Whatsapp_reminders
     * const { count } = await prisma.whatsapp_reminders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends whatsapp_remindersDeleteManyArgs>(args?: SelectSubset<T, whatsapp_remindersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_reminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_remindersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends whatsapp_remindersUpdateManyArgs>(args: SelectSubset<T, whatsapp_remindersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Whatsapp_reminders and returns the data updated in the database.
     * @param {whatsapp_remindersUpdateManyAndReturnArgs} args - Arguments to update many Whatsapp_reminders.
     * @example
     * // Update many Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Whatsapp_reminders and only return the `id`
     * const whatsapp_remindersWithIdOnly = await prisma.whatsapp_reminders.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends whatsapp_remindersUpdateManyAndReturnArgs>(args: SelectSubset<T, whatsapp_remindersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Whatsapp_reminders.
     * @param {whatsapp_remindersUpsertArgs} args - Arguments to update or create a Whatsapp_reminders.
     * @example
     * // Update or create a Whatsapp_reminders
     * const whatsapp_reminders = await prisma.whatsapp_reminders.upsert({
     *   create: {
     *     // ... data to create a Whatsapp_reminders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Whatsapp_reminders we want to update
     *   }
     * })
     */
    upsert<T extends whatsapp_remindersUpsertArgs>(args: SelectSubset<T, whatsapp_remindersUpsertArgs<ExtArgs>>): Prisma__whatsapp_remindersClient<$Result.GetResult<Prisma.$whatsapp_remindersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Whatsapp_reminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_remindersCountArgs} args - Arguments to filter Whatsapp_reminders to count.
     * @example
     * // Count the number of Whatsapp_reminders
     * const count = await prisma.whatsapp_reminders.count({
     *   where: {
     *     // ... the filter for the Whatsapp_reminders we want to count
     *   }
     * })
    **/
    count<T extends whatsapp_remindersCountArgs>(
      args?: Subset<T, whatsapp_remindersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Whatsapp_remindersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Whatsapp_reminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Whatsapp_remindersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Whatsapp_remindersAggregateArgs>(args: Subset<T, Whatsapp_remindersAggregateArgs>): Prisma.PrismaPromise<GetWhatsapp_remindersAggregateType<T>>

    /**
     * Group by Whatsapp_reminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsapp_remindersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends whatsapp_remindersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: whatsapp_remindersGroupByArgs['orderBy'] }
        : { orderBy?: whatsapp_remindersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, whatsapp_remindersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWhatsapp_remindersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the whatsapp_reminders model
   */
  readonly fields: whatsapp_remindersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for whatsapp_reminders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__whatsapp_remindersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    citas<T extends citasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, citasDefaultArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the whatsapp_reminders model
   */
  interface whatsapp_remindersFieldRefs {
    readonly id: FieldRef<"whatsapp_reminders", 'String'>
    readonly usuario_id: FieldRef<"whatsapp_reminders", 'String'>
    readonly cita_id: FieldRef<"whatsapp_reminders", 'String'>
    readonly template_name: FieldRef<"whatsapp_reminders", 'String'>
    readonly reminder_type: FieldRef<"whatsapp_reminders", 'String'>
    readonly scheduled_time: FieldRef<"whatsapp_reminders", 'DateTime'>
    readonly is_sent: FieldRef<"whatsapp_reminders", 'Boolean'>
    readonly sent_at: FieldRef<"whatsapp_reminders", 'DateTime'>
    readonly created_at: FieldRef<"whatsapp_reminders", 'DateTime'>
    readonly updated_at: FieldRef<"whatsapp_reminders", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * whatsapp_reminders findUnique
   */
  export type whatsapp_remindersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_reminders to fetch.
     */
    where: whatsapp_remindersWhereUniqueInput
  }

  /**
   * whatsapp_reminders findUniqueOrThrow
   */
  export type whatsapp_remindersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_reminders to fetch.
     */
    where: whatsapp_remindersWhereUniqueInput
  }

  /**
   * whatsapp_reminders findFirst
   */
  export type whatsapp_remindersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_reminders to fetch.
     */
    where?: whatsapp_remindersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_reminders to fetch.
     */
    orderBy?: whatsapp_remindersOrderByWithRelationInput | whatsapp_remindersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_reminders.
     */
    cursor?: whatsapp_remindersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_reminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_reminders.
     */
    distinct?: Whatsapp_remindersScalarFieldEnum | Whatsapp_remindersScalarFieldEnum[]
  }

  /**
   * whatsapp_reminders findFirstOrThrow
   */
  export type whatsapp_remindersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_reminders to fetch.
     */
    where?: whatsapp_remindersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_reminders to fetch.
     */
    orderBy?: whatsapp_remindersOrderByWithRelationInput | whatsapp_remindersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsapp_reminders.
     */
    cursor?: whatsapp_remindersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_reminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsapp_reminders.
     */
    distinct?: Whatsapp_remindersScalarFieldEnum | Whatsapp_remindersScalarFieldEnum[]
  }

  /**
   * whatsapp_reminders findMany
   */
  export type whatsapp_remindersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * Filter, which whatsapp_reminders to fetch.
     */
    where?: whatsapp_remindersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsapp_reminders to fetch.
     */
    orderBy?: whatsapp_remindersOrderByWithRelationInput | whatsapp_remindersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing whatsapp_reminders.
     */
    cursor?: whatsapp_remindersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsapp_reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsapp_reminders.
     */
    skip?: number
    distinct?: Whatsapp_remindersScalarFieldEnum | Whatsapp_remindersScalarFieldEnum[]
  }

  /**
   * whatsapp_reminders create
   */
  export type whatsapp_remindersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * The data needed to create a whatsapp_reminders.
     */
    data: XOR<whatsapp_remindersCreateInput, whatsapp_remindersUncheckedCreateInput>
  }

  /**
   * whatsapp_reminders createMany
   */
  export type whatsapp_remindersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many whatsapp_reminders.
     */
    data: whatsapp_remindersCreateManyInput | whatsapp_remindersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * whatsapp_reminders createManyAndReturn
   */
  export type whatsapp_remindersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * The data used to create many whatsapp_reminders.
     */
    data: whatsapp_remindersCreateManyInput | whatsapp_remindersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_reminders update
   */
  export type whatsapp_remindersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * The data needed to update a whatsapp_reminders.
     */
    data: XOR<whatsapp_remindersUpdateInput, whatsapp_remindersUncheckedUpdateInput>
    /**
     * Choose, which whatsapp_reminders to update.
     */
    where: whatsapp_remindersWhereUniqueInput
  }

  /**
   * whatsapp_reminders updateMany
   */
  export type whatsapp_remindersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update whatsapp_reminders.
     */
    data: XOR<whatsapp_remindersUpdateManyMutationInput, whatsapp_remindersUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_reminders to update
     */
    where?: whatsapp_remindersWhereInput
    /**
     * Limit how many whatsapp_reminders to update.
     */
    limit?: number
  }

  /**
   * whatsapp_reminders updateManyAndReturn
   */
  export type whatsapp_remindersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * The data used to update whatsapp_reminders.
     */
    data: XOR<whatsapp_remindersUpdateManyMutationInput, whatsapp_remindersUncheckedUpdateManyInput>
    /**
     * Filter which whatsapp_reminders to update
     */
    where?: whatsapp_remindersWhereInput
    /**
     * Limit how many whatsapp_reminders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsapp_reminders upsert
   */
  export type whatsapp_remindersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * The filter to search for the whatsapp_reminders to update in case it exists.
     */
    where: whatsapp_remindersWhereUniqueInput
    /**
     * In case the whatsapp_reminders found by the `where` argument doesn't exist, create a new whatsapp_reminders with this data.
     */
    create: XOR<whatsapp_remindersCreateInput, whatsapp_remindersUncheckedCreateInput>
    /**
     * In case the whatsapp_reminders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<whatsapp_remindersUpdateInput, whatsapp_remindersUncheckedUpdateInput>
  }

  /**
   * whatsapp_reminders delete
   */
  export type whatsapp_remindersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
    /**
     * Filter which whatsapp_reminders to delete.
     */
    where: whatsapp_remindersWhereUniqueInput
  }

  /**
   * whatsapp_reminders deleteMany
   */
  export type whatsapp_remindersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsapp_reminders to delete
     */
    where?: whatsapp_remindersWhereInput
    /**
     * Limit how many whatsapp_reminders to delete.
     */
    limit?: number
  }

  /**
   * whatsapp_reminders without action
   */
  export type whatsapp_remindersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsapp_reminders
     */
    select?: whatsapp_remindersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the whatsapp_reminders
     */
    omit?: whatsapp_remindersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsapp_remindersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const OrganizacionesScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    ruc: 'ruc',
    direccion: 'direccion',
    telefono: 'telefono',
    email: 'email',
    logo_url: 'logo_url',
    color_primario: 'color_primario',
    color_secundario: 'color_secundario',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type OrganizacionesScalarFieldEnum = (typeof OrganizacionesScalarFieldEnum)[keyof typeof OrganizacionesScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    email: 'email',
    telefono: 'telefono',
    password: 'password',
    created_at: 'created_at',
    updated_at: 'updated_at',
    rol: 'rol',
    apellido: 'apellido',
    consultorio_id: 'consultorio_id',
    googleAccessToken: 'googleAccessToken',
    googleRefreshToken: 'googleRefreshToken',
    googleTokenExpiry: 'googleTokenExpiry',
    googleCalendarId: 'googleCalendarId',
    organizacion_id: 'organizacion_id',
    puede_editar_cobros: 'puede_editar_cobros',
    puede_eliminar_cobros: 'puede_eliminar_cobros',
    puede_gestionar_usuarios: 'puede_gestionar_usuarios',
    puede_ver_historial: 'puede_ver_historial'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const PacientesScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    fecha_nacimiento: 'fecha_nacimiento',
    genero: 'genero',
    direccion: 'direccion',
    telefono: 'telefono',
    email: 'email',
    documento_identidad: 'documento_identidad',
    created_at: 'created_at',
    updated_at: 'updated_at',
    apellido: 'apellido',
    organizacion_id: 'organizacion_id'
  };

  export type PacientesScalarFieldEnum = (typeof PacientesScalarFieldEnum)[keyof typeof PacientesScalarFieldEnum]


  export const ConsultoriosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    direccion: 'direccion',
    created_at: 'created_at',
    updated_at: 'updated_at',
    organizacion_id: 'organizacion_id'
  };

  export type ConsultoriosScalarFieldEnum = (typeof ConsultoriosScalarFieldEnum)[keyof typeof ConsultoriosScalarFieldEnum]


  export const CobrosScalarFieldEnum: {
    id: 'id',
    fecha_cobro: 'fecha_cobro',
    monto_total: 'monto_total',
    notas: 'notas',
    created_at: 'created_at',
    updated_at: 'updated_at',
    paciente_id: 'paciente_id',
    usuario_id: 'usuario_id',
    estado: 'estado',
    metodo_pago: 'metodo_pago'
  };

  export type CobrosScalarFieldEnum = (typeof CobrosScalarFieldEnum)[keyof typeof CobrosScalarFieldEnum]


  export const Cobro_conceptosScalarFieldEnum: {
    id: 'id',
    cantidad: 'cantidad',
    subtotal: 'subtotal',
    created_at: 'created_at',
    updated_at: 'updated_at',
    cobro_id: 'cobro_id',
    consultorio_id: 'consultorio_id',
    precio_unitario: 'precio_unitario',
    servicio_id: 'servicio_id'
  };

  export type Cobro_conceptosScalarFieldEnum = (typeof Cobro_conceptosScalarFieldEnum)[keyof typeof Cobro_conceptosScalarFieldEnum]


  export const Historial_cobrosScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    cobro_id: 'cobro_id',
    detalles_antes: 'detalles_antes',
    detalles_despues: 'detalles_despues',
    tipo_cambio: 'tipo_cambio',
    usuario_id: 'usuario_id'
  };

  export type Historial_cobrosScalarFieldEnum = (typeof Historial_cobrosScalarFieldEnum)[keyof typeof Historial_cobrosScalarFieldEnum]


  export const Metodos_pago_cobroScalarFieldEnum: {
    id: 'id',
    cobro_id: 'cobro_id',
    metodo_pago: 'metodo_pago',
    monto: 'monto',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Metodos_pago_cobroScalarFieldEnum = (typeof Metodos_pago_cobroScalarFieldEnum)[keyof typeof Metodos_pago_cobroScalarFieldEnum]


  export const ServiciosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    precio_base: 'precio_base',
    created_at: 'created_at',
    updated_at: 'updated_at',
    organizacion_id: 'organizacion_id'
  };

  export type ServiciosScalarFieldEnum = (typeof ServiciosScalarFieldEnum)[keyof typeof ServiciosScalarFieldEnum]


  export const Precios_consultorioScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    concepto: 'concepto',
    consultorio_id: 'consultorio_id',
    precio: 'precio'
  };

  export type Precios_consultorioScalarFieldEnum = (typeof Precios_consultorioScalarFieldEnum)[keyof typeof Precios_consultorioScalarFieldEnum]


  export const Configuracion_permisosScalarFieldEnum: {
    id: 'id',
    consultorio_id: 'consultorio_id',
    secretaria_editar_cobros: 'secretaria_editar_cobros',
    secretaria_eliminar_cobros: 'secretaria_eliminar_cobros',
    enfermera_entradas_inventario: 'enfermera_entradas_inventario',
    enfermera_salidas_inventario: 'enfermera_salidas_inventario',
    secretaria_entradas_inventario: 'secretaria_entradas_inventario',
    secretaria_salidas_inventario: 'secretaria_salidas_inventario',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Configuracion_permisosScalarFieldEnum = (typeof Configuracion_permisosScalarFieldEnum)[keyof typeof Configuracion_permisosScalarFieldEnum]


  export const CitasScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descripcion: 'descripcion',
    estado: 'estado',
    paciente_id: 'paciente_id',
    usuario_id: 'usuario_id',
    consultorio_id: 'consultorio_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    color: 'color',
    fecha_fin: 'fecha_fin',
    fecha_inicio: 'fecha_inicio',
    es_recurrente: 'es_recurrente',
    regla_recurrencia: 'regla_recurrencia',
    id_serie: 'id_serie',
    googleEventId: 'googleEventId',
    exdates: 'exdates'
  };

  export type CitasScalarFieldEnum = (typeof CitasScalarFieldEnum)[keyof typeof CitasScalarFieldEnum]


  export const Disponibilidad_medicoScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    dia_semana: 'dia_semana',
    hora_inicio: 'hora_inicio',
    hora_fin: 'hora_fin'
  };

  export type Disponibilidad_medicoScalarFieldEnum = (typeof Disponibilidad_medicoScalarFieldEnum)[keyof typeof Disponibilidad_medicoScalarFieldEnum]


  export const Bloqueo_medicoScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    motivo: 'motivo'
  };

  export type Bloqueo_medicoScalarFieldEnum = (typeof Bloqueo_medicoScalarFieldEnum)[keyof typeof Bloqueo_medicoScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    unit: 'unit',
    description: 'description',
    costPerUnit: 'costPerUnit',
    minStockLevel: 'minStockLevel',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    category: 'category'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const SedeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    address: 'address',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SedeScalarFieldEnum = (typeof SedeScalarFieldEnum)[keyof typeof SedeScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    role: 'role',
    sedeId: 'sedeId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const InventoryUsageScalarFieldEnum: {
    id: 'id',
    nombrePaciente: 'nombrePaciente',
    tipoTratamiento: 'tipoTratamiento',
    observaciones: 'observaciones',
    tuvoReaccion: 'tuvoReaccion',
    descripcionReaccion: 'descripcionReaccion',
    createdAt: 'createdAt',
    sedeId: 'sedeId',
    updatedAt: 'updatedAt',
    userId: 'userId',
    pacienteId: 'pacienteId'
  };

  export type InventoryUsageScalarFieldEnum = (typeof InventoryUsageScalarFieldEnum)[keyof typeof InventoryUsageScalarFieldEnum]


  export const InventoryUsageDetailScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    doses: 'doses',
    frascoLevel: 'frascoLevel',
    inventoryUsageId: 'inventoryUsageId',
    movementId: 'movementId',
    productId: 'productId',
    quantity: 'quantity',
    totalCost: 'totalCost',
    unitCost: 'unitCost',
    units: 'units',
    updatedAt: 'updatedAt'
  };

  export type InventoryUsageDetailScalarFieldEnum = (typeof InventoryUsageDetailScalarFieldEnum)[keyof typeof InventoryUsageDetailScalarFieldEnum]


  export const MovementScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    sedeId: 'sedeId',
    productId: 'productId',
    type: 'type',
    quantity: 'quantity',
    unitCost: 'unitCost',
    totalCost: 'totalCost',
    batchNumber: 'batchNumber',
    expiryDate: 'expiryDate',
    createdAt: 'createdAt'
  };

  export type MovementScalarFieldEnum = (typeof MovementScalarFieldEnum)[keyof typeof MovementScalarFieldEnum]


  export const StockBySedeScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    sedeId: 'sedeId',
    quantity: 'quantity',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type StockBySedeScalarFieldEnum = (typeof StockBySedeScalarFieldEnum)[keyof typeof StockBySedeScalarFieldEnum]


  export const ProductExpirationScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    sedeId: 'sedeId',
    batchNumber: 'batchNumber',
    expiryDate: 'expiryDate',
    quantity: 'quantity',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductExpirationScalarFieldEnum = (typeof ProductExpirationScalarFieldEnum)[keyof typeof ProductExpirationScalarFieldEnum]


  export const AllergenScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    alxoidType: 'alxoidType',
    isAlxoidExclusive: 'isAlxoidExclusive'
  };

  export type AllergenScalarFieldEnum = (typeof AllergenScalarFieldEnum)[keyof typeof AllergenScalarFieldEnum]


  export const ProductAllergenScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    allergenId: 'allergenId',
    mlPerDose: 'mlPerDose',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductAllergenScalarFieldEnum = (typeof ProductAllergenScalarFieldEnum)[keyof typeof ProductAllergenScalarFieldEnum]


  export const SupplierScalarFieldEnum: {
    id: 'id',
    name: 'name',
    invoiceNumber: 'invoiceNumber',
    amountSupplied: 'amountSupplied',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SupplierScalarFieldEnum = (typeof SupplierScalarFieldEnum)[keyof typeof SupplierScalarFieldEnum]


  export const Whatsapp_configScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    whatsapp_business_id: 'whatsapp_business_id',
    phone_number_id: 'phone_number_id',
    access_token: 'access_token',
    webhook_verify_token: 'webhook_verify_token',
    is_active: 'is_active',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Whatsapp_configScalarFieldEnum = (typeof Whatsapp_configScalarFieldEnum)[keyof typeof Whatsapp_configScalarFieldEnum]


  export const Whatsapp_templatesScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    name: 'name',
    language: 'language',
    category: 'category',
    components: 'components',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Whatsapp_templatesScalarFieldEnum = (typeof Whatsapp_templatesScalarFieldEnum)[keyof typeof Whatsapp_templatesScalarFieldEnum]


  export const Whatsapp_messagesScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    paciente_id: 'paciente_id',
    cita_id: 'cita_id',
    template_name: 'template_name',
    message_type: 'message_type',
    content: 'content',
    phone_number: 'phone_number',
    status: 'status',
    whatsapp_message_id: 'whatsapp_message_id',
    error_message: 'error_message',
    sent_at: 'sent_at',
    delivered_at: 'delivered_at',
    read_at: 'read_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Whatsapp_messagesScalarFieldEnum = (typeof Whatsapp_messagesScalarFieldEnum)[keyof typeof Whatsapp_messagesScalarFieldEnum]


  export const Whatsapp_remindersScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    cita_id: 'cita_id',
    template_name: 'template_name',
    reminder_type: 'reminder_type',
    scheduled_time: 'scheduled_time',
    is_sent: 'is_sent',
    sent_at: 'sent_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Whatsapp_remindersScalarFieldEnum = (typeof Whatsapp_remindersScalarFieldEnum)[keyof typeof Whatsapp_remindersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Rol'
   */
  export type EnumRolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Rol'>
    


  /**
   * Reference to a field of type 'Rol[]'
   */
  export type ListEnumRolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Rol[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'EstadoCobro'
   */
  export type EnumEstadoCobroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCobro'>
    


  /**
   * Reference to a field of type 'EstadoCobro[]'
   */
  export type ListEnumEstadoCobroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCobro[]'>
    


  /**
   * Reference to a field of type 'MetodoPago'
   */
  export type EnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago'>
    


  /**
   * Reference to a field of type 'MetodoPago[]'
   */
  export type ListEnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'TipoCambio'
   */
  export type EnumTipoCambioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCambio'>
    


  /**
   * Reference to a field of type 'TipoCambio[]'
   */
  export type ListEnumTipoCambioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCambio[]'>
    


  /**
   * Reference to a field of type 'EstadoCita'
   */
  export type EnumEstadoCitaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCita'>
    


  /**
   * Reference to a field of type 'EstadoCita[]'
   */
  export type ListEnumEstadoCitaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCita[]'>
    


  /**
   * Reference to a field of type 'ProductType'
   */
  export type EnumProductTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductType'>
    


  /**
   * Reference to a field of type 'ProductType[]'
   */
  export type ListEnumProductTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductType[]'>
    


  /**
   * Reference to a field of type 'ProductUnit'
   */
  export type EnumProductUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductUnit'>
    


  /**
   * Reference to a field of type 'ProductUnit[]'
   */
  export type ListEnumProductUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductUnit[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'TipoTratamiento'
   */
  export type EnumTipoTratamientoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoTratamiento'>
    


  /**
   * Reference to a field of type 'TipoTratamiento[]'
   */
  export type ListEnumTipoTratamientoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoTratamiento[]'>
    


  /**
   * Reference to a field of type 'MovementType'
   */
  export type EnumMovementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MovementType'>
    


  /**
   * Reference to a field of type 'MovementType[]'
   */
  export type ListEnumMovementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MovementType[]'>
    


  /**
   * Reference to a field of type 'AlxoidType'
   */
  export type EnumAlxoidTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlxoidType'>
    


  /**
   * Reference to a field of type 'AlxoidType[]'
   */
  export type ListEnumAlxoidTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlxoidType[]'>
    


  /**
   * Reference to a field of type 'WhatsAppMessageStatus'
   */
  export type EnumWhatsAppMessageStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WhatsAppMessageStatus'>
    


  /**
   * Reference to a field of type 'WhatsAppMessageStatus[]'
   */
  export type ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WhatsAppMessageStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type organizacionesWhereInput = {
    AND?: organizacionesWhereInput | organizacionesWhereInput[]
    OR?: organizacionesWhereInput[]
    NOT?: organizacionesWhereInput | organizacionesWhereInput[]
    id?: UuidFilter<"organizaciones"> | string
    nombre?: StringFilter<"organizaciones"> | string
    ruc?: StringNullableFilter<"organizaciones"> | string | null
    direccion?: StringNullableFilter<"organizaciones"> | string | null
    telefono?: StringNullableFilter<"organizaciones"> | string | null
    email?: StringNullableFilter<"organizaciones"> | string | null
    logo_url?: StringNullableFilter<"organizaciones"> | string | null
    color_primario?: StringNullableFilter<"organizaciones"> | string | null
    color_secundario?: StringNullableFilter<"organizaciones"> | string | null
    created_at?: DateTimeNullableFilter<"organizaciones"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"organizaciones"> | Date | string | null
    consultorios?: ConsultoriosListRelationFilter
    pacientes?: PacientesListRelationFilter
    servicios?: ServiciosListRelationFilter
    usuarios?: UsuariosListRelationFilter
  }

  export type organizacionesOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    logo_url?: SortOrderInput | SortOrder
    color_primario?: SortOrderInput | SortOrder
    color_secundario?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    consultorios?: consultoriosOrderByRelationAggregateInput
    pacientes?: pacientesOrderByRelationAggregateInput
    servicios?: serviciosOrderByRelationAggregateInput
    usuarios?: usuariosOrderByRelationAggregateInput
  }

  export type organizacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: organizacionesWhereInput | organizacionesWhereInput[]
    OR?: organizacionesWhereInput[]
    NOT?: organizacionesWhereInput | organizacionesWhereInput[]
    nombre?: StringFilter<"organizaciones"> | string
    ruc?: StringNullableFilter<"organizaciones"> | string | null
    direccion?: StringNullableFilter<"organizaciones"> | string | null
    telefono?: StringNullableFilter<"organizaciones"> | string | null
    email?: StringNullableFilter<"organizaciones"> | string | null
    logo_url?: StringNullableFilter<"organizaciones"> | string | null
    color_primario?: StringNullableFilter<"organizaciones"> | string | null
    color_secundario?: StringNullableFilter<"organizaciones"> | string | null
    created_at?: DateTimeNullableFilter<"organizaciones"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"organizaciones"> | Date | string | null
    consultorios?: ConsultoriosListRelationFilter
    pacientes?: PacientesListRelationFilter
    servicios?: ServiciosListRelationFilter
    usuarios?: UsuariosListRelationFilter
  }, "id">

  export type organizacionesOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    logo_url?: SortOrderInput | SortOrder
    color_primario?: SortOrderInput | SortOrder
    color_secundario?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: organizacionesCountOrderByAggregateInput
    _max?: organizacionesMaxOrderByAggregateInput
    _min?: organizacionesMinOrderByAggregateInput
  }

  export type organizacionesScalarWhereWithAggregatesInput = {
    AND?: organizacionesScalarWhereWithAggregatesInput | organizacionesScalarWhereWithAggregatesInput[]
    OR?: organizacionesScalarWhereWithAggregatesInput[]
    NOT?: organizacionesScalarWhereWithAggregatesInput | organizacionesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"organizaciones"> | string
    nombre?: StringWithAggregatesFilter<"organizaciones"> | string
    ruc?: StringNullableWithAggregatesFilter<"organizaciones"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"organizaciones"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"organizaciones"> | string | null
    email?: StringNullableWithAggregatesFilter<"organizaciones"> | string | null
    logo_url?: StringNullableWithAggregatesFilter<"organizaciones"> | string | null
    color_primario?: StringNullableWithAggregatesFilter<"organizaciones"> | string | null
    color_secundario?: StringNullableWithAggregatesFilter<"organizaciones"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"organizaciones"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"organizaciones"> | Date | string | null
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    id?: StringFilter<"usuarios"> | string
    nombre?: StringFilter<"usuarios"> | string
    email?: StringFilter<"usuarios"> | string
    telefono?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    created_at?: DateTimeFilter<"usuarios"> | Date | string
    updated_at?: DateTimeFilter<"usuarios"> | Date | string
    rol?: EnumRolFilter<"usuarios"> | $Enums.Rol
    apellido?: StringFilter<"usuarios"> | string
    consultorio_id?: StringFilter<"usuarios"> | string
    googleAccessToken?: StringNullableFilter<"usuarios"> | string | null
    googleRefreshToken?: StringNullableFilter<"usuarios"> | string | null
    googleTokenExpiry?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    googleCalendarId?: StringNullableFilter<"usuarios"> | string | null
    organizacion_id?: UuidFilter<"usuarios"> | string
    puede_editar_cobros?: BoolFilter<"usuarios"> | boolean
    puede_eliminar_cobros?: BoolFilter<"usuarios"> | boolean
    puede_gestionar_usuarios?: BoolFilter<"usuarios"> | boolean
    puede_ver_historial?: BoolFilter<"usuarios"> | boolean
    citas?: CitasListRelationFilter
    cobros?: CobrosListRelationFilter
    disponibilidad_medico?: Disponibilidad_medicoListRelationFilter
    historial_cobros?: Historial_cobrosListRelationFilter
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
    whatsapp_config?: XOR<Whatsapp_configNullableScalarRelationFilter, whatsapp_configWhereInput> | null
    whatsapp_messages?: Whatsapp_messagesListRelationFilter
    whatsapp_reminders?: Whatsapp_remindersListRelationFilter
    whatsapp_templates?: Whatsapp_templatesListRelationFilter
  }

  export type usuariosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    rol?: SortOrder
    apellido?: SortOrder
    consultorio_id?: SortOrder
    googleAccessToken?: SortOrderInput | SortOrder
    googleRefreshToken?: SortOrderInput | SortOrder
    googleTokenExpiry?: SortOrderInput | SortOrder
    googleCalendarId?: SortOrderInput | SortOrder
    organizacion_id?: SortOrder
    puede_editar_cobros?: SortOrder
    puede_eliminar_cobros?: SortOrder
    puede_gestionar_usuarios?: SortOrder
    puede_ver_historial?: SortOrder
    citas?: citasOrderByRelationAggregateInput
    cobros?: cobrosOrderByRelationAggregateInput
    disponibilidad_medico?: disponibilidad_medicoOrderByRelationAggregateInput
    historial_cobros?: historial_cobrosOrderByRelationAggregateInput
    organizaciones?: organizacionesOrderByWithRelationInput
    consultorios?: consultoriosOrderByWithRelationInput
    whatsapp_config?: whatsapp_configOrderByWithRelationInput
    whatsapp_messages?: whatsapp_messagesOrderByRelationAggregateInput
    whatsapp_reminders?: whatsapp_remindersOrderByRelationAggregateInput
    whatsapp_templates?: whatsapp_templatesOrderByRelationAggregateInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    email_organizacion_id?: usuariosEmailOrganizacion_idCompoundUniqueInput
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    nombre?: StringFilter<"usuarios"> | string
    telefono?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    created_at?: DateTimeFilter<"usuarios"> | Date | string
    updated_at?: DateTimeFilter<"usuarios"> | Date | string
    rol?: EnumRolFilter<"usuarios"> | $Enums.Rol
    apellido?: StringFilter<"usuarios"> | string
    consultorio_id?: StringFilter<"usuarios"> | string
    googleAccessToken?: StringNullableFilter<"usuarios"> | string | null
    googleRefreshToken?: StringNullableFilter<"usuarios"> | string | null
    googleTokenExpiry?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    googleCalendarId?: StringNullableFilter<"usuarios"> | string | null
    organizacion_id?: UuidFilter<"usuarios"> | string
    puede_editar_cobros?: BoolFilter<"usuarios"> | boolean
    puede_eliminar_cobros?: BoolFilter<"usuarios"> | boolean
    puede_gestionar_usuarios?: BoolFilter<"usuarios"> | boolean
    puede_ver_historial?: BoolFilter<"usuarios"> | boolean
    citas?: CitasListRelationFilter
    cobros?: CobrosListRelationFilter
    disponibilidad_medico?: Disponibilidad_medicoListRelationFilter
    historial_cobros?: Historial_cobrosListRelationFilter
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
    whatsapp_config?: XOR<Whatsapp_configNullableScalarRelationFilter, whatsapp_configWhereInput> | null
    whatsapp_messages?: Whatsapp_messagesListRelationFilter
    whatsapp_reminders?: Whatsapp_remindersListRelationFilter
    whatsapp_templates?: Whatsapp_templatesListRelationFilter
  }, "id" | "email" | "email_organizacion_id">

  export type usuariosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    rol?: SortOrder
    apellido?: SortOrder
    consultorio_id?: SortOrder
    googleAccessToken?: SortOrderInput | SortOrder
    googleRefreshToken?: SortOrderInput | SortOrder
    googleTokenExpiry?: SortOrderInput | SortOrder
    googleCalendarId?: SortOrderInput | SortOrder
    organizacion_id?: SortOrder
    puede_editar_cobros?: SortOrder
    puede_eliminar_cobros?: SortOrder
    puede_gestionar_usuarios?: SortOrder
    puede_ver_historial?: SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"usuarios"> | string
    nombre?: StringWithAggregatesFilter<"usuarios"> | string
    email?: StringWithAggregatesFilter<"usuarios"> | string
    telefono?: StringWithAggregatesFilter<"usuarios"> | string
    password?: StringWithAggregatesFilter<"usuarios"> | string
    created_at?: DateTimeWithAggregatesFilter<"usuarios"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"usuarios"> | Date | string
    rol?: EnumRolWithAggregatesFilter<"usuarios"> | $Enums.Rol
    apellido?: StringWithAggregatesFilter<"usuarios"> | string
    consultorio_id?: StringWithAggregatesFilter<"usuarios"> | string
    googleAccessToken?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    googleRefreshToken?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    googleTokenExpiry?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
    googleCalendarId?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    organizacion_id?: UuidWithAggregatesFilter<"usuarios"> | string
    puede_editar_cobros?: BoolWithAggregatesFilter<"usuarios"> | boolean
    puede_eliminar_cobros?: BoolWithAggregatesFilter<"usuarios"> | boolean
    puede_gestionar_usuarios?: BoolWithAggregatesFilter<"usuarios"> | boolean
    puede_ver_historial?: BoolWithAggregatesFilter<"usuarios"> | boolean
  }

  export type pacientesWhereInput = {
    AND?: pacientesWhereInput | pacientesWhereInput[]
    OR?: pacientesWhereInput[]
    NOT?: pacientesWhereInput | pacientesWhereInput[]
    id?: StringFilter<"pacientes"> | string
    nombre?: StringFilter<"pacientes"> | string
    fecha_nacimiento?: DateTimeFilter<"pacientes"> | Date | string
    genero?: StringFilter<"pacientes"> | string
    direccion?: StringNullableFilter<"pacientes"> | string | null
    telefono?: StringFilter<"pacientes"> | string
    email?: StringFilter<"pacientes"> | string
    documento_identidad?: StringNullableFilter<"pacientes"> | string | null
    created_at?: DateTimeFilter<"pacientes"> | Date | string
    updated_at?: DateTimeFilter<"pacientes"> | Date | string
    apellido?: StringFilter<"pacientes"> | string
    organizacion_id?: UuidFilter<"pacientes"> | string
    InventoryUsage?: InventoryUsageListRelationFilter
    citas?: CitasListRelationFilter
    cobros?: CobrosListRelationFilter
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
    whatsapp_messages?: Whatsapp_messagesListRelationFilter
  }

  export type pacientesOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fecha_nacimiento?: SortOrder
    genero?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrder
    email?: SortOrder
    documento_identidad?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    apellido?: SortOrder
    organizacion_id?: SortOrder
    InventoryUsage?: InventoryUsageOrderByRelationAggregateInput
    citas?: citasOrderByRelationAggregateInput
    cobros?: cobrosOrderByRelationAggregateInput
    organizaciones?: organizacionesOrderByWithRelationInput
    whatsapp_messages?: whatsapp_messagesOrderByRelationAggregateInput
  }

  export type pacientesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email_organizacion_id?: pacientesEmailOrganizacion_idCompoundUniqueInput
    AND?: pacientesWhereInput | pacientesWhereInput[]
    OR?: pacientesWhereInput[]
    NOT?: pacientesWhereInput | pacientesWhereInput[]
    nombre?: StringFilter<"pacientes"> | string
    fecha_nacimiento?: DateTimeFilter<"pacientes"> | Date | string
    genero?: StringFilter<"pacientes"> | string
    direccion?: StringNullableFilter<"pacientes"> | string | null
    telefono?: StringFilter<"pacientes"> | string
    email?: StringFilter<"pacientes"> | string
    documento_identidad?: StringNullableFilter<"pacientes"> | string | null
    created_at?: DateTimeFilter<"pacientes"> | Date | string
    updated_at?: DateTimeFilter<"pacientes"> | Date | string
    apellido?: StringFilter<"pacientes"> | string
    organizacion_id?: UuidFilter<"pacientes"> | string
    InventoryUsage?: InventoryUsageListRelationFilter
    citas?: CitasListRelationFilter
    cobros?: CobrosListRelationFilter
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
    whatsapp_messages?: Whatsapp_messagesListRelationFilter
  }, "id" | "email_organizacion_id">

  export type pacientesOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fecha_nacimiento?: SortOrder
    genero?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrder
    email?: SortOrder
    documento_identidad?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    apellido?: SortOrder
    organizacion_id?: SortOrder
    _count?: pacientesCountOrderByAggregateInput
    _max?: pacientesMaxOrderByAggregateInput
    _min?: pacientesMinOrderByAggregateInput
  }

  export type pacientesScalarWhereWithAggregatesInput = {
    AND?: pacientesScalarWhereWithAggregatesInput | pacientesScalarWhereWithAggregatesInput[]
    OR?: pacientesScalarWhereWithAggregatesInput[]
    NOT?: pacientesScalarWhereWithAggregatesInput | pacientesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"pacientes"> | string
    nombre?: StringWithAggregatesFilter<"pacientes"> | string
    fecha_nacimiento?: DateTimeWithAggregatesFilter<"pacientes"> | Date | string
    genero?: StringWithAggregatesFilter<"pacientes"> | string
    direccion?: StringNullableWithAggregatesFilter<"pacientes"> | string | null
    telefono?: StringWithAggregatesFilter<"pacientes"> | string
    email?: StringWithAggregatesFilter<"pacientes"> | string
    documento_identidad?: StringNullableWithAggregatesFilter<"pacientes"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"pacientes"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"pacientes"> | Date | string
    apellido?: StringWithAggregatesFilter<"pacientes"> | string
    organizacion_id?: UuidWithAggregatesFilter<"pacientes"> | string
  }

  export type consultoriosWhereInput = {
    AND?: consultoriosWhereInput | consultoriosWhereInput[]
    OR?: consultoriosWhereInput[]
    NOT?: consultoriosWhereInput | consultoriosWhereInput[]
    id?: StringFilter<"consultorios"> | string
    nombre?: StringFilter<"consultorios"> | string
    direccion?: StringFilter<"consultorios"> | string
    created_at?: DateTimeFilter<"consultorios"> | Date | string
    updated_at?: DateTimeFilter<"consultorios"> | Date | string
    organizacion_id?: UuidFilter<"consultorios"> | string
    citas?: CitasListRelationFilter
    cobro_conceptos?: Cobro_conceptosListRelationFilter
    configuracion_permisos?: XOR<Configuracion_permisosNullableScalarRelationFilter, configuracion_permisosWhereInput> | null
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
    precios_consultorio?: Precios_consultorioListRelationFilter
    usuarios?: UsuariosListRelationFilter
  }

  export type consultoriosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
    citas?: citasOrderByRelationAggregateInput
    cobro_conceptos?: cobro_conceptosOrderByRelationAggregateInput
    configuracion_permisos?: configuracion_permisosOrderByWithRelationInput
    organizaciones?: organizacionesOrderByWithRelationInput
    precios_consultorio?: precios_consultorioOrderByRelationAggregateInput
    usuarios?: usuariosOrderByRelationAggregateInput
  }

  export type consultoriosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: consultoriosWhereInput | consultoriosWhereInput[]
    OR?: consultoriosWhereInput[]
    NOT?: consultoriosWhereInput | consultoriosWhereInput[]
    nombre?: StringFilter<"consultorios"> | string
    direccion?: StringFilter<"consultorios"> | string
    created_at?: DateTimeFilter<"consultorios"> | Date | string
    updated_at?: DateTimeFilter<"consultorios"> | Date | string
    organizacion_id?: UuidFilter<"consultorios"> | string
    citas?: CitasListRelationFilter
    cobro_conceptos?: Cobro_conceptosListRelationFilter
    configuracion_permisos?: XOR<Configuracion_permisosNullableScalarRelationFilter, configuracion_permisosWhereInput> | null
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
    precios_consultorio?: Precios_consultorioListRelationFilter
    usuarios?: UsuariosListRelationFilter
  }, "id">

  export type consultoriosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
    _count?: consultoriosCountOrderByAggregateInput
    _max?: consultoriosMaxOrderByAggregateInput
    _min?: consultoriosMinOrderByAggregateInput
  }

  export type consultoriosScalarWhereWithAggregatesInput = {
    AND?: consultoriosScalarWhereWithAggregatesInput | consultoriosScalarWhereWithAggregatesInput[]
    OR?: consultoriosScalarWhereWithAggregatesInput[]
    NOT?: consultoriosScalarWhereWithAggregatesInput | consultoriosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"consultorios"> | string
    nombre?: StringWithAggregatesFilter<"consultorios"> | string
    direccion?: StringWithAggregatesFilter<"consultorios"> | string
    created_at?: DateTimeWithAggregatesFilter<"consultorios"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"consultorios"> | Date | string
    organizacion_id?: UuidWithAggregatesFilter<"consultorios"> | string
  }

  export type cobrosWhereInput = {
    AND?: cobrosWhereInput | cobrosWhereInput[]
    OR?: cobrosWhereInput[]
    NOT?: cobrosWhereInput | cobrosWhereInput[]
    id?: StringFilter<"cobros"> | string
    fecha_cobro?: DateTimeFilter<"cobros"> | Date | string
    monto_total?: FloatFilter<"cobros"> | number
    notas?: StringNullableFilter<"cobros"> | string | null
    created_at?: DateTimeFilter<"cobros"> | Date | string
    updated_at?: DateTimeFilter<"cobros"> | Date | string
    paciente_id?: StringFilter<"cobros"> | string
    usuario_id?: StringFilter<"cobros"> | string
    estado?: EnumEstadoCobroFilter<"cobros"> | $Enums.EstadoCobro
    metodo_pago?: EnumMetodoPagoNullableFilter<"cobros"> | $Enums.MetodoPago | null
    cobro_conceptos?: Cobro_conceptosListRelationFilter
    pacientes?: XOR<PacientesScalarRelationFilter, pacientesWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    historial_cobros?: Historial_cobrosListRelationFilter
    metodos_pago_cobro?: Metodos_pago_cobroListRelationFilter
  }

  export type cobrosOrderByWithRelationInput = {
    id?: SortOrder
    fecha_cobro?: SortOrder
    monto_total?: SortOrder
    notas?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    estado?: SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    cobro_conceptos?: cobro_conceptosOrderByRelationAggregateInput
    pacientes?: pacientesOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
    historial_cobros?: historial_cobrosOrderByRelationAggregateInput
    metodos_pago_cobro?: metodos_pago_cobroOrderByRelationAggregateInput
  }

  export type cobrosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cobrosWhereInput | cobrosWhereInput[]
    OR?: cobrosWhereInput[]
    NOT?: cobrosWhereInput | cobrosWhereInput[]
    fecha_cobro?: DateTimeFilter<"cobros"> | Date | string
    monto_total?: FloatFilter<"cobros"> | number
    notas?: StringNullableFilter<"cobros"> | string | null
    created_at?: DateTimeFilter<"cobros"> | Date | string
    updated_at?: DateTimeFilter<"cobros"> | Date | string
    paciente_id?: StringFilter<"cobros"> | string
    usuario_id?: StringFilter<"cobros"> | string
    estado?: EnumEstadoCobroFilter<"cobros"> | $Enums.EstadoCobro
    metodo_pago?: EnumMetodoPagoNullableFilter<"cobros"> | $Enums.MetodoPago | null
    cobro_conceptos?: Cobro_conceptosListRelationFilter
    pacientes?: XOR<PacientesScalarRelationFilter, pacientesWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    historial_cobros?: Historial_cobrosListRelationFilter
    metodos_pago_cobro?: Metodos_pago_cobroListRelationFilter
  }, "id">

  export type cobrosOrderByWithAggregationInput = {
    id?: SortOrder
    fecha_cobro?: SortOrder
    monto_total?: SortOrder
    notas?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    estado?: SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    _count?: cobrosCountOrderByAggregateInput
    _avg?: cobrosAvgOrderByAggregateInput
    _max?: cobrosMaxOrderByAggregateInput
    _min?: cobrosMinOrderByAggregateInput
    _sum?: cobrosSumOrderByAggregateInput
  }

  export type cobrosScalarWhereWithAggregatesInput = {
    AND?: cobrosScalarWhereWithAggregatesInput | cobrosScalarWhereWithAggregatesInput[]
    OR?: cobrosScalarWhereWithAggregatesInput[]
    NOT?: cobrosScalarWhereWithAggregatesInput | cobrosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cobros"> | string
    fecha_cobro?: DateTimeWithAggregatesFilter<"cobros"> | Date | string
    monto_total?: FloatWithAggregatesFilter<"cobros"> | number
    notas?: StringNullableWithAggregatesFilter<"cobros"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"cobros"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"cobros"> | Date | string
    paciente_id?: StringWithAggregatesFilter<"cobros"> | string
    usuario_id?: StringWithAggregatesFilter<"cobros"> | string
    estado?: EnumEstadoCobroWithAggregatesFilter<"cobros"> | $Enums.EstadoCobro
    metodo_pago?: EnumMetodoPagoNullableWithAggregatesFilter<"cobros"> | $Enums.MetodoPago | null
  }

  export type cobro_conceptosWhereInput = {
    AND?: cobro_conceptosWhereInput | cobro_conceptosWhereInput[]
    OR?: cobro_conceptosWhereInput[]
    NOT?: cobro_conceptosWhereInput | cobro_conceptosWhereInput[]
    id?: StringFilter<"cobro_conceptos"> | string
    cantidad?: IntFilter<"cobro_conceptos"> | number
    subtotal?: FloatFilter<"cobro_conceptos"> | number
    created_at?: DateTimeFilter<"cobro_conceptos"> | Date | string
    updated_at?: DateTimeFilter<"cobro_conceptos"> | Date | string
    cobro_id?: StringFilter<"cobro_conceptos"> | string
    consultorio_id?: StringFilter<"cobro_conceptos"> | string
    precio_unitario?: FloatFilter<"cobro_conceptos"> | number
    servicio_id?: StringFilter<"cobro_conceptos"> | string
    cobros?: XOR<CobrosScalarRelationFilter, cobrosWhereInput>
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
    servicios?: XOR<ServiciosScalarRelationFilter, serviciosWhereInput>
  }

  export type cobro_conceptosOrderByWithRelationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    subtotal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cobro_id?: SortOrder
    consultorio_id?: SortOrder
    precio_unitario?: SortOrder
    servicio_id?: SortOrder
    cobros?: cobrosOrderByWithRelationInput
    consultorios?: consultoriosOrderByWithRelationInput
    servicios?: serviciosOrderByWithRelationInput
  }

  export type cobro_conceptosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cobro_conceptosWhereInput | cobro_conceptosWhereInput[]
    OR?: cobro_conceptosWhereInput[]
    NOT?: cobro_conceptosWhereInput | cobro_conceptosWhereInput[]
    cantidad?: IntFilter<"cobro_conceptos"> | number
    subtotal?: FloatFilter<"cobro_conceptos"> | number
    created_at?: DateTimeFilter<"cobro_conceptos"> | Date | string
    updated_at?: DateTimeFilter<"cobro_conceptos"> | Date | string
    cobro_id?: StringFilter<"cobro_conceptos"> | string
    consultorio_id?: StringFilter<"cobro_conceptos"> | string
    precio_unitario?: FloatFilter<"cobro_conceptos"> | number
    servicio_id?: StringFilter<"cobro_conceptos"> | string
    cobros?: XOR<CobrosScalarRelationFilter, cobrosWhereInput>
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
    servicios?: XOR<ServiciosScalarRelationFilter, serviciosWhereInput>
  }, "id">

  export type cobro_conceptosOrderByWithAggregationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    subtotal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cobro_id?: SortOrder
    consultorio_id?: SortOrder
    precio_unitario?: SortOrder
    servicio_id?: SortOrder
    _count?: cobro_conceptosCountOrderByAggregateInput
    _avg?: cobro_conceptosAvgOrderByAggregateInput
    _max?: cobro_conceptosMaxOrderByAggregateInput
    _min?: cobro_conceptosMinOrderByAggregateInput
    _sum?: cobro_conceptosSumOrderByAggregateInput
  }

  export type cobro_conceptosScalarWhereWithAggregatesInput = {
    AND?: cobro_conceptosScalarWhereWithAggregatesInput | cobro_conceptosScalarWhereWithAggregatesInput[]
    OR?: cobro_conceptosScalarWhereWithAggregatesInput[]
    NOT?: cobro_conceptosScalarWhereWithAggregatesInput | cobro_conceptosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cobro_conceptos"> | string
    cantidad?: IntWithAggregatesFilter<"cobro_conceptos"> | number
    subtotal?: FloatWithAggregatesFilter<"cobro_conceptos"> | number
    created_at?: DateTimeWithAggregatesFilter<"cobro_conceptos"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"cobro_conceptos"> | Date | string
    cobro_id?: StringWithAggregatesFilter<"cobro_conceptos"> | string
    consultorio_id?: StringWithAggregatesFilter<"cobro_conceptos"> | string
    precio_unitario?: FloatWithAggregatesFilter<"cobro_conceptos"> | number
    servicio_id?: StringWithAggregatesFilter<"cobro_conceptos"> | string
  }

  export type historial_cobrosWhereInput = {
    AND?: historial_cobrosWhereInput | historial_cobrosWhereInput[]
    OR?: historial_cobrosWhereInput[]
    NOT?: historial_cobrosWhereInput | historial_cobrosWhereInput[]
    id?: StringFilter<"historial_cobros"> | string
    created_at?: DateTimeFilter<"historial_cobros"> | Date | string
    cobro_id?: StringFilter<"historial_cobros"> | string
    detalles_antes?: JsonNullableFilter<"historial_cobros">
    detalles_despues?: JsonFilter<"historial_cobros">
    tipo_cambio?: EnumTipoCambioFilter<"historial_cobros"> | $Enums.TipoCambio
    usuario_id?: StringFilter<"historial_cobros"> | string
    cobros?: XOR<CobrosScalarRelationFilter, cobrosWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type historial_cobrosOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    cobro_id?: SortOrder
    detalles_antes?: SortOrderInput | SortOrder
    detalles_despues?: SortOrder
    tipo_cambio?: SortOrder
    usuario_id?: SortOrder
    cobros?: cobrosOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type historial_cobrosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: historial_cobrosWhereInput | historial_cobrosWhereInput[]
    OR?: historial_cobrosWhereInput[]
    NOT?: historial_cobrosWhereInput | historial_cobrosWhereInput[]
    created_at?: DateTimeFilter<"historial_cobros"> | Date | string
    cobro_id?: StringFilter<"historial_cobros"> | string
    detalles_antes?: JsonNullableFilter<"historial_cobros">
    detalles_despues?: JsonFilter<"historial_cobros">
    tipo_cambio?: EnumTipoCambioFilter<"historial_cobros"> | $Enums.TipoCambio
    usuario_id?: StringFilter<"historial_cobros"> | string
    cobros?: XOR<CobrosScalarRelationFilter, cobrosWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id">

  export type historial_cobrosOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    cobro_id?: SortOrder
    detalles_antes?: SortOrderInput | SortOrder
    detalles_despues?: SortOrder
    tipo_cambio?: SortOrder
    usuario_id?: SortOrder
    _count?: historial_cobrosCountOrderByAggregateInput
    _max?: historial_cobrosMaxOrderByAggregateInput
    _min?: historial_cobrosMinOrderByAggregateInput
  }

  export type historial_cobrosScalarWhereWithAggregatesInput = {
    AND?: historial_cobrosScalarWhereWithAggregatesInput | historial_cobrosScalarWhereWithAggregatesInput[]
    OR?: historial_cobrosScalarWhereWithAggregatesInput[]
    NOT?: historial_cobrosScalarWhereWithAggregatesInput | historial_cobrosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"historial_cobros"> | string
    created_at?: DateTimeWithAggregatesFilter<"historial_cobros"> | Date | string
    cobro_id?: StringWithAggregatesFilter<"historial_cobros"> | string
    detalles_antes?: JsonNullableWithAggregatesFilter<"historial_cobros">
    detalles_despues?: JsonWithAggregatesFilter<"historial_cobros">
    tipo_cambio?: EnumTipoCambioWithAggregatesFilter<"historial_cobros"> | $Enums.TipoCambio
    usuario_id?: StringWithAggregatesFilter<"historial_cobros"> | string
  }

  export type metodos_pago_cobroWhereInput = {
    AND?: metodos_pago_cobroWhereInput | metodos_pago_cobroWhereInput[]
    OR?: metodos_pago_cobroWhereInput[]
    NOT?: metodos_pago_cobroWhereInput | metodos_pago_cobroWhereInput[]
    id?: StringFilter<"metodos_pago_cobro"> | string
    cobro_id?: StringFilter<"metodos_pago_cobro"> | string
    metodo_pago?: EnumMetodoPagoFilter<"metodos_pago_cobro"> | $Enums.MetodoPago
    monto?: FloatFilter<"metodos_pago_cobro"> | number
    created_at?: DateTimeFilter<"metodos_pago_cobro"> | Date | string
    updated_at?: DateTimeFilter<"metodos_pago_cobro"> | Date | string
    cobros?: XOR<CobrosScalarRelationFilter, cobrosWhereInput>
  }

  export type metodos_pago_cobroOrderByWithRelationInput = {
    id?: SortOrder
    cobro_id?: SortOrder
    metodo_pago?: SortOrder
    monto?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cobros?: cobrosOrderByWithRelationInput
  }

  export type metodos_pago_cobroWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: metodos_pago_cobroWhereInput | metodos_pago_cobroWhereInput[]
    OR?: metodos_pago_cobroWhereInput[]
    NOT?: metodos_pago_cobroWhereInput | metodos_pago_cobroWhereInput[]
    cobro_id?: StringFilter<"metodos_pago_cobro"> | string
    metodo_pago?: EnumMetodoPagoFilter<"metodos_pago_cobro"> | $Enums.MetodoPago
    monto?: FloatFilter<"metodos_pago_cobro"> | number
    created_at?: DateTimeFilter<"metodos_pago_cobro"> | Date | string
    updated_at?: DateTimeFilter<"metodos_pago_cobro"> | Date | string
    cobros?: XOR<CobrosScalarRelationFilter, cobrosWhereInput>
  }, "id">

  export type metodos_pago_cobroOrderByWithAggregationInput = {
    id?: SortOrder
    cobro_id?: SortOrder
    metodo_pago?: SortOrder
    monto?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: metodos_pago_cobroCountOrderByAggregateInput
    _avg?: metodos_pago_cobroAvgOrderByAggregateInput
    _max?: metodos_pago_cobroMaxOrderByAggregateInput
    _min?: metodos_pago_cobroMinOrderByAggregateInput
    _sum?: metodos_pago_cobroSumOrderByAggregateInput
  }

  export type metodos_pago_cobroScalarWhereWithAggregatesInput = {
    AND?: metodos_pago_cobroScalarWhereWithAggregatesInput | metodos_pago_cobroScalarWhereWithAggregatesInput[]
    OR?: metodos_pago_cobroScalarWhereWithAggregatesInput[]
    NOT?: metodos_pago_cobroScalarWhereWithAggregatesInput | metodos_pago_cobroScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"metodos_pago_cobro"> | string
    cobro_id?: StringWithAggregatesFilter<"metodos_pago_cobro"> | string
    metodo_pago?: EnumMetodoPagoWithAggregatesFilter<"metodos_pago_cobro"> | $Enums.MetodoPago
    monto?: FloatWithAggregatesFilter<"metodos_pago_cobro"> | number
    created_at?: DateTimeWithAggregatesFilter<"metodos_pago_cobro"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"metodos_pago_cobro"> | Date | string
  }

  export type serviciosWhereInput = {
    AND?: serviciosWhereInput | serviciosWhereInput[]
    OR?: serviciosWhereInput[]
    NOT?: serviciosWhereInput | serviciosWhereInput[]
    id?: StringFilter<"servicios"> | string
    nombre?: StringFilter<"servicios"> | string
    descripcion?: StringNullableFilter<"servicios"> | string | null
    precio_base?: FloatFilter<"servicios"> | number
    created_at?: DateTimeFilter<"servicios"> | Date | string
    updated_at?: DateTimeFilter<"servicios"> | Date | string
    organizacion_id?: UuidFilter<"servicios"> | string
    cobro_conceptos?: Cobro_conceptosListRelationFilter
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
  }

  export type serviciosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio_base?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
    cobro_conceptos?: cobro_conceptosOrderByRelationAggregateInput
    organizaciones?: organizacionesOrderByWithRelationInput
  }

  export type serviciosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: serviciosWhereInput | serviciosWhereInput[]
    OR?: serviciosWhereInput[]
    NOT?: serviciosWhereInput | serviciosWhereInput[]
    nombre?: StringFilter<"servicios"> | string
    descripcion?: StringNullableFilter<"servicios"> | string | null
    precio_base?: FloatFilter<"servicios"> | number
    created_at?: DateTimeFilter<"servicios"> | Date | string
    updated_at?: DateTimeFilter<"servicios"> | Date | string
    organizacion_id?: UuidFilter<"servicios"> | string
    cobro_conceptos?: Cobro_conceptosListRelationFilter
    organizaciones?: XOR<OrganizacionesScalarRelationFilter, organizacionesWhereInput>
  }, "id">

  export type serviciosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio_base?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
    _count?: serviciosCountOrderByAggregateInput
    _avg?: serviciosAvgOrderByAggregateInput
    _max?: serviciosMaxOrderByAggregateInput
    _min?: serviciosMinOrderByAggregateInput
    _sum?: serviciosSumOrderByAggregateInput
  }

  export type serviciosScalarWhereWithAggregatesInput = {
    AND?: serviciosScalarWhereWithAggregatesInput | serviciosScalarWhereWithAggregatesInput[]
    OR?: serviciosScalarWhereWithAggregatesInput[]
    NOT?: serviciosScalarWhereWithAggregatesInput | serviciosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"servicios"> | string
    nombre?: StringWithAggregatesFilter<"servicios"> | string
    descripcion?: StringNullableWithAggregatesFilter<"servicios"> | string | null
    precio_base?: FloatWithAggregatesFilter<"servicios"> | number
    created_at?: DateTimeWithAggregatesFilter<"servicios"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"servicios"> | Date | string
    organizacion_id?: UuidWithAggregatesFilter<"servicios"> | string
  }

  export type precios_consultorioWhereInput = {
    AND?: precios_consultorioWhereInput | precios_consultorioWhereInput[]
    OR?: precios_consultorioWhereInput[]
    NOT?: precios_consultorioWhereInput | precios_consultorioWhereInput[]
    id?: StringFilter<"precios_consultorio"> | string
    created_at?: DateTimeFilter<"precios_consultorio"> | Date | string
    updated_at?: DateTimeFilter<"precios_consultorio"> | Date | string
    concepto?: StringFilter<"precios_consultorio"> | string
    consultorio_id?: StringFilter<"precios_consultorio"> | string
    precio?: FloatFilter<"precios_consultorio"> | number
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
  }

  export type precios_consultorioOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    concepto?: SortOrder
    consultorio_id?: SortOrder
    precio?: SortOrder
    consultorios?: consultoriosOrderByWithRelationInput
  }

  export type precios_consultorioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: precios_consultorioWhereInput | precios_consultorioWhereInput[]
    OR?: precios_consultorioWhereInput[]
    NOT?: precios_consultorioWhereInput | precios_consultorioWhereInput[]
    created_at?: DateTimeFilter<"precios_consultorio"> | Date | string
    updated_at?: DateTimeFilter<"precios_consultorio"> | Date | string
    concepto?: StringFilter<"precios_consultorio"> | string
    consultorio_id?: StringFilter<"precios_consultorio"> | string
    precio?: FloatFilter<"precios_consultorio"> | number
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
  }, "id">

  export type precios_consultorioOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    concepto?: SortOrder
    consultorio_id?: SortOrder
    precio?: SortOrder
    _count?: precios_consultorioCountOrderByAggregateInput
    _avg?: precios_consultorioAvgOrderByAggregateInput
    _max?: precios_consultorioMaxOrderByAggregateInput
    _min?: precios_consultorioMinOrderByAggregateInput
    _sum?: precios_consultorioSumOrderByAggregateInput
  }

  export type precios_consultorioScalarWhereWithAggregatesInput = {
    AND?: precios_consultorioScalarWhereWithAggregatesInput | precios_consultorioScalarWhereWithAggregatesInput[]
    OR?: precios_consultorioScalarWhereWithAggregatesInput[]
    NOT?: precios_consultorioScalarWhereWithAggregatesInput | precios_consultorioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"precios_consultorio"> | string
    created_at?: DateTimeWithAggregatesFilter<"precios_consultorio"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"precios_consultorio"> | Date | string
    concepto?: StringWithAggregatesFilter<"precios_consultorio"> | string
    consultorio_id?: StringWithAggregatesFilter<"precios_consultorio"> | string
    precio?: FloatWithAggregatesFilter<"precios_consultorio"> | number
  }

  export type configuracion_permisosWhereInput = {
    AND?: configuracion_permisosWhereInput | configuracion_permisosWhereInput[]
    OR?: configuracion_permisosWhereInput[]
    NOT?: configuracion_permisosWhereInput | configuracion_permisosWhereInput[]
    id?: StringFilter<"configuracion_permisos"> | string
    consultorio_id?: StringFilter<"configuracion_permisos"> | string
    secretaria_editar_cobros?: BoolFilter<"configuracion_permisos"> | boolean
    secretaria_eliminar_cobros?: BoolFilter<"configuracion_permisos"> | boolean
    enfermera_entradas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    enfermera_salidas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    secretaria_entradas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    secretaria_salidas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    created_at?: DateTimeFilter<"configuracion_permisos"> | Date | string
    updated_at?: DateTimeFilter<"configuracion_permisos"> | Date | string
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
  }

  export type configuracion_permisosOrderByWithRelationInput = {
    id?: SortOrder
    consultorio_id?: SortOrder
    secretaria_editar_cobros?: SortOrder
    secretaria_eliminar_cobros?: SortOrder
    enfermera_entradas_inventario?: SortOrder
    enfermera_salidas_inventario?: SortOrder
    secretaria_entradas_inventario?: SortOrder
    secretaria_salidas_inventario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    consultorios?: consultoriosOrderByWithRelationInput
  }

  export type configuracion_permisosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    consultorio_id?: string
    AND?: configuracion_permisosWhereInput | configuracion_permisosWhereInput[]
    OR?: configuracion_permisosWhereInput[]
    NOT?: configuracion_permisosWhereInput | configuracion_permisosWhereInput[]
    secretaria_editar_cobros?: BoolFilter<"configuracion_permisos"> | boolean
    secretaria_eliminar_cobros?: BoolFilter<"configuracion_permisos"> | boolean
    enfermera_entradas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    enfermera_salidas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    secretaria_entradas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    secretaria_salidas_inventario?: BoolFilter<"configuracion_permisos"> | boolean
    created_at?: DateTimeFilter<"configuracion_permisos"> | Date | string
    updated_at?: DateTimeFilter<"configuracion_permisos"> | Date | string
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
  }, "id" | "consultorio_id">

  export type configuracion_permisosOrderByWithAggregationInput = {
    id?: SortOrder
    consultorio_id?: SortOrder
    secretaria_editar_cobros?: SortOrder
    secretaria_eliminar_cobros?: SortOrder
    enfermera_entradas_inventario?: SortOrder
    enfermera_salidas_inventario?: SortOrder
    secretaria_entradas_inventario?: SortOrder
    secretaria_salidas_inventario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: configuracion_permisosCountOrderByAggregateInput
    _max?: configuracion_permisosMaxOrderByAggregateInput
    _min?: configuracion_permisosMinOrderByAggregateInput
  }

  export type configuracion_permisosScalarWhereWithAggregatesInput = {
    AND?: configuracion_permisosScalarWhereWithAggregatesInput | configuracion_permisosScalarWhereWithAggregatesInput[]
    OR?: configuracion_permisosScalarWhereWithAggregatesInput[]
    NOT?: configuracion_permisosScalarWhereWithAggregatesInput | configuracion_permisosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"configuracion_permisos"> | string
    consultorio_id?: StringWithAggregatesFilter<"configuracion_permisos"> | string
    secretaria_editar_cobros?: BoolWithAggregatesFilter<"configuracion_permisos"> | boolean
    secretaria_eliminar_cobros?: BoolWithAggregatesFilter<"configuracion_permisos"> | boolean
    enfermera_entradas_inventario?: BoolWithAggregatesFilter<"configuracion_permisos"> | boolean
    enfermera_salidas_inventario?: BoolWithAggregatesFilter<"configuracion_permisos"> | boolean
    secretaria_entradas_inventario?: BoolWithAggregatesFilter<"configuracion_permisos"> | boolean
    secretaria_salidas_inventario?: BoolWithAggregatesFilter<"configuracion_permisos"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"configuracion_permisos"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"configuracion_permisos"> | Date | string
  }

  export type citasWhereInput = {
    AND?: citasWhereInput | citasWhereInput[]
    OR?: citasWhereInput[]
    NOT?: citasWhereInput | citasWhereInput[]
    id?: StringFilter<"citas"> | string
    titulo?: StringNullableFilter<"citas"> | string | null
    descripcion?: StringNullableFilter<"citas"> | string | null
    estado?: EnumEstadoCitaFilter<"citas"> | $Enums.EstadoCita
    paciente_id?: StringFilter<"citas"> | string
    usuario_id?: StringFilter<"citas"> | string
    consultorio_id?: StringFilter<"citas"> | string
    created_at?: DateTimeFilter<"citas"> | Date | string
    updated_at?: DateTimeFilter<"citas"> | Date | string
    color?: StringNullableFilter<"citas"> | string | null
    fecha_fin?: DateTimeFilter<"citas"> | Date | string
    fecha_inicio?: DateTimeFilter<"citas"> | Date | string
    es_recurrente?: BoolNullableFilter<"citas"> | boolean | null
    regla_recurrencia?: StringNullableFilter<"citas"> | string | null
    id_serie?: StringNullableFilter<"citas"> | string | null
    googleEventId?: StringNullableFilter<"citas"> | string | null
    exdates?: JsonNullableFilter<"citas">
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
    pacientes?: XOR<PacientesScalarRelationFilter, pacientesWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    whatsapp_messages?: Whatsapp_messagesListRelationFilter
    whatsapp_reminders?: Whatsapp_remindersListRelationFilter
  }

  export type citasOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    estado?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    consultorio_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    color?: SortOrderInput | SortOrder
    fecha_fin?: SortOrder
    fecha_inicio?: SortOrder
    es_recurrente?: SortOrderInput | SortOrder
    regla_recurrencia?: SortOrderInput | SortOrder
    id_serie?: SortOrderInput | SortOrder
    googleEventId?: SortOrderInput | SortOrder
    exdates?: SortOrderInput | SortOrder
    consultorios?: consultoriosOrderByWithRelationInput
    pacientes?: pacientesOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
    whatsapp_messages?: whatsapp_messagesOrderByRelationAggregateInput
    whatsapp_reminders?: whatsapp_remindersOrderByRelationAggregateInput
  }

  export type citasWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: citasWhereInput | citasWhereInput[]
    OR?: citasWhereInput[]
    NOT?: citasWhereInput | citasWhereInput[]
    titulo?: StringNullableFilter<"citas"> | string | null
    descripcion?: StringNullableFilter<"citas"> | string | null
    estado?: EnumEstadoCitaFilter<"citas"> | $Enums.EstadoCita
    paciente_id?: StringFilter<"citas"> | string
    usuario_id?: StringFilter<"citas"> | string
    consultorio_id?: StringFilter<"citas"> | string
    created_at?: DateTimeFilter<"citas"> | Date | string
    updated_at?: DateTimeFilter<"citas"> | Date | string
    color?: StringNullableFilter<"citas"> | string | null
    fecha_fin?: DateTimeFilter<"citas"> | Date | string
    fecha_inicio?: DateTimeFilter<"citas"> | Date | string
    es_recurrente?: BoolNullableFilter<"citas"> | boolean | null
    regla_recurrencia?: StringNullableFilter<"citas"> | string | null
    id_serie?: StringNullableFilter<"citas"> | string | null
    googleEventId?: StringNullableFilter<"citas"> | string | null
    exdates?: JsonNullableFilter<"citas">
    consultorios?: XOR<ConsultoriosScalarRelationFilter, consultoriosWhereInput>
    pacientes?: XOR<PacientesScalarRelationFilter, pacientesWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    whatsapp_messages?: Whatsapp_messagesListRelationFilter
    whatsapp_reminders?: Whatsapp_remindersListRelationFilter
  }, "id">

  export type citasOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    estado?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    consultorio_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    color?: SortOrderInput | SortOrder
    fecha_fin?: SortOrder
    fecha_inicio?: SortOrder
    es_recurrente?: SortOrderInput | SortOrder
    regla_recurrencia?: SortOrderInput | SortOrder
    id_serie?: SortOrderInput | SortOrder
    googleEventId?: SortOrderInput | SortOrder
    exdates?: SortOrderInput | SortOrder
    _count?: citasCountOrderByAggregateInput
    _max?: citasMaxOrderByAggregateInput
    _min?: citasMinOrderByAggregateInput
  }

  export type citasScalarWhereWithAggregatesInput = {
    AND?: citasScalarWhereWithAggregatesInput | citasScalarWhereWithAggregatesInput[]
    OR?: citasScalarWhereWithAggregatesInput[]
    NOT?: citasScalarWhereWithAggregatesInput | citasScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"citas"> | string
    titulo?: StringNullableWithAggregatesFilter<"citas"> | string | null
    descripcion?: StringNullableWithAggregatesFilter<"citas"> | string | null
    estado?: EnumEstadoCitaWithAggregatesFilter<"citas"> | $Enums.EstadoCita
    paciente_id?: StringWithAggregatesFilter<"citas"> | string
    usuario_id?: StringWithAggregatesFilter<"citas"> | string
    consultorio_id?: StringWithAggregatesFilter<"citas"> | string
    created_at?: DateTimeWithAggregatesFilter<"citas"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"citas"> | Date | string
    color?: StringNullableWithAggregatesFilter<"citas"> | string | null
    fecha_fin?: DateTimeWithAggregatesFilter<"citas"> | Date | string
    fecha_inicio?: DateTimeWithAggregatesFilter<"citas"> | Date | string
    es_recurrente?: BoolNullableWithAggregatesFilter<"citas"> | boolean | null
    regla_recurrencia?: StringNullableWithAggregatesFilter<"citas"> | string | null
    id_serie?: StringNullableWithAggregatesFilter<"citas"> | string | null
    googleEventId?: StringNullableWithAggregatesFilter<"citas"> | string | null
    exdates?: JsonNullableWithAggregatesFilter<"citas">
  }

  export type disponibilidad_medicoWhereInput = {
    AND?: disponibilidad_medicoWhereInput | disponibilidad_medicoWhereInput[]
    OR?: disponibilidad_medicoWhereInput[]
    NOT?: disponibilidad_medicoWhereInput | disponibilidad_medicoWhereInput[]
    id?: UuidFilter<"disponibilidad_medico"> | string
    usuario_id?: StringFilter<"disponibilidad_medico"> | string
    dia_semana?: IntFilter<"disponibilidad_medico"> | number
    hora_inicio?: StringFilter<"disponibilidad_medico"> | string
    hora_fin?: StringFilter<"disponibilidad_medico"> | string
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type disponibilidad_medicoOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type disponibilidad_medicoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: disponibilidad_medicoWhereInput | disponibilidad_medicoWhereInput[]
    OR?: disponibilidad_medicoWhereInput[]
    NOT?: disponibilidad_medicoWhereInput | disponibilidad_medicoWhereInput[]
    usuario_id?: StringFilter<"disponibilidad_medico"> | string
    dia_semana?: IntFilter<"disponibilidad_medico"> | number
    hora_inicio?: StringFilter<"disponibilidad_medico"> | string
    hora_fin?: StringFilter<"disponibilidad_medico"> | string
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id">

  export type disponibilidad_medicoOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
    _count?: disponibilidad_medicoCountOrderByAggregateInput
    _avg?: disponibilidad_medicoAvgOrderByAggregateInput
    _max?: disponibilidad_medicoMaxOrderByAggregateInput
    _min?: disponibilidad_medicoMinOrderByAggregateInput
    _sum?: disponibilidad_medicoSumOrderByAggregateInput
  }

  export type disponibilidad_medicoScalarWhereWithAggregatesInput = {
    AND?: disponibilidad_medicoScalarWhereWithAggregatesInput | disponibilidad_medicoScalarWhereWithAggregatesInput[]
    OR?: disponibilidad_medicoScalarWhereWithAggregatesInput[]
    NOT?: disponibilidad_medicoScalarWhereWithAggregatesInput | disponibilidad_medicoScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"disponibilidad_medico"> | string
    usuario_id?: StringWithAggregatesFilter<"disponibilidad_medico"> | string
    dia_semana?: IntWithAggregatesFilter<"disponibilidad_medico"> | number
    hora_inicio?: StringWithAggregatesFilter<"disponibilidad_medico"> | string
    hora_fin?: StringWithAggregatesFilter<"disponibilidad_medico"> | string
  }

  export type bloqueo_medicoWhereInput = {
    AND?: bloqueo_medicoWhereInput | bloqueo_medicoWhereInput[]
    OR?: bloqueo_medicoWhereInput[]
    NOT?: bloqueo_medicoWhereInput | bloqueo_medicoWhereInput[]
    id?: UuidFilter<"bloqueo_medico"> | string
    usuario_id?: StringFilter<"bloqueo_medico"> | string
    fecha_inicio?: DateTimeFilter<"bloqueo_medico"> | Date | string
    fecha_fin?: DateTimeFilter<"bloqueo_medico"> | Date | string
    motivo?: StringNullableFilter<"bloqueo_medico"> | string | null
  }

  export type bloqueo_medicoOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrderInput | SortOrder
  }

  export type bloqueo_medicoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: bloqueo_medicoWhereInput | bloqueo_medicoWhereInput[]
    OR?: bloqueo_medicoWhereInput[]
    NOT?: bloqueo_medicoWhereInput | bloqueo_medicoWhereInput[]
    usuario_id?: StringFilter<"bloqueo_medico"> | string
    fecha_inicio?: DateTimeFilter<"bloqueo_medico"> | Date | string
    fecha_fin?: DateTimeFilter<"bloqueo_medico"> | Date | string
    motivo?: StringNullableFilter<"bloqueo_medico"> | string | null
  }, "id">

  export type bloqueo_medicoOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrderInput | SortOrder
    _count?: bloqueo_medicoCountOrderByAggregateInput
    _max?: bloqueo_medicoMaxOrderByAggregateInput
    _min?: bloqueo_medicoMinOrderByAggregateInput
  }

  export type bloqueo_medicoScalarWhereWithAggregatesInput = {
    AND?: bloqueo_medicoScalarWhereWithAggregatesInput | bloqueo_medicoScalarWhereWithAggregatesInput[]
    OR?: bloqueo_medicoScalarWhereWithAggregatesInput[]
    NOT?: bloqueo_medicoScalarWhereWithAggregatesInput | bloqueo_medicoScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"bloqueo_medico"> | string
    usuario_id?: StringWithAggregatesFilter<"bloqueo_medico"> | string
    fecha_inicio?: DateTimeWithAggregatesFilter<"bloqueo_medico"> | Date | string
    fecha_fin?: DateTimeWithAggregatesFilter<"bloqueo_medico"> | Date | string
    motivo?: StringNullableWithAggregatesFilter<"bloqueo_medico"> | string | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    type?: EnumProductTypeFilter<"Product"> | $Enums.ProductType
    unit?: EnumProductUnitFilter<"Product"> | $Enums.ProductUnit
    description?: StringNullableFilter<"Product"> | string | null
    costPerUnit?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    category?: StringNullableFilter<"Product"> | string | null
    InventoryUsageDetail?: InventoryUsageDetailListRelationFilter
    Movement?: MovementListRelationFilter
    ProductAllergen?: ProductAllergenListRelationFilter
    ProductExpiration?: ProductExpirationListRelationFilter
    StockBySede?: StockBySedeListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    unit?: SortOrder
    description?: SortOrderInput | SortOrder
    costPerUnit?: SortOrder
    minStockLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrderInput | SortOrder
    InventoryUsageDetail?: InventoryUsageDetailOrderByRelationAggregateInput
    Movement?: MovementOrderByRelationAggregateInput
    ProductAllergen?: ProductAllergenOrderByRelationAggregateInput
    ProductExpiration?: ProductExpirationOrderByRelationAggregateInput
    StockBySede?: StockBySedeOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    name?: StringFilter<"Product"> | string
    type?: EnumProductTypeFilter<"Product"> | $Enums.ProductType
    unit?: EnumProductUnitFilter<"Product"> | $Enums.ProductUnit
    description?: StringNullableFilter<"Product"> | string | null
    costPerUnit?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    category?: StringNullableFilter<"Product"> | string | null
    InventoryUsageDetail?: InventoryUsageDetailListRelationFilter
    Movement?: MovementListRelationFilter
    ProductAllergen?: ProductAllergenListRelationFilter
    ProductExpiration?: ProductExpirationListRelationFilter
    StockBySede?: StockBySedeListRelationFilter
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    unit?: SortOrder
    description?: SortOrderInput | SortOrder
    costPerUnit?: SortOrder
    minStockLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    type?: EnumProductTypeWithAggregatesFilter<"Product"> | $Enums.ProductType
    unit?: EnumProductUnitWithAggregatesFilter<"Product"> | $Enums.ProductUnit
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    costPerUnit?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntWithAggregatesFilter<"Product"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    category?: StringNullableWithAggregatesFilter<"Product"> | string | null
  }

  export type SedeWhereInput = {
    AND?: SedeWhereInput | SedeWhereInput[]
    OR?: SedeWhereInput[]
    NOT?: SedeWhereInput | SedeWhereInput[]
    id?: StringFilter<"Sede"> | string
    name?: StringFilter<"Sede"> | string
    address?: StringFilter<"Sede"> | string
    createdAt?: DateTimeFilter<"Sede"> | Date | string
    updatedAt?: DateTimeFilter<"Sede"> | Date | string
    InventoryUsage?: InventoryUsageListRelationFilter
    Movement?: MovementListRelationFilter
    ProductExpiration?: ProductExpirationListRelationFilter
    StockBySede?: StockBySedeListRelationFilter
    User?: UserListRelationFilter
  }

  export type SedeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    InventoryUsage?: InventoryUsageOrderByRelationAggregateInput
    Movement?: MovementOrderByRelationAggregateInput
    ProductExpiration?: ProductExpirationOrderByRelationAggregateInput
    StockBySede?: StockBySedeOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
  }

  export type SedeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SedeWhereInput | SedeWhereInput[]
    OR?: SedeWhereInput[]
    NOT?: SedeWhereInput | SedeWhereInput[]
    name?: StringFilter<"Sede"> | string
    address?: StringFilter<"Sede"> | string
    createdAt?: DateTimeFilter<"Sede"> | Date | string
    updatedAt?: DateTimeFilter<"Sede"> | Date | string
    InventoryUsage?: InventoryUsageListRelationFilter
    Movement?: MovementListRelationFilter
    ProductExpiration?: ProductExpirationListRelationFilter
    StockBySede?: StockBySedeListRelationFilter
    User?: UserListRelationFilter
  }, "id">

  export type SedeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SedeCountOrderByAggregateInput
    _max?: SedeMaxOrderByAggregateInput
    _min?: SedeMinOrderByAggregateInput
  }

  export type SedeScalarWhereWithAggregatesInput = {
    AND?: SedeScalarWhereWithAggregatesInput | SedeScalarWhereWithAggregatesInput[]
    OR?: SedeScalarWhereWithAggregatesInput[]
    NOT?: SedeScalarWhereWithAggregatesInput | SedeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Sede"> | string
    name?: StringWithAggregatesFilter<"Sede"> | string
    address?: StringWithAggregatesFilter<"Sede"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Sede"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Sede"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    sedeId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    InventoryUsage?: InventoryUsageListRelationFilter
    Movement?: MovementListRelationFilter
    Sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    sedeId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    InventoryUsage?: InventoryUsageOrderByRelationAggregateInput
    Movement?: MovementOrderByRelationAggregateInput
    Sede?: SedeOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    sedeId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    InventoryUsage?: InventoryUsageListRelationFilter
    Movement?: MovementListRelationFilter
    Sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    sedeId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
    sedeId?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type InventoryUsageWhereInput = {
    AND?: InventoryUsageWhereInput | InventoryUsageWhereInput[]
    OR?: InventoryUsageWhereInput[]
    NOT?: InventoryUsageWhereInput | InventoryUsageWhereInput[]
    id?: StringFilter<"InventoryUsage"> | string
    nombrePaciente?: StringFilter<"InventoryUsage"> | string
    tipoTratamiento?: EnumTipoTratamientoFilter<"InventoryUsage"> | $Enums.TipoTratamiento
    observaciones?: StringNullableFilter<"InventoryUsage"> | string | null
    tuvoReaccion?: BoolFilter<"InventoryUsage"> | boolean
    descripcionReaccion?: StringNullableFilter<"InventoryUsage"> | string | null
    createdAt?: DateTimeFilter<"InventoryUsage"> | Date | string
    sedeId?: StringFilter<"InventoryUsage"> | string
    updatedAt?: DateTimeFilter<"InventoryUsage"> | Date | string
    userId?: StringFilter<"InventoryUsage"> | string
    pacienteId?: StringNullableFilter<"InventoryUsage"> | string | null
    pacientes?: XOR<PacientesNullableScalarRelationFilter, pacientesWhereInput> | null
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    details?: InventoryUsageDetailListRelationFilter
  }

  export type InventoryUsageOrderByWithRelationInput = {
    id?: SortOrder
    nombrePaciente?: SortOrder
    tipoTratamiento?: SortOrder
    observaciones?: SortOrderInput | SortOrder
    tuvoReaccion?: SortOrder
    descripcionReaccion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    sedeId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    pacienteId?: SortOrderInput | SortOrder
    pacientes?: pacientesOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    details?: InventoryUsageDetailOrderByRelationAggregateInput
  }

  export type InventoryUsageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InventoryUsageWhereInput | InventoryUsageWhereInput[]
    OR?: InventoryUsageWhereInput[]
    NOT?: InventoryUsageWhereInput | InventoryUsageWhereInput[]
    nombrePaciente?: StringFilter<"InventoryUsage"> | string
    tipoTratamiento?: EnumTipoTratamientoFilter<"InventoryUsage"> | $Enums.TipoTratamiento
    observaciones?: StringNullableFilter<"InventoryUsage"> | string | null
    tuvoReaccion?: BoolFilter<"InventoryUsage"> | boolean
    descripcionReaccion?: StringNullableFilter<"InventoryUsage"> | string | null
    createdAt?: DateTimeFilter<"InventoryUsage"> | Date | string
    sedeId?: StringFilter<"InventoryUsage"> | string
    updatedAt?: DateTimeFilter<"InventoryUsage"> | Date | string
    userId?: StringFilter<"InventoryUsage"> | string
    pacienteId?: StringNullableFilter<"InventoryUsage"> | string | null
    pacientes?: XOR<PacientesNullableScalarRelationFilter, pacientesWhereInput> | null
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    details?: InventoryUsageDetailListRelationFilter
  }, "id">

  export type InventoryUsageOrderByWithAggregationInput = {
    id?: SortOrder
    nombrePaciente?: SortOrder
    tipoTratamiento?: SortOrder
    observaciones?: SortOrderInput | SortOrder
    tuvoReaccion?: SortOrder
    descripcionReaccion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    sedeId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    pacienteId?: SortOrderInput | SortOrder
    _count?: InventoryUsageCountOrderByAggregateInput
    _max?: InventoryUsageMaxOrderByAggregateInput
    _min?: InventoryUsageMinOrderByAggregateInput
  }

  export type InventoryUsageScalarWhereWithAggregatesInput = {
    AND?: InventoryUsageScalarWhereWithAggregatesInput | InventoryUsageScalarWhereWithAggregatesInput[]
    OR?: InventoryUsageScalarWhereWithAggregatesInput[]
    NOT?: InventoryUsageScalarWhereWithAggregatesInput | InventoryUsageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryUsage"> | string
    nombrePaciente?: StringWithAggregatesFilter<"InventoryUsage"> | string
    tipoTratamiento?: EnumTipoTratamientoWithAggregatesFilter<"InventoryUsage"> | $Enums.TipoTratamiento
    observaciones?: StringNullableWithAggregatesFilter<"InventoryUsage"> | string | null
    tuvoReaccion?: BoolWithAggregatesFilter<"InventoryUsage"> | boolean
    descripcionReaccion?: StringNullableWithAggregatesFilter<"InventoryUsage"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"InventoryUsage"> | Date | string
    sedeId?: StringWithAggregatesFilter<"InventoryUsage"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"InventoryUsage"> | Date | string
    userId?: StringWithAggregatesFilter<"InventoryUsage"> | string
    pacienteId?: StringNullableWithAggregatesFilter<"InventoryUsage"> | string | null
  }

  export type InventoryUsageDetailWhereInput = {
    AND?: InventoryUsageDetailWhereInput | InventoryUsageDetailWhereInput[]
    OR?: InventoryUsageDetailWhereInput[]
    NOT?: InventoryUsageDetailWhereInput | InventoryUsageDetailWhereInput[]
    id?: StringFilter<"InventoryUsageDetail"> | string
    createdAt?: DateTimeFilter<"InventoryUsageDetail"> | Date | string
    doses?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    frascoLevel?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    inventoryUsageId?: StringFilter<"InventoryUsageDetail"> | string
    movementId?: StringNullableFilter<"InventoryUsageDetail"> | string | null
    productId?: StringFilter<"InventoryUsageDetail"> | string
    quantity?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    units?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    updatedAt?: DateTimeFilter<"InventoryUsageDetail"> | Date | string
    inventoryUsage?: XOR<InventoryUsageScalarRelationFilter, InventoryUsageWhereInput>
    movement?: XOR<MovementNullableScalarRelationFilter, MovementWhereInput> | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type InventoryUsageDetailOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    doses?: SortOrderInput | SortOrder
    frascoLevel?: SortOrderInput | SortOrder
    inventoryUsageId?: SortOrder
    movementId?: SortOrderInput | SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    totalCost?: SortOrder
    unitCost?: SortOrder
    units?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    inventoryUsage?: InventoryUsageOrderByWithRelationInput
    movement?: MovementOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type InventoryUsageDetailWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InventoryUsageDetailWhereInput | InventoryUsageDetailWhereInput[]
    OR?: InventoryUsageDetailWhereInput[]
    NOT?: InventoryUsageDetailWhereInput | InventoryUsageDetailWhereInput[]
    createdAt?: DateTimeFilter<"InventoryUsageDetail"> | Date | string
    doses?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    frascoLevel?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    inventoryUsageId?: StringFilter<"InventoryUsageDetail"> | string
    movementId?: StringNullableFilter<"InventoryUsageDetail"> | string | null
    productId?: StringFilter<"InventoryUsageDetail"> | string
    quantity?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    units?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    updatedAt?: DateTimeFilter<"InventoryUsageDetail"> | Date | string
    inventoryUsage?: XOR<InventoryUsageScalarRelationFilter, InventoryUsageWhereInput>
    movement?: XOR<MovementNullableScalarRelationFilter, MovementWhereInput> | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type InventoryUsageDetailOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    doses?: SortOrderInput | SortOrder
    frascoLevel?: SortOrderInput | SortOrder
    inventoryUsageId?: SortOrder
    movementId?: SortOrderInput | SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    totalCost?: SortOrder
    unitCost?: SortOrder
    units?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: InventoryUsageDetailCountOrderByAggregateInput
    _avg?: InventoryUsageDetailAvgOrderByAggregateInput
    _max?: InventoryUsageDetailMaxOrderByAggregateInput
    _min?: InventoryUsageDetailMinOrderByAggregateInput
    _sum?: InventoryUsageDetailSumOrderByAggregateInput
  }

  export type InventoryUsageDetailScalarWhereWithAggregatesInput = {
    AND?: InventoryUsageDetailScalarWhereWithAggregatesInput | InventoryUsageDetailScalarWhereWithAggregatesInput[]
    OR?: InventoryUsageDetailScalarWhereWithAggregatesInput[]
    NOT?: InventoryUsageDetailScalarWhereWithAggregatesInput | InventoryUsageDetailScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryUsageDetail"> | string
    createdAt?: DateTimeWithAggregatesFilter<"InventoryUsageDetail"> | Date | string
    doses?: IntNullableWithAggregatesFilter<"InventoryUsageDetail"> | number | null
    frascoLevel?: IntNullableWithAggregatesFilter<"InventoryUsageDetail"> | number | null
    inventoryUsageId?: StringWithAggregatesFilter<"InventoryUsageDetail"> | string
    movementId?: StringNullableWithAggregatesFilter<"InventoryUsageDetail"> | string | null
    productId?: StringWithAggregatesFilter<"InventoryUsageDetail"> | string
    quantity?: DecimalWithAggregatesFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalWithAggregatesFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalWithAggregatesFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    units?: IntNullableWithAggregatesFilter<"InventoryUsageDetail"> | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"InventoryUsageDetail"> | Date | string
  }

  export type MovementWhereInput = {
    AND?: MovementWhereInput | MovementWhereInput[]
    OR?: MovementWhereInput[]
    NOT?: MovementWhereInput | MovementWhereInput[]
    id?: StringFilter<"Movement"> | string
    userId?: StringFilter<"Movement"> | string
    sedeId?: StringFilter<"Movement"> | string
    productId?: StringFilter<"Movement"> | string
    type?: EnumMovementTypeFilter<"Movement"> | $Enums.MovementType
    quantity?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    batchNumber?: StringNullableFilter<"Movement"> | string | null
    expiryDate?: DateTimeNullableFilter<"Movement"> | Date | string | null
    createdAt?: DateTimeFilter<"Movement"> | Date | string
    InventoryUsageDetail?: InventoryUsageDetailListRelationFilter
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MovementOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    sedeId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    batchNumber?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    InventoryUsageDetail?: InventoryUsageDetailOrderByRelationAggregateInput
    product?: ProductOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type MovementWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MovementWhereInput | MovementWhereInput[]
    OR?: MovementWhereInput[]
    NOT?: MovementWhereInput | MovementWhereInput[]
    userId?: StringFilter<"Movement"> | string
    sedeId?: StringFilter<"Movement"> | string
    productId?: StringFilter<"Movement"> | string
    type?: EnumMovementTypeFilter<"Movement"> | $Enums.MovementType
    quantity?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    batchNumber?: StringNullableFilter<"Movement"> | string | null
    expiryDate?: DateTimeNullableFilter<"Movement"> | Date | string | null
    createdAt?: DateTimeFilter<"Movement"> | Date | string
    InventoryUsageDetail?: InventoryUsageDetailListRelationFilter
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MovementOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    sedeId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    batchNumber?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: MovementCountOrderByAggregateInput
    _avg?: MovementAvgOrderByAggregateInput
    _max?: MovementMaxOrderByAggregateInput
    _min?: MovementMinOrderByAggregateInput
    _sum?: MovementSumOrderByAggregateInput
  }

  export type MovementScalarWhereWithAggregatesInput = {
    AND?: MovementScalarWhereWithAggregatesInput | MovementScalarWhereWithAggregatesInput[]
    OR?: MovementScalarWhereWithAggregatesInput[]
    NOT?: MovementScalarWhereWithAggregatesInput | MovementScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Movement"> | string
    userId?: StringWithAggregatesFilter<"Movement"> | string
    sedeId?: StringWithAggregatesFilter<"Movement"> | string
    productId?: StringWithAggregatesFilter<"Movement"> | string
    type?: EnumMovementTypeWithAggregatesFilter<"Movement"> | $Enums.MovementType
    quantity?: DecimalWithAggregatesFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalWithAggregatesFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalWithAggregatesFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    batchNumber?: StringNullableWithAggregatesFilter<"Movement"> | string | null
    expiryDate?: DateTimeNullableWithAggregatesFilter<"Movement"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Movement"> | Date | string
  }

  export type StockBySedeWhereInput = {
    AND?: StockBySedeWhereInput | StockBySedeWhereInput[]
    OR?: StockBySedeWhereInput[]
    NOT?: StockBySedeWhereInput | StockBySedeWhereInput[]
    id?: StringFilter<"StockBySede"> | string
    productId?: StringFilter<"StockBySede"> | string
    sedeId?: StringFilter<"StockBySede"> | string
    quantity?: DecimalFilter<"StockBySede"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"StockBySede"> | Date | string
    updatedAt?: DateTimeFilter<"StockBySede"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }

  export type StockBySedeOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
  }

  export type StockBySedeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    productId_sedeId?: StockBySedeProductIdSedeIdCompoundUniqueInput
    AND?: StockBySedeWhereInput | StockBySedeWhereInput[]
    OR?: StockBySedeWhereInput[]
    NOT?: StockBySedeWhereInput | StockBySedeWhereInput[]
    productId?: StringFilter<"StockBySede"> | string
    sedeId?: StringFilter<"StockBySede"> | string
    quantity?: DecimalFilter<"StockBySede"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"StockBySede"> | Date | string
    updatedAt?: DateTimeFilter<"StockBySede"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }, "id" | "productId_sedeId">

  export type StockBySedeOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: StockBySedeCountOrderByAggregateInput
    _avg?: StockBySedeAvgOrderByAggregateInput
    _max?: StockBySedeMaxOrderByAggregateInput
    _min?: StockBySedeMinOrderByAggregateInput
    _sum?: StockBySedeSumOrderByAggregateInput
  }

  export type StockBySedeScalarWhereWithAggregatesInput = {
    AND?: StockBySedeScalarWhereWithAggregatesInput | StockBySedeScalarWhereWithAggregatesInput[]
    OR?: StockBySedeScalarWhereWithAggregatesInput[]
    NOT?: StockBySedeScalarWhereWithAggregatesInput | StockBySedeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StockBySede"> | string
    productId?: StringWithAggregatesFilter<"StockBySede"> | string
    sedeId?: StringWithAggregatesFilter<"StockBySede"> | string
    quantity?: DecimalWithAggregatesFilter<"StockBySede"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"StockBySede"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StockBySede"> | Date | string
  }

  export type ProductExpirationWhereInput = {
    AND?: ProductExpirationWhereInput | ProductExpirationWhereInput[]
    OR?: ProductExpirationWhereInput[]
    NOT?: ProductExpirationWhereInput | ProductExpirationWhereInput[]
    id?: StringFilter<"ProductExpiration"> | string
    productId?: StringFilter<"ProductExpiration"> | string
    sedeId?: StringFilter<"ProductExpiration"> | string
    batchNumber?: StringFilter<"ProductExpiration"> | string
    expiryDate?: DateTimeFilter<"ProductExpiration"> | Date | string
    quantity?: IntFilter<"ProductExpiration"> | number
    createdAt?: DateTimeFilter<"ProductExpiration"> | Date | string
    updatedAt?: DateTimeFilter<"ProductExpiration"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }

  export type ProductExpirationOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
  }

  export type ProductExpirationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductExpirationWhereInput | ProductExpirationWhereInput[]
    OR?: ProductExpirationWhereInput[]
    NOT?: ProductExpirationWhereInput | ProductExpirationWhereInput[]
    productId?: StringFilter<"ProductExpiration"> | string
    sedeId?: StringFilter<"ProductExpiration"> | string
    batchNumber?: StringFilter<"ProductExpiration"> | string
    expiryDate?: DateTimeFilter<"ProductExpiration"> | Date | string
    quantity?: IntFilter<"ProductExpiration"> | number
    createdAt?: DateTimeFilter<"ProductExpiration"> | Date | string
    updatedAt?: DateTimeFilter<"ProductExpiration"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }, "id">

  export type ProductExpirationOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductExpirationCountOrderByAggregateInput
    _avg?: ProductExpirationAvgOrderByAggregateInput
    _max?: ProductExpirationMaxOrderByAggregateInput
    _min?: ProductExpirationMinOrderByAggregateInput
    _sum?: ProductExpirationSumOrderByAggregateInput
  }

  export type ProductExpirationScalarWhereWithAggregatesInput = {
    AND?: ProductExpirationScalarWhereWithAggregatesInput | ProductExpirationScalarWhereWithAggregatesInput[]
    OR?: ProductExpirationScalarWhereWithAggregatesInput[]
    NOT?: ProductExpirationScalarWhereWithAggregatesInput | ProductExpirationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductExpiration"> | string
    productId?: StringWithAggregatesFilter<"ProductExpiration"> | string
    sedeId?: StringWithAggregatesFilter<"ProductExpiration"> | string
    batchNumber?: StringWithAggregatesFilter<"ProductExpiration"> | string
    expiryDate?: DateTimeWithAggregatesFilter<"ProductExpiration"> | Date | string
    quantity?: IntWithAggregatesFilter<"ProductExpiration"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ProductExpiration"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductExpiration"> | Date | string
  }

  export type AllergenWhereInput = {
    AND?: AllergenWhereInput | AllergenWhereInput[]
    OR?: AllergenWhereInput[]
    NOT?: AllergenWhereInput | AllergenWhereInput[]
    id?: StringFilter<"Allergen"> | string
    name?: StringFilter<"Allergen"> | string
    createdAt?: DateTimeFilter<"Allergen"> | Date | string
    updatedAt?: DateTimeFilter<"Allergen"> | Date | string
    alxoidType?: EnumAlxoidTypeNullableFilter<"Allergen"> | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFilter<"Allergen"> | boolean
    ProductAllergen?: ProductAllergenListRelationFilter
  }

  export type AllergenOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    alxoidType?: SortOrderInput | SortOrder
    isAlxoidExclusive?: SortOrder
    ProductAllergen?: ProductAllergenOrderByRelationAggregateInput
  }

  export type AllergenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AllergenWhereInput | AllergenWhereInput[]
    OR?: AllergenWhereInput[]
    NOT?: AllergenWhereInput | AllergenWhereInput[]
    name?: StringFilter<"Allergen"> | string
    createdAt?: DateTimeFilter<"Allergen"> | Date | string
    updatedAt?: DateTimeFilter<"Allergen"> | Date | string
    alxoidType?: EnumAlxoidTypeNullableFilter<"Allergen"> | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFilter<"Allergen"> | boolean
    ProductAllergen?: ProductAllergenListRelationFilter
  }, "id">

  export type AllergenOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    alxoidType?: SortOrderInput | SortOrder
    isAlxoidExclusive?: SortOrder
    _count?: AllergenCountOrderByAggregateInput
    _max?: AllergenMaxOrderByAggregateInput
    _min?: AllergenMinOrderByAggregateInput
  }

  export type AllergenScalarWhereWithAggregatesInput = {
    AND?: AllergenScalarWhereWithAggregatesInput | AllergenScalarWhereWithAggregatesInput[]
    OR?: AllergenScalarWhereWithAggregatesInput[]
    NOT?: AllergenScalarWhereWithAggregatesInput | AllergenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Allergen"> | string
    name?: StringWithAggregatesFilter<"Allergen"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Allergen"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Allergen"> | Date | string
    alxoidType?: EnumAlxoidTypeNullableWithAggregatesFilter<"Allergen"> | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolWithAggregatesFilter<"Allergen"> | boolean
  }

  export type ProductAllergenWhereInput = {
    AND?: ProductAllergenWhereInput | ProductAllergenWhereInput[]
    OR?: ProductAllergenWhereInput[]
    NOT?: ProductAllergenWhereInput | ProductAllergenWhereInput[]
    id?: StringFilter<"ProductAllergen"> | string
    productId?: StringFilter<"ProductAllergen"> | string
    allergenId?: StringFilter<"ProductAllergen"> | string
    mlPerDose?: DecimalFilter<"ProductAllergen"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"ProductAllergen"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAllergen"> | Date | string
    allergen?: XOR<AllergenScalarRelationFilter, AllergenWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductAllergenOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    allergenId?: SortOrder
    mlPerDose?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    allergen?: AllergenOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type ProductAllergenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    productId_allergenId?: ProductAllergenProductIdAllergenIdCompoundUniqueInput
    AND?: ProductAllergenWhereInput | ProductAllergenWhereInput[]
    OR?: ProductAllergenWhereInput[]
    NOT?: ProductAllergenWhereInput | ProductAllergenWhereInput[]
    productId?: StringFilter<"ProductAllergen"> | string
    allergenId?: StringFilter<"ProductAllergen"> | string
    mlPerDose?: DecimalFilter<"ProductAllergen"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"ProductAllergen"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAllergen"> | Date | string
    allergen?: XOR<AllergenScalarRelationFilter, AllergenWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id" | "productId_allergenId">

  export type ProductAllergenOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    allergenId?: SortOrder
    mlPerDose?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductAllergenCountOrderByAggregateInput
    _avg?: ProductAllergenAvgOrderByAggregateInput
    _max?: ProductAllergenMaxOrderByAggregateInput
    _min?: ProductAllergenMinOrderByAggregateInput
    _sum?: ProductAllergenSumOrderByAggregateInput
  }

  export type ProductAllergenScalarWhereWithAggregatesInput = {
    AND?: ProductAllergenScalarWhereWithAggregatesInput | ProductAllergenScalarWhereWithAggregatesInput[]
    OR?: ProductAllergenScalarWhereWithAggregatesInput[]
    NOT?: ProductAllergenScalarWhereWithAggregatesInput | ProductAllergenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductAllergen"> | string
    productId?: StringWithAggregatesFilter<"ProductAllergen"> | string
    allergenId?: StringWithAggregatesFilter<"ProductAllergen"> | string
    mlPerDose?: DecimalWithAggregatesFilter<"ProductAllergen"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"ProductAllergen"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductAllergen"> | Date | string
  }

  export type SupplierWhereInput = {
    AND?: SupplierWhereInput | SupplierWhereInput[]
    OR?: SupplierWhereInput[]
    NOT?: SupplierWhereInput | SupplierWhereInput[]
    id?: StringFilter<"Supplier"> | string
    name?: StringFilter<"Supplier"> | string
    invoiceNumber?: StringNullableFilter<"Supplier"> | string | null
    amountSupplied?: DecimalFilter<"Supplier"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Supplier"> | Date | string
    updatedAt?: DateTimeFilter<"Supplier"> | Date | string
  }

  export type SupplierOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    invoiceNumber?: SortOrderInput | SortOrder
    amountSupplied?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplierWhereInput | SupplierWhereInput[]
    OR?: SupplierWhereInput[]
    NOT?: SupplierWhereInput | SupplierWhereInput[]
    name?: StringFilter<"Supplier"> | string
    invoiceNumber?: StringNullableFilter<"Supplier"> | string | null
    amountSupplied?: DecimalFilter<"Supplier"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Supplier"> | Date | string
    updatedAt?: DateTimeFilter<"Supplier"> | Date | string
  }, "id">

  export type SupplierOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    invoiceNumber?: SortOrderInput | SortOrder
    amountSupplied?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SupplierCountOrderByAggregateInput
    _avg?: SupplierAvgOrderByAggregateInput
    _max?: SupplierMaxOrderByAggregateInput
    _min?: SupplierMinOrderByAggregateInput
    _sum?: SupplierSumOrderByAggregateInput
  }

  export type SupplierScalarWhereWithAggregatesInput = {
    AND?: SupplierScalarWhereWithAggregatesInput | SupplierScalarWhereWithAggregatesInput[]
    OR?: SupplierScalarWhereWithAggregatesInput[]
    NOT?: SupplierScalarWhereWithAggregatesInput | SupplierScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Supplier"> | string
    name?: StringWithAggregatesFilter<"Supplier"> | string
    invoiceNumber?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    amountSupplied?: DecimalWithAggregatesFilter<"Supplier"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"Supplier"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Supplier"> | Date | string
  }

  export type whatsapp_configWhereInput = {
    AND?: whatsapp_configWhereInput | whatsapp_configWhereInput[]
    OR?: whatsapp_configWhereInput[]
    NOT?: whatsapp_configWhereInput | whatsapp_configWhereInput[]
    id?: StringFilter<"whatsapp_config"> | string
    usuario_id?: StringFilter<"whatsapp_config"> | string
    whatsapp_business_id?: StringNullableFilter<"whatsapp_config"> | string | null
    phone_number_id?: StringNullableFilter<"whatsapp_config"> | string | null
    access_token?: StringNullableFilter<"whatsapp_config"> | string | null
    webhook_verify_token?: StringNullableFilter<"whatsapp_config"> | string | null
    is_active?: BoolFilter<"whatsapp_config"> | boolean
    created_at?: DateTimeFilter<"whatsapp_config"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_config"> | Date | string
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type whatsapp_configOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    whatsapp_business_id?: SortOrderInput | SortOrder
    phone_number_id?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    webhook_verify_token?: SortOrderInput | SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type whatsapp_configWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    usuario_id?: string
    AND?: whatsapp_configWhereInput | whatsapp_configWhereInput[]
    OR?: whatsapp_configWhereInput[]
    NOT?: whatsapp_configWhereInput | whatsapp_configWhereInput[]
    whatsapp_business_id?: StringNullableFilter<"whatsapp_config"> | string | null
    phone_number_id?: StringNullableFilter<"whatsapp_config"> | string | null
    access_token?: StringNullableFilter<"whatsapp_config"> | string | null
    webhook_verify_token?: StringNullableFilter<"whatsapp_config"> | string | null
    is_active?: BoolFilter<"whatsapp_config"> | boolean
    created_at?: DateTimeFilter<"whatsapp_config"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_config"> | Date | string
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id" | "usuario_id">

  export type whatsapp_configOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    whatsapp_business_id?: SortOrderInput | SortOrder
    phone_number_id?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    webhook_verify_token?: SortOrderInput | SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: whatsapp_configCountOrderByAggregateInput
    _max?: whatsapp_configMaxOrderByAggregateInput
    _min?: whatsapp_configMinOrderByAggregateInput
  }

  export type whatsapp_configScalarWhereWithAggregatesInput = {
    AND?: whatsapp_configScalarWhereWithAggregatesInput | whatsapp_configScalarWhereWithAggregatesInput[]
    OR?: whatsapp_configScalarWhereWithAggregatesInput[]
    NOT?: whatsapp_configScalarWhereWithAggregatesInput | whatsapp_configScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"whatsapp_config"> | string
    usuario_id?: StringWithAggregatesFilter<"whatsapp_config"> | string
    whatsapp_business_id?: StringNullableWithAggregatesFilter<"whatsapp_config"> | string | null
    phone_number_id?: StringNullableWithAggregatesFilter<"whatsapp_config"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"whatsapp_config"> | string | null
    webhook_verify_token?: StringNullableWithAggregatesFilter<"whatsapp_config"> | string | null
    is_active?: BoolWithAggregatesFilter<"whatsapp_config"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"whatsapp_config"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"whatsapp_config"> | Date | string
  }

  export type whatsapp_templatesWhereInput = {
    AND?: whatsapp_templatesWhereInput | whatsapp_templatesWhereInput[]
    OR?: whatsapp_templatesWhereInput[]
    NOT?: whatsapp_templatesWhereInput | whatsapp_templatesWhereInput[]
    id?: StringFilter<"whatsapp_templates"> | string
    usuario_id?: StringFilter<"whatsapp_templates"> | string
    name?: StringFilter<"whatsapp_templates"> | string
    language?: StringFilter<"whatsapp_templates"> | string
    category?: StringFilter<"whatsapp_templates"> | string
    components?: JsonFilter<"whatsapp_templates">
    status?: StringFilter<"whatsapp_templates"> | string
    created_at?: DateTimeFilter<"whatsapp_templates"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_templates"> | Date | string
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type whatsapp_templatesOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    name?: SortOrder
    language?: SortOrder
    category?: SortOrder
    components?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type whatsapp_templatesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: whatsapp_templatesWhereInput | whatsapp_templatesWhereInput[]
    OR?: whatsapp_templatesWhereInput[]
    NOT?: whatsapp_templatesWhereInput | whatsapp_templatesWhereInput[]
    usuario_id?: StringFilter<"whatsapp_templates"> | string
    name?: StringFilter<"whatsapp_templates"> | string
    language?: StringFilter<"whatsapp_templates"> | string
    category?: StringFilter<"whatsapp_templates"> | string
    components?: JsonFilter<"whatsapp_templates">
    status?: StringFilter<"whatsapp_templates"> | string
    created_at?: DateTimeFilter<"whatsapp_templates"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_templates"> | Date | string
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id">

  export type whatsapp_templatesOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    name?: SortOrder
    language?: SortOrder
    category?: SortOrder
    components?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: whatsapp_templatesCountOrderByAggregateInput
    _max?: whatsapp_templatesMaxOrderByAggregateInput
    _min?: whatsapp_templatesMinOrderByAggregateInput
  }

  export type whatsapp_templatesScalarWhereWithAggregatesInput = {
    AND?: whatsapp_templatesScalarWhereWithAggregatesInput | whatsapp_templatesScalarWhereWithAggregatesInput[]
    OR?: whatsapp_templatesScalarWhereWithAggregatesInput[]
    NOT?: whatsapp_templatesScalarWhereWithAggregatesInput | whatsapp_templatesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"whatsapp_templates"> | string
    usuario_id?: StringWithAggregatesFilter<"whatsapp_templates"> | string
    name?: StringWithAggregatesFilter<"whatsapp_templates"> | string
    language?: StringWithAggregatesFilter<"whatsapp_templates"> | string
    category?: StringWithAggregatesFilter<"whatsapp_templates"> | string
    components?: JsonWithAggregatesFilter<"whatsapp_templates">
    status?: StringWithAggregatesFilter<"whatsapp_templates"> | string
    created_at?: DateTimeWithAggregatesFilter<"whatsapp_templates"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"whatsapp_templates"> | Date | string
  }

  export type whatsapp_messagesWhereInput = {
    AND?: whatsapp_messagesWhereInput | whatsapp_messagesWhereInput[]
    OR?: whatsapp_messagesWhereInput[]
    NOT?: whatsapp_messagesWhereInput | whatsapp_messagesWhereInput[]
    id?: StringFilter<"whatsapp_messages"> | string
    usuario_id?: StringFilter<"whatsapp_messages"> | string
    paciente_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    cita_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    template_name?: StringNullableFilter<"whatsapp_messages"> | string | null
    message_type?: StringFilter<"whatsapp_messages"> | string
    content?: JsonFilter<"whatsapp_messages">
    phone_number?: StringFilter<"whatsapp_messages"> | string
    status?: EnumWhatsAppMessageStatusFilter<"whatsapp_messages"> | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    error_message?: StringNullableFilter<"whatsapp_messages"> | string | null
    sent_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    delivered_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    read_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    created_at?: DateTimeFilter<"whatsapp_messages"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_messages"> | Date | string
    citas?: XOR<CitasNullableScalarRelationFilter, citasWhereInput> | null
    pacientes?: XOR<PacientesNullableScalarRelationFilter, pacientesWhereInput> | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type whatsapp_messagesOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    paciente_id?: SortOrderInput | SortOrder
    cita_id?: SortOrderInput | SortOrder
    template_name?: SortOrderInput | SortOrder
    message_type?: SortOrder
    content?: SortOrder
    phone_number?: SortOrder
    status?: SortOrder
    whatsapp_message_id?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    sent_at?: SortOrderInput | SortOrder
    delivered_at?: SortOrderInput | SortOrder
    read_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    citas?: citasOrderByWithRelationInput
    pacientes?: pacientesOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type whatsapp_messagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: whatsapp_messagesWhereInput | whatsapp_messagesWhereInput[]
    OR?: whatsapp_messagesWhereInput[]
    NOT?: whatsapp_messagesWhereInput | whatsapp_messagesWhereInput[]
    usuario_id?: StringFilter<"whatsapp_messages"> | string
    paciente_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    cita_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    template_name?: StringNullableFilter<"whatsapp_messages"> | string | null
    message_type?: StringFilter<"whatsapp_messages"> | string
    content?: JsonFilter<"whatsapp_messages">
    phone_number?: StringFilter<"whatsapp_messages"> | string
    status?: EnumWhatsAppMessageStatusFilter<"whatsapp_messages"> | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    error_message?: StringNullableFilter<"whatsapp_messages"> | string | null
    sent_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    delivered_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    read_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    created_at?: DateTimeFilter<"whatsapp_messages"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_messages"> | Date | string
    citas?: XOR<CitasNullableScalarRelationFilter, citasWhereInput> | null
    pacientes?: XOR<PacientesNullableScalarRelationFilter, pacientesWhereInput> | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id">

  export type whatsapp_messagesOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    paciente_id?: SortOrderInput | SortOrder
    cita_id?: SortOrderInput | SortOrder
    template_name?: SortOrderInput | SortOrder
    message_type?: SortOrder
    content?: SortOrder
    phone_number?: SortOrder
    status?: SortOrder
    whatsapp_message_id?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    sent_at?: SortOrderInput | SortOrder
    delivered_at?: SortOrderInput | SortOrder
    read_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: whatsapp_messagesCountOrderByAggregateInput
    _max?: whatsapp_messagesMaxOrderByAggregateInput
    _min?: whatsapp_messagesMinOrderByAggregateInput
  }

  export type whatsapp_messagesScalarWhereWithAggregatesInput = {
    AND?: whatsapp_messagesScalarWhereWithAggregatesInput | whatsapp_messagesScalarWhereWithAggregatesInput[]
    OR?: whatsapp_messagesScalarWhereWithAggregatesInput[]
    NOT?: whatsapp_messagesScalarWhereWithAggregatesInput | whatsapp_messagesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"whatsapp_messages"> | string
    usuario_id?: StringWithAggregatesFilter<"whatsapp_messages"> | string
    paciente_id?: StringNullableWithAggregatesFilter<"whatsapp_messages"> | string | null
    cita_id?: StringNullableWithAggregatesFilter<"whatsapp_messages"> | string | null
    template_name?: StringNullableWithAggregatesFilter<"whatsapp_messages"> | string | null
    message_type?: StringWithAggregatesFilter<"whatsapp_messages"> | string
    content?: JsonWithAggregatesFilter<"whatsapp_messages">
    phone_number?: StringWithAggregatesFilter<"whatsapp_messages"> | string
    status?: EnumWhatsAppMessageStatusWithAggregatesFilter<"whatsapp_messages"> | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: StringNullableWithAggregatesFilter<"whatsapp_messages"> | string | null
    error_message?: StringNullableWithAggregatesFilter<"whatsapp_messages"> | string | null
    sent_at?: DateTimeNullableWithAggregatesFilter<"whatsapp_messages"> | Date | string | null
    delivered_at?: DateTimeNullableWithAggregatesFilter<"whatsapp_messages"> | Date | string | null
    read_at?: DateTimeNullableWithAggregatesFilter<"whatsapp_messages"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"whatsapp_messages"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"whatsapp_messages"> | Date | string
  }

  export type whatsapp_remindersWhereInput = {
    AND?: whatsapp_remindersWhereInput | whatsapp_remindersWhereInput[]
    OR?: whatsapp_remindersWhereInput[]
    NOT?: whatsapp_remindersWhereInput | whatsapp_remindersWhereInput[]
    id?: StringFilter<"whatsapp_reminders"> | string
    usuario_id?: StringFilter<"whatsapp_reminders"> | string
    cita_id?: StringFilter<"whatsapp_reminders"> | string
    template_name?: StringFilter<"whatsapp_reminders"> | string
    reminder_type?: StringFilter<"whatsapp_reminders"> | string
    scheduled_time?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    is_sent?: BoolFilter<"whatsapp_reminders"> | boolean
    sent_at?: DateTimeNullableFilter<"whatsapp_reminders"> | Date | string | null
    created_at?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    citas?: XOR<CitasScalarRelationFilter, citasWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type whatsapp_remindersOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    reminder_type?: SortOrder
    scheduled_time?: SortOrder
    is_sent?: SortOrder
    sent_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    citas?: citasOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type whatsapp_remindersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: whatsapp_remindersWhereInput | whatsapp_remindersWhereInput[]
    OR?: whatsapp_remindersWhereInput[]
    NOT?: whatsapp_remindersWhereInput | whatsapp_remindersWhereInput[]
    usuario_id?: StringFilter<"whatsapp_reminders"> | string
    cita_id?: StringFilter<"whatsapp_reminders"> | string
    template_name?: StringFilter<"whatsapp_reminders"> | string
    reminder_type?: StringFilter<"whatsapp_reminders"> | string
    scheduled_time?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    is_sent?: BoolFilter<"whatsapp_reminders"> | boolean
    sent_at?: DateTimeNullableFilter<"whatsapp_reminders"> | Date | string | null
    created_at?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    citas?: XOR<CitasScalarRelationFilter, citasWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id">

  export type whatsapp_remindersOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    reminder_type?: SortOrder
    scheduled_time?: SortOrder
    is_sent?: SortOrder
    sent_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: whatsapp_remindersCountOrderByAggregateInput
    _max?: whatsapp_remindersMaxOrderByAggregateInput
    _min?: whatsapp_remindersMinOrderByAggregateInput
  }

  export type whatsapp_remindersScalarWhereWithAggregatesInput = {
    AND?: whatsapp_remindersScalarWhereWithAggregatesInput | whatsapp_remindersScalarWhereWithAggregatesInput[]
    OR?: whatsapp_remindersScalarWhereWithAggregatesInput[]
    NOT?: whatsapp_remindersScalarWhereWithAggregatesInput | whatsapp_remindersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"whatsapp_reminders"> | string
    usuario_id?: StringWithAggregatesFilter<"whatsapp_reminders"> | string
    cita_id?: StringWithAggregatesFilter<"whatsapp_reminders"> | string
    template_name?: StringWithAggregatesFilter<"whatsapp_reminders"> | string
    reminder_type?: StringWithAggregatesFilter<"whatsapp_reminders"> | string
    scheduled_time?: DateTimeWithAggregatesFilter<"whatsapp_reminders"> | Date | string
    is_sent?: BoolWithAggregatesFilter<"whatsapp_reminders"> | boolean
    sent_at?: DateTimeNullableWithAggregatesFilter<"whatsapp_reminders"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"whatsapp_reminders"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"whatsapp_reminders"> | Date | string
  }

  export type organizacionesCreateInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosCreateNestedManyWithoutOrganizacionesInput
    pacientes?: pacientesCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesUncheckedCreateInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosUncheckedCreateNestedManyWithoutOrganizacionesInput
    pacientes?: pacientesUncheckedCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosUncheckedCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUpdateManyWithoutOrganizacionesNestedInput
    pacientes?: pacientesUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUpdateManyWithoutOrganizacionesNestedInput
  }

  export type organizacionesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUncheckedUpdateManyWithoutOrganizacionesNestedInput
    pacientes?: pacientesUncheckedUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUncheckedUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutOrganizacionesNestedInput
  }

  export type organizacionesCreateManyInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type organizacionesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type organizacionesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosCreateInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateManyInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
  }

  export type usuariosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
  }

  export type usuariosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
  }

  export type pacientesCreateInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutPacientesInput
    citas?: citasCreateNestedManyWithoutPacientesInput
    cobros?: cobrosCreateNestedManyWithoutPacientesInput
    organizaciones: organizacionesCreateNestedOneWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutPacientesInput
  }

  export type pacientesUncheckedCreateInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    organizacion_id: string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutPacientesInput
    citas?: citasUncheckedCreateNestedManyWithoutPacientesInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutPacientesInput
  }

  export type pacientesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutPacientesNestedInput
    citas?: citasUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUpdateManyWithoutPacientesNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutPacientesNestedInput
  }

  export type pacientesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutPacientesNestedInput
    citas?: citasUncheckedUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutPacientesNestedInput
  }

  export type pacientesCreateManyInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    organizacion_id: string
  }

  export type pacientesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
  }

  export type pacientesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
  }

  export type consultoriosCreateInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    citas?: citasCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosCreateNestedOneWithoutConsultoriosInput
    organizaciones: organizacionesCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUncheckedCreateInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
    citas?: citasUncheckedCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosUncheckedCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioUncheckedCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUpdateOneWithoutConsultoriosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    citas?: citasUncheckedUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUncheckedUpdateOneWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUncheckedUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosCreateManyInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
  }

  export type consultoriosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type consultoriosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
  }

  export type cobrosCreateInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutCobrosInput
    pacientes: pacientesCreateNestedOneWithoutCobrosInput
    usuarios: usuariosCreateNestedOneWithoutCobrosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroCreateNestedManyWithoutCobrosInput
  }

  export type cobrosUncheckedCreateInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    paciente_id: string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutCobrosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedCreateNestedManyWithoutCobrosInput
  }

  export type cobrosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutCobrosNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCobrosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosCreateManyInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    paciente_id: string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
  }

  export type cobrosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
  }

  export type cobrosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
  }

  export type cobro_conceptosCreateInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    precio_unitario: number
    cobros: cobrosCreateNestedOneWithoutCobro_conceptosInput
    consultorios: consultoriosCreateNestedOneWithoutCobro_conceptosInput
    servicios: serviciosCreateNestedOneWithoutCobro_conceptosInput
  }

  export type cobro_conceptosUncheckedCreateInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_id: string
    consultorio_id: string
    precio_unitario: number
    servicio_id: string
  }

  export type cobro_conceptosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    cobros?: cobrosUpdateOneRequiredWithoutCobro_conceptosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutCobro_conceptosNestedInput
    servicios?: serviciosUpdateOneRequiredWithoutCobro_conceptosNestedInput
  }

  export type cobro_conceptosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    servicio_id?: StringFieldUpdateOperationsInput | string
  }

  export type cobro_conceptosCreateManyInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_id: string
    consultorio_id: string
    precio_unitario: number
    servicio_id: string
  }

  export type cobro_conceptosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type cobro_conceptosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    servicio_id?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cobrosCreateInput = {
    id?: string
    created_at?: Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
    cobros: cobrosCreateNestedOneWithoutHistorial_cobrosInput
    usuarios: usuariosCreateNestedOneWithoutHistorial_cobrosInput
  }

  export type historial_cobrosUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    cobro_id: string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
    usuario_id: string
  }

  export type historial_cobrosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
    cobros?: cobrosUpdateOneRequiredWithoutHistorial_cobrosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutHistorial_cobrosNestedInput
  }

  export type historial_cobrosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
    usuario_id?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cobrosCreateManyInput = {
    id?: string
    created_at?: Date | string
    cobro_id: string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
    usuario_id: string
  }

  export type historial_cobrosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
  }

  export type historial_cobrosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
    usuario_id?: StringFieldUpdateOperationsInput | string
  }

  export type metodos_pago_cobroCreateInput = {
    id?: string
    metodo_pago: $Enums.MetodoPago
    monto: number
    created_at?: Date | string
    updated_at?: Date | string
    cobros: cobrosCreateNestedOneWithoutMetodos_pago_cobroInput
  }

  export type metodos_pago_cobroUncheckedCreateInput = {
    id?: string
    cobro_id: string
    metodo_pago: $Enums.MetodoPago
    monto: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type metodos_pago_cobroUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    monto?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobros?: cobrosUpdateOneRequiredWithoutMetodos_pago_cobroNestedInput
  }

  export type metodos_pago_cobroUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    monto?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type metodos_pago_cobroCreateManyInput = {
    id?: string
    cobro_id: string
    metodo_pago: $Enums.MetodoPago
    monto: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type metodos_pago_cobroUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    monto?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type metodos_pago_cobroUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    monto?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type serviciosCreateInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutServiciosInput
    organizaciones: organizacionesCreateNestedOneWithoutServiciosInput
  }

  export type serviciosUncheckedCreateInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutServiciosInput
  }

  export type serviciosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutServiciosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type serviciosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutServiciosNestedInput
  }

  export type serviciosCreateManyInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
  }

  export type serviciosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type serviciosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
  }

  export type precios_consultorioCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    concepto: string
    precio: number
    consultorios: consultoriosCreateNestedOneWithoutPrecios_consultorioInput
  }

  export type precios_consultorioUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    concepto: string
    consultorio_id: string
    precio: number
  }

  export type precios_consultorioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    concepto?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    consultorios?: consultoriosUpdateOneRequiredWithoutPrecios_consultorioNestedInput
  }

  export type precios_consultorioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    concepto?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
  }

  export type precios_consultorioCreateManyInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    concepto: string
    consultorio_id: string
    precio: number
  }

  export type precios_consultorioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    concepto?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
  }

  export type precios_consultorioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    concepto?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
  }

  export type configuracion_permisosCreateInput = {
    id?: string
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    consultorios: consultoriosCreateNestedOneWithoutConfiguracion_permisosInput
  }

  export type configuracion_permisosUncheckedCreateInput = {
    id?: string
    consultorio_id: string
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type configuracion_permisosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    secretaria_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    secretaria_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    enfermera_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    enfermera_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    consultorios?: consultoriosUpdateOneRequiredWithoutConfiguracion_permisosNestedInput
  }

  export type configuracion_permisosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    secretaria_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    secretaria_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    enfermera_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    enfermera_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracion_permisosCreateManyInput = {
    id?: string
    consultorio_id: string
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type configuracion_permisosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    secretaria_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    secretaria_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    enfermera_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    enfermera_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracion_permisosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    secretaria_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    secretaria_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    enfermera_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    enfermera_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type citasCreateInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios: consultoriosCreateNestedOneWithoutCitasInput
    pacientes: pacientesCreateNestedOneWithoutCitasInput
    usuarios: usuariosCreateNestedOneWithoutCitasInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    usuario_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios?: consultoriosUpdateOneRequiredWithoutCitasNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCitasNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCitasNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasCreateManyInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    usuario_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type citasUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type citasUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type disponibilidad_medicoCreateInput = {
    id?: string
    dia_semana: number
    hora_inicio: string
    hora_fin: string
    usuarios: usuariosCreateNestedOneWithoutDisponibilidad_medicoInput
  }

  export type disponibilidad_medicoUncheckedCreateInput = {
    id?: string
    usuario_id: string
    dia_semana: number
    hora_inicio: string
    hora_fin: string
  }

  export type disponibilidad_medicoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dia_semana?: IntFieldUpdateOperationsInput | number
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    usuarios?: usuariosUpdateOneRequiredWithoutDisponibilidad_medicoNestedInput
  }

  export type disponibilidad_medicoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    dia_semana?: IntFieldUpdateOperationsInput | number
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
  }

  export type disponibilidad_medicoCreateManyInput = {
    id?: string
    usuario_id: string
    dia_semana: number
    hora_inicio: string
    hora_fin: string
  }

  export type disponibilidad_medicoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dia_semana?: IntFieldUpdateOperationsInput | number
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
  }

  export type disponibilidad_medicoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    dia_semana?: IntFieldUpdateOperationsInput | number
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
  }

  export type bloqueo_medicoCreateInput = {
    id?: string
    usuario_id: string
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo?: string | null
  }

  export type bloqueo_medicoUncheckedCreateInput = {
    id?: string
    usuario_id: string
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo?: string | null
  }

  export type bloqueo_medicoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bloqueo_medicoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bloqueo_medicoCreateManyInput = {
    id?: string
    usuario_id: string
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo?: string | null
  }

  export type bloqueo_medicoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bloqueo_medicoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutProductInput
    Movement?: MovementCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutProductInput
    Movement?: MovementUncheckedCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenUncheckedCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutProductNestedInput
    Movement?: MovementUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutProductNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUncheckedUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SedeCreateInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutSedeInput
    Movement?: MovementCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeCreateNestedManyWithoutSedeInput
    User?: UserCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutSedeInput
    Movement?: MovementUncheckedCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutSedeInput
    User?: UserUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutSedeNestedInput
    Movement?: MovementUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutSedeNestedInput
    User?: UserUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutSedeNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutSedeNestedInput
    User?: UserUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type SedeCreateManyInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SedeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SedeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutUserInput
    Movement?: MovementCreateNestedManyWithoutUserInput
    Sede: SedeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    sedeId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutUserInput
    Movement?: MovementUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutUserNestedInput
    Movement?: MovementUpdateManyWithoutUserNestedInput
    Sede?: SedeUpdateOneRequiredWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    sedeId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutUserNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    sedeId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    sedeId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageCreateInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    pacientes?: pacientesCreateNestedOneWithoutInventoryUsageInput
    sede: SedeCreateNestedOneWithoutInventoryUsageInput
    user: UserCreateNestedOneWithoutInventoryUsageInput
    details?: InventoryUsageDetailCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageUncheckedCreateInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    sedeId: string
    updatedAt?: Date | string
    userId: string
    pacienteId?: string | null
    details?: InventoryUsageDetailUncheckedCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes?: pacientesUpdateOneWithoutInventoryUsageNestedInput
    sede?: SedeUpdateOneRequiredWithoutInventoryUsageNestedInput
    user?: UserUpdateOneRequiredWithoutInventoryUsageNestedInput
    details?: InventoryUsageDetailUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sedeId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    pacienteId?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InventoryUsageDetailUncheckedUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageCreateManyInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    sedeId: string
    updatedAt?: Date | string
    userId: string
    pacienteId?: string | null
  }

  export type InventoryUsageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sedeId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    pacienteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryUsageDetailCreateInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
    inventoryUsage: InventoryUsageCreateNestedOneWithoutDetailsInput
    movement?: MovementCreateNestedOneWithoutInventoryUsageDetailInput
    product: ProductCreateNestedOneWithoutInventoryUsageDetailInput
  }

  export type InventoryUsageDetailUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    inventoryUsageId: string
    movementId?: string | null
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryUsage?: InventoryUsageUpdateOneRequiredWithoutDetailsNestedInput
    movement?: MovementUpdateOneWithoutInventoryUsageDetailNestedInput
    product?: ProductUpdateOneRequiredWithoutInventoryUsageDetailNestedInput
  }

  export type InventoryUsageDetailUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    inventoryUsageId?: StringFieldUpdateOperationsInput | string
    movementId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailCreateManyInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    inventoryUsageId: string
    movementId?: string | null
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    inventoryUsageId?: StringFieldUpdateOperationsInput | string
    movementId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovementCreateInput = {
    id?: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutMovementInput
    product: ProductCreateNestedOneWithoutMovementInput
    sede: SedeCreateNestedOneWithoutMovementInput
    user: UserCreateNestedOneWithoutMovementInput
  }

  export type MovementUncheckedCreateInput = {
    id?: string
    userId: string
    sedeId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutMovementInput
  }

  export type MovementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutMovementNestedInput
    product?: ProductUpdateOneRequiredWithoutMovementNestedInput
    sede?: SedeUpdateOneRequiredWithoutMovementNestedInput
    user?: UserUpdateOneRequiredWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutMovementNestedInput
  }

  export type MovementCreateManyInput = {
    id?: string
    userId: string
    sedeId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
  }

  export type MovementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBySedeCreateInput = {
    id?: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutStockBySedeInput
    sede: SedeCreateNestedOneWithoutStockBySedeInput
  }

  export type StockBySedeUncheckedCreateInput = {
    id?: string
    productId: string
    sedeId: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBySedeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutStockBySedeNestedInput
    sede?: SedeUpdateOneRequiredWithoutStockBySedeNestedInput
  }

  export type StockBySedeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBySedeCreateManyInput = {
    id?: string
    productId: string
    sedeId: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBySedeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBySedeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductExpirationCreateInput = {
    id?: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductExpirationInput
    sede: SedeCreateNestedOneWithoutProductExpirationInput
  }

  export type ProductExpirationUncheckedCreateInput = {
    id?: string
    productId: string
    sedeId: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductExpirationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductExpirationNestedInput
    sede?: SedeUpdateOneRequiredWithoutProductExpirationNestedInput
  }

  export type ProductExpirationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductExpirationCreateManyInput = {
    id?: string
    productId: string
    sedeId: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductExpirationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductExpirationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AllergenCreateInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    alxoidType?: $Enums.AlxoidType | null
    isAlxoidExclusive?: boolean
    ProductAllergen?: ProductAllergenCreateNestedManyWithoutAllergenInput
  }

  export type AllergenUncheckedCreateInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    alxoidType?: $Enums.AlxoidType | null
    isAlxoidExclusive?: boolean
    ProductAllergen?: ProductAllergenUncheckedCreateNestedManyWithoutAllergenInput
  }

  export type AllergenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alxoidType?: NullableEnumAlxoidTypeFieldUpdateOperationsInput | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFieldUpdateOperationsInput | boolean
    ProductAllergen?: ProductAllergenUpdateManyWithoutAllergenNestedInput
  }

  export type AllergenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alxoidType?: NullableEnumAlxoidTypeFieldUpdateOperationsInput | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFieldUpdateOperationsInput | boolean
    ProductAllergen?: ProductAllergenUncheckedUpdateManyWithoutAllergenNestedInput
  }

  export type AllergenCreateManyInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    alxoidType?: $Enums.AlxoidType | null
    isAlxoidExclusive?: boolean
  }

  export type AllergenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alxoidType?: NullableEnumAlxoidTypeFieldUpdateOperationsInput | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AllergenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alxoidType?: NullableEnumAlxoidTypeFieldUpdateOperationsInput | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductAllergenCreateInput = {
    id?: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
    allergen: AllergenCreateNestedOneWithoutProductAllergenInput
    product: ProductCreateNestedOneWithoutProductAllergenInput
  }

  export type ProductAllergenUncheckedCreateInput = {
    id?: string
    productId: string
    allergenId: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductAllergenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    allergen?: AllergenUpdateOneRequiredWithoutProductAllergenNestedInput
    product?: ProductUpdateOneRequiredWithoutProductAllergenNestedInput
  }

  export type ProductAllergenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    allergenId?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAllergenCreateManyInput = {
    id?: string
    productId: string
    allergenId: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductAllergenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAllergenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    allergenId?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierCreateInput = {
    id?: string
    name: string
    invoiceNumber?: string | null
    amountSupplied: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierUncheckedCreateInput = {
    id?: string
    name: string
    invoiceNumber?: string | null
    amountSupplied: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amountSupplied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amountSupplied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierCreateManyInput = {
    id?: string
    name: string
    invoiceNumber?: string | null
    amountSupplied: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amountSupplied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amountSupplied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_configCreateInput = {
    id?: string
    whatsapp_business_id?: string | null
    phone_number_id?: string | null
    access_token?: string | null
    webhook_verify_token?: string | null
    is_active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    usuarios: usuariosCreateNestedOneWithoutWhatsapp_configInput
  }

  export type whatsapp_configUncheckedCreateInput = {
    id?: string
    usuario_id: string
    whatsapp_business_id?: string | null
    phone_number_id?: string | null
    access_token?: string | null
    webhook_verify_token?: string | null
    is_active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type whatsapp_configUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    whatsapp_business_id?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number_id?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    webhook_verify_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: usuariosUpdateOneRequiredWithoutWhatsapp_configNestedInput
  }

  export type whatsapp_configUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    whatsapp_business_id?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number_id?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    webhook_verify_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_configCreateManyInput = {
    id?: string
    usuario_id: string
    whatsapp_business_id?: string | null
    phone_number_id?: string | null
    access_token?: string | null
    webhook_verify_token?: string | null
    is_active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type whatsapp_configUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    whatsapp_business_id?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number_id?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    webhook_verify_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_configUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    whatsapp_business_id?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number_id?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    webhook_verify_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_templatesCreateInput = {
    id?: string
    name: string
    language?: string
    category: string
    components: JsonNullValueInput | InputJsonValue
    status?: string
    created_at?: Date | string
    updated_at: Date | string
    usuarios: usuariosCreateNestedOneWithoutWhatsapp_templatesInput
  }

  export type whatsapp_templatesUncheckedCreateInput = {
    id?: string
    usuario_id: string
    name: string
    language?: string
    category: string
    components: JsonNullValueInput | InputJsonValue
    status?: string
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_templatesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    components?: JsonNullValueInput | InputJsonValue
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: usuariosUpdateOneRequiredWithoutWhatsapp_templatesNestedInput
  }

  export type whatsapp_templatesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    components?: JsonNullValueInput | InputJsonValue
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_templatesCreateManyInput = {
    id?: string
    usuario_id: string
    name: string
    language?: string
    category: string
    components: JsonNullValueInput | InputJsonValue
    status?: string
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_templatesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    components?: JsonNullValueInput | InputJsonValue
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_templatesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    components?: JsonNullValueInput | InputJsonValue
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_messagesCreateInput = {
    id?: string
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
    citas?: citasCreateNestedOneWithoutWhatsapp_messagesInput
    pacientes?: pacientesCreateNestedOneWithoutWhatsapp_messagesInput
    usuarios: usuariosCreateNestedOneWithoutWhatsapp_messagesInput
  }

  export type whatsapp_messagesUncheckedCreateInput = {
    id?: string
    usuario_id: string
    paciente_id?: string | null
    cita_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_messagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateOneWithoutWhatsapp_messagesNestedInput
    pacientes?: pacientesUpdateOneWithoutWhatsapp_messagesNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutWhatsapp_messagesNestedInput
  }

  export type whatsapp_messagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    paciente_id?: NullableStringFieldUpdateOperationsInput | string | null
    cita_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_messagesCreateManyInput = {
    id?: string
    usuario_id: string
    paciente_id?: string | null
    cita_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_messagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_messagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    paciente_id?: NullableStringFieldUpdateOperationsInput | string | null
    cita_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_remindersCreateInput = {
    id?: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
    citas: citasCreateNestedOneWithoutWhatsapp_remindersInput
    usuarios: usuariosCreateNestedOneWithoutWhatsapp_remindersInput
  }

  export type whatsapp_remindersUncheckedCreateInput = {
    id?: string
    usuario_id: string
    cita_id: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_remindersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateOneRequiredWithoutWhatsapp_remindersNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutWhatsapp_remindersNestedInput
  }

  export type whatsapp_remindersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    cita_id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_remindersCreateManyInput = {
    id?: string
    usuario_id: string
    cita_id: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_remindersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_remindersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    cita_id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ConsultoriosListRelationFilter = {
    every?: consultoriosWhereInput
    some?: consultoriosWhereInput
    none?: consultoriosWhereInput
  }

  export type PacientesListRelationFilter = {
    every?: pacientesWhereInput
    some?: pacientesWhereInput
    none?: pacientesWhereInput
  }

  export type ServiciosListRelationFilter = {
    every?: serviciosWhereInput
    some?: serviciosWhereInput
    none?: serviciosWhereInput
  }

  export type UsuariosListRelationFilter = {
    every?: usuariosWhereInput
    some?: usuariosWhereInput
    none?: usuariosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type consultoriosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pacientesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type serviciosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type organizacionesCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    logo_url?: SortOrder
    color_primario?: SortOrder
    color_secundario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type organizacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    logo_url?: SortOrder
    color_primario?: SortOrder
    color_secundario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type organizacionesMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    logo_url?: SortOrder
    color_primario?: SortOrder
    color_secundario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumRolFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolFilter<$PrismaModel> | $Enums.Rol
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type CitasListRelationFilter = {
    every?: citasWhereInput
    some?: citasWhereInput
    none?: citasWhereInput
  }

  export type CobrosListRelationFilter = {
    every?: cobrosWhereInput
    some?: cobrosWhereInput
    none?: cobrosWhereInput
  }

  export type Disponibilidad_medicoListRelationFilter = {
    every?: disponibilidad_medicoWhereInput
    some?: disponibilidad_medicoWhereInput
    none?: disponibilidad_medicoWhereInput
  }

  export type Historial_cobrosListRelationFilter = {
    every?: historial_cobrosWhereInput
    some?: historial_cobrosWhereInput
    none?: historial_cobrosWhereInput
  }

  export type OrganizacionesScalarRelationFilter = {
    is?: organizacionesWhereInput
    isNot?: organizacionesWhereInput
  }

  export type ConsultoriosScalarRelationFilter = {
    is?: consultoriosWhereInput
    isNot?: consultoriosWhereInput
  }

  export type Whatsapp_configNullableScalarRelationFilter = {
    is?: whatsapp_configWhereInput | null
    isNot?: whatsapp_configWhereInput | null
  }

  export type Whatsapp_messagesListRelationFilter = {
    every?: whatsapp_messagesWhereInput
    some?: whatsapp_messagesWhereInput
    none?: whatsapp_messagesWhereInput
  }

  export type Whatsapp_remindersListRelationFilter = {
    every?: whatsapp_remindersWhereInput
    some?: whatsapp_remindersWhereInput
    none?: whatsapp_remindersWhereInput
  }

  export type Whatsapp_templatesListRelationFilter = {
    every?: whatsapp_templatesWhereInput
    some?: whatsapp_templatesWhereInput
    none?: whatsapp_templatesWhereInput
  }

  export type citasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cobrosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type disponibilidad_medicoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type historial_cobrosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type whatsapp_messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type whatsapp_remindersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type whatsapp_templatesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuariosEmailOrganizacion_idCompoundUniqueInput = {
    email: string
    organizacion_id: string
  }

  export type usuariosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    rol?: SortOrder
    apellido?: SortOrder
    consultorio_id?: SortOrder
    googleAccessToken?: SortOrder
    googleRefreshToken?: SortOrder
    googleTokenExpiry?: SortOrder
    googleCalendarId?: SortOrder
    organizacion_id?: SortOrder
    puede_editar_cobros?: SortOrder
    puede_eliminar_cobros?: SortOrder
    puede_gestionar_usuarios?: SortOrder
    puede_ver_historial?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    rol?: SortOrder
    apellido?: SortOrder
    consultorio_id?: SortOrder
    googleAccessToken?: SortOrder
    googleRefreshToken?: SortOrder
    googleTokenExpiry?: SortOrder
    googleCalendarId?: SortOrder
    organizacion_id?: SortOrder
    puede_editar_cobros?: SortOrder
    puede_eliminar_cobros?: SortOrder
    puede_gestionar_usuarios?: SortOrder
    puede_ver_historial?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    rol?: SortOrder
    apellido?: SortOrder
    consultorio_id?: SortOrder
    googleAccessToken?: SortOrder
    googleRefreshToken?: SortOrder
    googleTokenExpiry?: SortOrder
    googleCalendarId?: SortOrder
    organizacion_id?: SortOrder
    puede_editar_cobros?: SortOrder
    puede_eliminar_cobros?: SortOrder
    puede_gestionar_usuarios?: SortOrder
    puede_ver_historial?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumRolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolWithAggregatesFilter<$PrismaModel> | $Enums.Rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolFilter<$PrismaModel>
    _max?: NestedEnumRolFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type InventoryUsageListRelationFilter = {
    every?: InventoryUsageWhereInput
    some?: InventoryUsageWhereInput
    none?: InventoryUsageWhereInput
  }

  export type InventoryUsageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pacientesEmailOrganizacion_idCompoundUniqueInput = {
    email: string
    organizacion_id: string
  }

  export type pacientesCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fecha_nacimiento?: SortOrder
    genero?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    documento_identidad?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    apellido?: SortOrder
    organizacion_id?: SortOrder
  }

  export type pacientesMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fecha_nacimiento?: SortOrder
    genero?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    documento_identidad?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    apellido?: SortOrder
    organizacion_id?: SortOrder
  }

  export type pacientesMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fecha_nacimiento?: SortOrder
    genero?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    documento_identidad?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    apellido?: SortOrder
    organizacion_id?: SortOrder
  }

  export type Cobro_conceptosListRelationFilter = {
    every?: cobro_conceptosWhereInput
    some?: cobro_conceptosWhereInput
    none?: cobro_conceptosWhereInput
  }

  export type Configuracion_permisosNullableScalarRelationFilter = {
    is?: configuracion_permisosWhereInput | null
    isNot?: configuracion_permisosWhereInput | null
  }

  export type Precios_consultorioListRelationFilter = {
    every?: precios_consultorioWhereInput
    some?: precios_consultorioWhereInput
    none?: precios_consultorioWhereInput
  }

  export type cobro_conceptosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type precios_consultorioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type consultoriosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
  }

  export type consultoriosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
  }

  export type consultoriosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumEstadoCobroFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCobro | EnumEstadoCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCobroFilter<$PrismaModel> | $Enums.EstadoCobro
  }

  export type EnumMetodoPagoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel> | null
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumMetodoPagoNullableFilter<$PrismaModel> | $Enums.MetodoPago | null
  }

  export type PacientesScalarRelationFilter = {
    is?: pacientesWhereInput
    isNot?: pacientesWhereInput
  }

  export type UsuariosScalarRelationFilter = {
    is?: usuariosWhereInput
    isNot?: usuariosWhereInput
  }

  export type Metodos_pago_cobroListRelationFilter = {
    every?: metodos_pago_cobroWhereInput
    some?: metodos_pago_cobroWhereInput
    none?: metodos_pago_cobroWhereInput
  }

  export type metodos_pago_cobroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cobrosCountOrderByAggregateInput = {
    id?: SortOrder
    fecha_cobro?: SortOrder
    monto_total?: SortOrder
    notas?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    estado?: SortOrder
    metodo_pago?: SortOrder
  }

  export type cobrosAvgOrderByAggregateInput = {
    monto_total?: SortOrder
  }

  export type cobrosMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha_cobro?: SortOrder
    monto_total?: SortOrder
    notas?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    estado?: SortOrder
    metodo_pago?: SortOrder
  }

  export type cobrosMinOrderByAggregateInput = {
    id?: SortOrder
    fecha_cobro?: SortOrder
    monto_total?: SortOrder
    notas?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    estado?: SortOrder
    metodo_pago?: SortOrder
  }

  export type cobrosSumOrderByAggregateInput = {
    monto_total?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumEstadoCobroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCobro | EnumEstadoCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCobroWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCobro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoCobroFilter<$PrismaModel>
    _max?: NestedEnumEstadoCobroFilter<$PrismaModel>
  }

  export type EnumMetodoPagoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel> | null
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumMetodoPagoNullableWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoNullableFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type CobrosScalarRelationFilter = {
    is?: cobrosWhereInput
    isNot?: cobrosWhereInput
  }

  export type ServiciosScalarRelationFilter = {
    is?: serviciosWhereInput
    isNot?: serviciosWhereInput
  }

  export type cobro_conceptosCountOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    subtotal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cobro_id?: SortOrder
    consultorio_id?: SortOrder
    precio_unitario?: SortOrder
    servicio_id?: SortOrder
  }

  export type cobro_conceptosAvgOrderByAggregateInput = {
    cantidad?: SortOrder
    subtotal?: SortOrder
    precio_unitario?: SortOrder
  }

  export type cobro_conceptosMaxOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    subtotal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cobro_id?: SortOrder
    consultorio_id?: SortOrder
    precio_unitario?: SortOrder
    servicio_id?: SortOrder
  }

  export type cobro_conceptosMinOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    subtotal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cobro_id?: SortOrder
    consultorio_id?: SortOrder
    precio_unitario?: SortOrder
    servicio_id?: SortOrder
  }

  export type cobro_conceptosSumOrderByAggregateInput = {
    cantidad?: SortOrder
    subtotal?: SortOrder
    precio_unitario?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumTipoCambioFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCambio | EnumTipoCambioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCambioFilter<$PrismaModel> | $Enums.TipoCambio
  }

  export type historial_cobrosCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    cobro_id?: SortOrder
    detalles_antes?: SortOrder
    detalles_despues?: SortOrder
    tipo_cambio?: SortOrder
    usuario_id?: SortOrder
  }

  export type historial_cobrosMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    cobro_id?: SortOrder
    tipo_cambio?: SortOrder
    usuario_id?: SortOrder
  }

  export type historial_cobrosMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    cobro_id?: SortOrder
    tipo_cambio?: SortOrder
    usuario_id?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumTipoCambioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCambio | EnumTipoCambioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCambioWithAggregatesFilter<$PrismaModel> | $Enums.TipoCambio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoCambioFilter<$PrismaModel>
    _max?: NestedEnumTipoCambioFilter<$PrismaModel>
  }

  export type EnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }

  export type metodos_pago_cobroCountOrderByAggregateInput = {
    id?: SortOrder
    cobro_id?: SortOrder
    metodo_pago?: SortOrder
    monto?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type metodos_pago_cobroAvgOrderByAggregateInput = {
    monto?: SortOrder
  }

  export type metodos_pago_cobroMaxOrderByAggregateInput = {
    id?: SortOrder
    cobro_id?: SortOrder
    metodo_pago?: SortOrder
    monto?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type metodos_pago_cobroMinOrderByAggregateInput = {
    id?: SortOrder
    cobro_id?: SortOrder
    metodo_pago?: SortOrder
    monto?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type metodos_pago_cobroSumOrderByAggregateInput = {
    monto?: SortOrder
  }

  export type EnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }

  export type serviciosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio_base?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
  }

  export type serviciosAvgOrderByAggregateInput = {
    precio_base?: SortOrder
  }

  export type serviciosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio_base?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
  }

  export type serviciosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio_base?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    organizacion_id?: SortOrder
  }

  export type serviciosSumOrderByAggregateInput = {
    precio_base?: SortOrder
  }

  export type precios_consultorioCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    concepto?: SortOrder
    consultorio_id?: SortOrder
    precio?: SortOrder
  }

  export type precios_consultorioAvgOrderByAggregateInput = {
    precio?: SortOrder
  }

  export type precios_consultorioMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    concepto?: SortOrder
    consultorio_id?: SortOrder
    precio?: SortOrder
  }

  export type precios_consultorioMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    concepto?: SortOrder
    consultorio_id?: SortOrder
    precio?: SortOrder
  }

  export type precios_consultorioSumOrderByAggregateInput = {
    precio?: SortOrder
  }

  export type configuracion_permisosCountOrderByAggregateInput = {
    id?: SortOrder
    consultorio_id?: SortOrder
    secretaria_editar_cobros?: SortOrder
    secretaria_eliminar_cobros?: SortOrder
    enfermera_entradas_inventario?: SortOrder
    enfermera_salidas_inventario?: SortOrder
    secretaria_entradas_inventario?: SortOrder
    secretaria_salidas_inventario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configuracion_permisosMaxOrderByAggregateInput = {
    id?: SortOrder
    consultorio_id?: SortOrder
    secretaria_editar_cobros?: SortOrder
    secretaria_eliminar_cobros?: SortOrder
    enfermera_entradas_inventario?: SortOrder
    enfermera_salidas_inventario?: SortOrder
    secretaria_entradas_inventario?: SortOrder
    secretaria_salidas_inventario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configuracion_permisosMinOrderByAggregateInput = {
    id?: SortOrder
    consultorio_id?: SortOrder
    secretaria_editar_cobros?: SortOrder
    secretaria_eliminar_cobros?: SortOrder
    enfermera_entradas_inventario?: SortOrder
    enfermera_salidas_inventario?: SortOrder
    secretaria_entradas_inventario?: SortOrder
    secretaria_salidas_inventario?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type EnumEstadoCitaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCita | EnumEstadoCitaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCitaFilter<$PrismaModel> | $Enums.EstadoCita
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type citasCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    consultorio_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    color?: SortOrder
    fecha_fin?: SortOrder
    fecha_inicio?: SortOrder
    es_recurrente?: SortOrder
    regla_recurrencia?: SortOrder
    id_serie?: SortOrder
    googleEventId?: SortOrder
    exdates?: SortOrder
  }

  export type citasMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    consultorio_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    color?: SortOrder
    fecha_fin?: SortOrder
    fecha_inicio?: SortOrder
    es_recurrente?: SortOrder
    regla_recurrencia?: SortOrder
    id_serie?: SortOrder
    googleEventId?: SortOrder
  }

  export type citasMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    paciente_id?: SortOrder
    usuario_id?: SortOrder
    consultorio_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    color?: SortOrder
    fecha_fin?: SortOrder
    fecha_inicio?: SortOrder
    es_recurrente?: SortOrder
    regla_recurrencia?: SortOrder
    id_serie?: SortOrder
    googleEventId?: SortOrder
  }

  export type EnumEstadoCitaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCita | EnumEstadoCitaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCitaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCita
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoCitaFilter<$PrismaModel>
    _max?: NestedEnumEstadoCitaFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type disponibilidad_medicoCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
  }

  export type disponibilidad_medicoAvgOrderByAggregateInput = {
    dia_semana?: SortOrder
  }

  export type disponibilidad_medicoMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
  }

  export type disponibilidad_medicoMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
  }

  export type disponibilidad_medicoSumOrderByAggregateInput = {
    dia_semana?: SortOrder
  }

  export type bloqueo_medicoCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
  }

  export type bloqueo_medicoMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
  }

  export type bloqueo_medicoMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
  }

  export type EnumProductTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeFilter<$PrismaModel> | $Enums.ProductType
  }

  export type EnumProductUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductUnit | EnumProductUnitFieldRefInput<$PrismaModel>
    in?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumProductUnitFilter<$PrismaModel> | $Enums.ProductUnit
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type InventoryUsageDetailListRelationFilter = {
    every?: InventoryUsageDetailWhereInput
    some?: InventoryUsageDetailWhereInput
    none?: InventoryUsageDetailWhereInput
  }

  export type MovementListRelationFilter = {
    every?: MovementWhereInput
    some?: MovementWhereInput
    none?: MovementWhereInput
  }

  export type ProductAllergenListRelationFilter = {
    every?: ProductAllergenWhereInput
    some?: ProductAllergenWhereInput
    none?: ProductAllergenWhereInput
  }

  export type ProductExpirationListRelationFilter = {
    every?: ProductExpirationWhereInput
    some?: ProductExpirationWhereInput
    none?: ProductExpirationWhereInput
  }

  export type StockBySedeListRelationFilter = {
    every?: StockBySedeWhereInput
    some?: StockBySedeWhereInput
    none?: StockBySedeWhereInput
  }

  export type InventoryUsageDetailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MovementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductAllergenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductExpirationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockBySedeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    unit?: SortOrder
    description?: SortOrder
    costPerUnit?: SortOrder
    minStockLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    costPerUnit?: SortOrder
    minStockLevel?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    unit?: SortOrder
    description?: SortOrder
    costPerUnit?: SortOrder
    minStockLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    unit?: SortOrder
    description?: SortOrder
    costPerUnit?: SortOrder
    minStockLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    costPerUnit?: SortOrder
    minStockLevel?: SortOrder
  }

  export type EnumProductTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductTypeFilter<$PrismaModel>
    _max?: NestedEnumProductTypeFilter<$PrismaModel>
  }

  export type EnumProductUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductUnit | EnumProductUnitFieldRefInput<$PrismaModel>
    in?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumProductUnitWithAggregatesFilter<$PrismaModel> | $Enums.ProductUnit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductUnitFilter<$PrismaModel>
    _max?: NestedEnumProductUnitFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SedeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SedeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SedeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type SedeScalarRelationFilter = {
    is?: SedeWhereInput
    isNot?: SedeWhereInput
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    sedeId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    sedeId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    sedeId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type EnumTipoTratamientoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTratamiento | EnumTipoTratamientoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTratamientoFilter<$PrismaModel> | $Enums.TipoTratamiento
  }

  export type PacientesNullableScalarRelationFilter = {
    is?: pacientesWhereInput | null
    isNot?: pacientesWhereInput | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type InventoryUsageCountOrderByAggregateInput = {
    id?: SortOrder
    nombrePaciente?: SortOrder
    tipoTratamiento?: SortOrder
    observaciones?: SortOrder
    tuvoReaccion?: SortOrder
    descripcionReaccion?: SortOrder
    createdAt?: SortOrder
    sedeId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    pacienteId?: SortOrder
  }

  export type InventoryUsageMaxOrderByAggregateInput = {
    id?: SortOrder
    nombrePaciente?: SortOrder
    tipoTratamiento?: SortOrder
    observaciones?: SortOrder
    tuvoReaccion?: SortOrder
    descripcionReaccion?: SortOrder
    createdAt?: SortOrder
    sedeId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    pacienteId?: SortOrder
  }

  export type InventoryUsageMinOrderByAggregateInput = {
    id?: SortOrder
    nombrePaciente?: SortOrder
    tipoTratamiento?: SortOrder
    observaciones?: SortOrder
    tuvoReaccion?: SortOrder
    descripcionReaccion?: SortOrder
    createdAt?: SortOrder
    sedeId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    pacienteId?: SortOrder
  }

  export type EnumTipoTratamientoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTratamiento | EnumTipoTratamientoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTratamientoWithAggregatesFilter<$PrismaModel> | $Enums.TipoTratamiento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoTratamientoFilter<$PrismaModel>
    _max?: NestedEnumTipoTratamientoFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type InventoryUsageScalarRelationFilter = {
    is?: InventoryUsageWhereInput
    isNot?: InventoryUsageWhereInput
  }

  export type MovementNullableScalarRelationFilter = {
    is?: MovementWhereInput | null
    isNot?: MovementWhereInput | null
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type InventoryUsageDetailCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    doses?: SortOrder
    frascoLevel?: SortOrder
    inventoryUsageId?: SortOrder
    movementId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    totalCost?: SortOrder
    unitCost?: SortOrder
    units?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryUsageDetailAvgOrderByAggregateInput = {
    doses?: SortOrder
    frascoLevel?: SortOrder
    quantity?: SortOrder
    totalCost?: SortOrder
    unitCost?: SortOrder
    units?: SortOrder
  }

  export type InventoryUsageDetailMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    doses?: SortOrder
    frascoLevel?: SortOrder
    inventoryUsageId?: SortOrder
    movementId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    totalCost?: SortOrder
    unitCost?: SortOrder
    units?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryUsageDetailMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    doses?: SortOrder
    frascoLevel?: SortOrder
    inventoryUsageId?: SortOrder
    movementId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    totalCost?: SortOrder
    unitCost?: SortOrder
    units?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryUsageDetailSumOrderByAggregateInput = {
    doses?: SortOrder
    frascoLevel?: SortOrder
    quantity?: SortOrder
    totalCost?: SortOrder
    unitCost?: SortOrder
    units?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumMovementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeFilter<$PrismaModel> | $Enums.MovementType
  }

  export type MovementCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sedeId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
  }

  export type MovementAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type MovementMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sedeId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
  }

  export type MovementMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sedeId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
  }

  export type MovementSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type EnumMovementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel> | $Enums.MovementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMovementTypeFilter<$PrismaModel>
    _max?: NestedEnumMovementTypeFilter<$PrismaModel>
  }

  export type StockBySedeProductIdSedeIdCompoundUniqueInput = {
    productId: string
    sedeId: string
  }

  export type StockBySedeCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockBySedeAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type StockBySedeMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockBySedeMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockBySedeSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type ProductExpirationCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductExpirationAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type ProductExpirationMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductExpirationMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    sedeId?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductExpirationSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type EnumAlxoidTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AlxoidType | EnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAlxoidTypeNullableFilter<$PrismaModel> | $Enums.AlxoidType | null
  }

  export type AllergenCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    alxoidType?: SortOrder
    isAlxoidExclusive?: SortOrder
  }

  export type AllergenMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    alxoidType?: SortOrder
    isAlxoidExclusive?: SortOrder
  }

  export type AllergenMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    alxoidType?: SortOrder
    isAlxoidExclusive?: SortOrder
  }

  export type EnumAlxoidTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlxoidType | EnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAlxoidTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.AlxoidType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAlxoidTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumAlxoidTypeNullableFilter<$PrismaModel>
  }

  export type AllergenScalarRelationFilter = {
    is?: AllergenWhereInput
    isNot?: AllergenWhereInput
  }

  export type ProductAllergenProductIdAllergenIdCompoundUniqueInput = {
    productId: string
    allergenId: string
  }

  export type ProductAllergenCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    allergenId?: SortOrder
    mlPerDose?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAllergenAvgOrderByAggregateInput = {
    mlPerDose?: SortOrder
  }

  export type ProductAllergenMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    allergenId?: SortOrder
    mlPerDose?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAllergenMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    allergenId?: SortOrder
    mlPerDose?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAllergenSumOrderByAggregateInput = {
    mlPerDose?: SortOrder
  }

  export type SupplierCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    invoiceNumber?: SortOrder
    amountSupplied?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierAvgOrderByAggregateInput = {
    amountSupplied?: SortOrder
  }

  export type SupplierMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    invoiceNumber?: SortOrder
    amountSupplied?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    invoiceNumber?: SortOrder
    amountSupplied?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierSumOrderByAggregateInput = {
    amountSupplied?: SortOrder
  }

  export type whatsapp_configCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    whatsapp_business_id?: SortOrder
    phone_number_id?: SortOrder
    access_token?: SortOrder
    webhook_verify_token?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_configMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    whatsapp_business_id?: SortOrder
    phone_number_id?: SortOrder
    access_token?: SortOrder
    webhook_verify_token?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_configMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    whatsapp_business_id?: SortOrder
    phone_number_id?: SortOrder
    access_token?: SortOrder
    webhook_verify_token?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_templatesCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    name?: SortOrder
    language?: SortOrder
    category?: SortOrder
    components?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_templatesMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    name?: SortOrder
    language?: SortOrder
    category?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_templatesMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    name?: SortOrder
    language?: SortOrder
    category?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type EnumWhatsAppMessageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.WhatsAppMessageStatus | EnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumWhatsAppMessageStatusFilter<$PrismaModel> | $Enums.WhatsAppMessageStatus
  }

  export type CitasNullableScalarRelationFilter = {
    is?: citasWhereInput | null
    isNot?: citasWhereInput | null
  }

  export type whatsapp_messagesCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    paciente_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    message_type?: SortOrder
    content?: SortOrder
    phone_number?: SortOrder
    status?: SortOrder
    whatsapp_message_id?: SortOrder
    error_message?: SortOrder
    sent_at?: SortOrder
    delivered_at?: SortOrder
    read_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_messagesMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    paciente_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    message_type?: SortOrder
    phone_number?: SortOrder
    status?: SortOrder
    whatsapp_message_id?: SortOrder
    error_message?: SortOrder
    sent_at?: SortOrder
    delivered_at?: SortOrder
    read_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_messagesMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    paciente_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    message_type?: SortOrder
    phone_number?: SortOrder
    status?: SortOrder
    whatsapp_message_id?: SortOrder
    error_message?: SortOrder
    sent_at?: SortOrder
    delivered_at?: SortOrder
    read_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type EnumWhatsAppMessageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WhatsAppMessageStatus | EnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumWhatsAppMessageStatusWithAggregatesFilter<$PrismaModel> | $Enums.WhatsAppMessageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWhatsAppMessageStatusFilter<$PrismaModel>
    _max?: NestedEnumWhatsAppMessageStatusFilter<$PrismaModel>
  }

  export type CitasScalarRelationFilter = {
    is?: citasWhereInput
    isNot?: citasWhereInput
  }

  export type whatsapp_remindersCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    reminder_type?: SortOrder
    scheduled_time?: SortOrder
    is_sent?: SortOrder
    sent_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_remindersMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    reminder_type?: SortOrder
    scheduled_time?: SortOrder
    is_sent?: SortOrder
    sent_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type whatsapp_remindersMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    cita_id?: SortOrder
    template_name?: SortOrder
    reminder_type?: SortOrder
    scheduled_time?: SortOrder
    is_sent?: SortOrder
    sent_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type consultoriosCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<consultoriosCreateWithoutOrganizacionesInput, consultoriosUncheckedCreateWithoutOrganizacionesInput> | consultoriosCreateWithoutOrganizacionesInput[] | consultoriosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: consultoriosCreateOrConnectWithoutOrganizacionesInput | consultoriosCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: consultoriosCreateManyOrganizacionesInputEnvelope
    connect?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
  }

  export type pacientesCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<pacientesCreateWithoutOrganizacionesInput, pacientesUncheckedCreateWithoutOrganizacionesInput> | pacientesCreateWithoutOrganizacionesInput[] | pacientesUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: pacientesCreateOrConnectWithoutOrganizacionesInput | pacientesCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: pacientesCreateManyOrganizacionesInputEnvelope
    connect?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
  }

  export type serviciosCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<serviciosCreateWithoutOrganizacionesInput, serviciosUncheckedCreateWithoutOrganizacionesInput> | serviciosCreateWithoutOrganizacionesInput[] | serviciosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutOrganizacionesInput | serviciosCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: serviciosCreateManyOrganizacionesInputEnvelope
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
  }

  export type usuariosCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<usuariosCreateWithoutOrganizacionesInput, usuariosUncheckedCreateWithoutOrganizacionesInput> | usuariosCreateWithoutOrganizacionesInput[] | usuariosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutOrganizacionesInput | usuariosCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: usuariosCreateManyOrganizacionesInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type consultoriosUncheckedCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<consultoriosCreateWithoutOrganizacionesInput, consultoriosUncheckedCreateWithoutOrganizacionesInput> | consultoriosCreateWithoutOrganizacionesInput[] | consultoriosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: consultoriosCreateOrConnectWithoutOrganizacionesInput | consultoriosCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: consultoriosCreateManyOrganizacionesInputEnvelope
    connect?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
  }

  export type pacientesUncheckedCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<pacientesCreateWithoutOrganizacionesInput, pacientesUncheckedCreateWithoutOrganizacionesInput> | pacientesCreateWithoutOrganizacionesInput[] | pacientesUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: pacientesCreateOrConnectWithoutOrganizacionesInput | pacientesCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: pacientesCreateManyOrganizacionesInputEnvelope
    connect?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
  }

  export type serviciosUncheckedCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<serviciosCreateWithoutOrganizacionesInput, serviciosUncheckedCreateWithoutOrganizacionesInput> | serviciosCreateWithoutOrganizacionesInput[] | serviciosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutOrganizacionesInput | serviciosCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: serviciosCreateManyOrganizacionesInputEnvelope
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
  }

  export type usuariosUncheckedCreateNestedManyWithoutOrganizacionesInput = {
    create?: XOR<usuariosCreateWithoutOrganizacionesInput, usuariosUncheckedCreateWithoutOrganizacionesInput> | usuariosCreateWithoutOrganizacionesInput[] | usuariosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutOrganizacionesInput | usuariosCreateOrConnectWithoutOrganizacionesInput[]
    createMany?: usuariosCreateManyOrganizacionesInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type consultoriosUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<consultoriosCreateWithoutOrganizacionesInput, consultoriosUncheckedCreateWithoutOrganizacionesInput> | consultoriosCreateWithoutOrganizacionesInput[] | consultoriosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: consultoriosCreateOrConnectWithoutOrganizacionesInput | consultoriosCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: consultoriosUpsertWithWhereUniqueWithoutOrganizacionesInput | consultoriosUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: consultoriosCreateManyOrganizacionesInputEnvelope
    set?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    disconnect?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    delete?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    connect?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    update?: consultoriosUpdateWithWhereUniqueWithoutOrganizacionesInput | consultoriosUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: consultoriosUpdateManyWithWhereWithoutOrganizacionesInput | consultoriosUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: consultoriosScalarWhereInput | consultoriosScalarWhereInput[]
  }

  export type pacientesUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<pacientesCreateWithoutOrganizacionesInput, pacientesUncheckedCreateWithoutOrganizacionesInput> | pacientesCreateWithoutOrganizacionesInput[] | pacientesUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: pacientesCreateOrConnectWithoutOrganizacionesInput | pacientesCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: pacientesUpsertWithWhereUniqueWithoutOrganizacionesInput | pacientesUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: pacientesCreateManyOrganizacionesInputEnvelope
    set?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    disconnect?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    delete?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    connect?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    update?: pacientesUpdateWithWhereUniqueWithoutOrganizacionesInput | pacientesUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: pacientesUpdateManyWithWhereWithoutOrganizacionesInput | pacientesUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: pacientesScalarWhereInput | pacientesScalarWhereInput[]
  }

  export type serviciosUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<serviciosCreateWithoutOrganizacionesInput, serviciosUncheckedCreateWithoutOrganizacionesInput> | serviciosCreateWithoutOrganizacionesInput[] | serviciosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutOrganizacionesInput | serviciosCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: serviciosUpsertWithWhereUniqueWithoutOrganizacionesInput | serviciosUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: serviciosCreateManyOrganizacionesInputEnvelope
    set?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    disconnect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    delete?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    update?: serviciosUpdateWithWhereUniqueWithoutOrganizacionesInput | serviciosUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: serviciosUpdateManyWithWhereWithoutOrganizacionesInput | serviciosUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
  }

  export type usuariosUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<usuariosCreateWithoutOrganizacionesInput, usuariosUncheckedCreateWithoutOrganizacionesInput> | usuariosCreateWithoutOrganizacionesInput[] | usuariosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutOrganizacionesInput | usuariosCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutOrganizacionesInput | usuariosUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: usuariosCreateManyOrganizacionesInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutOrganizacionesInput | usuariosUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutOrganizacionesInput | usuariosUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type consultoriosUncheckedUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<consultoriosCreateWithoutOrganizacionesInput, consultoriosUncheckedCreateWithoutOrganizacionesInput> | consultoriosCreateWithoutOrganizacionesInput[] | consultoriosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: consultoriosCreateOrConnectWithoutOrganizacionesInput | consultoriosCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: consultoriosUpsertWithWhereUniqueWithoutOrganizacionesInput | consultoriosUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: consultoriosCreateManyOrganizacionesInputEnvelope
    set?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    disconnect?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    delete?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    connect?: consultoriosWhereUniqueInput | consultoriosWhereUniqueInput[]
    update?: consultoriosUpdateWithWhereUniqueWithoutOrganizacionesInput | consultoriosUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: consultoriosUpdateManyWithWhereWithoutOrganizacionesInput | consultoriosUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: consultoriosScalarWhereInput | consultoriosScalarWhereInput[]
  }

  export type pacientesUncheckedUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<pacientesCreateWithoutOrganizacionesInput, pacientesUncheckedCreateWithoutOrganizacionesInput> | pacientesCreateWithoutOrganizacionesInput[] | pacientesUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: pacientesCreateOrConnectWithoutOrganizacionesInput | pacientesCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: pacientesUpsertWithWhereUniqueWithoutOrganizacionesInput | pacientesUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: pacientesCreateManyOrganizacionesInputEnvelope
    set?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    disconnect?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    delete?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    connect?: pacientesWhereUniqueInput | pacientesWhereUniqueInput[]
    update?: pacientesUpdateWithWhereUniqueWithoutOrganizacionesInput | pacientesUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: pacientesUpdateManyWithWhereWithoutOrganizacionesInput | pacientesUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: pacientesScalarWhereInput | pacientesScalarWhereInput[]
  }

  export type serviciosUncheckedUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<serviciosCreateWithoutOrganizacionesInput, serviciosUncheckedCreateWithoutOrganizacionesInput> | serviciosCreateWithoutOrganizacionesInput[] | serviciosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutOrganizacionesInput | serviciosCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: serviciosUpsertWithWhereUniqueWithoutOrganizacionesInput | serviciosUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: serviciosCreateManyOrganizacionesInputEnvelope
    set?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    disconnect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    delete?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    update?: serviciosUpdateWithWhereUniqueWithoutOrganizacionesInput | serviciosUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: serviciosUpdateManyWithWhereWithoutOrganizacionesInput | serviciosUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
  }

  export type usuariosUncheckedUpdateManyWithoutOrganizacionesNestedInput = {
    create?: XOR<usuariosCreateWithoutOrganizacionesInput, usuariosUncheckedCreateWithoutOrganizacionesInput> | usuariosCreateWithoutOrganizacionesInput[] | usuariosUncheckedCreateWithoutOrganizacionesInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutOrganizacionesInput | usuariosCreateOrConnectWithoutOrganizacionesInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutOrganizacionesInput | usuariosUpsertWithWhereUniqueWithoutOrganizacionesInput[]
    createMany?: usuariosCreateManyOrganizacionesInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutOrganizacionesInput | usuariosUpdateWithWhereUniqueWithoutOrganizacionesInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutOrganizacionesInput | usuariosUpdateManyWithWhereWithoutOrganizacionesInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type citasCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<citasCreateWithoutUsuariosInput, citasUncheckedCreateWithoutUsuariosInput> | citasCreateWithoutUsuariosInput[] | citasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutUsuariosInput | citasCreateOrConnectWithoutUsuariosInput[]
    createMany?: citasCreateManyUsuariosInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type cobrosCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<cobrosCreateWithoutUsuariosInput, cobrosUncheckedCreateWithoutUsuariosInput> | cobrosCreateWithoutUsuariosInput[] | cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutUsuariosInput | cobrosCreateOrConnectWithoutUsuariosInput[]
    createMany?: cobrosCreateManyUsuariosInputEnvelope
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
  }

  export type disponibilidad_medicoCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<disponibilidad_medicoCreateWithoutUsuariosInput, disponibilidad_medicoUncheckedCreateWithoutUsuariosInput> | disponibilidad_medicoCreateWithoutUsuariosInput[] | disponibilidad_medicoUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: disponibilidad_medicoCreateOrConnectWithoutUsuariosInput | disponibilidad_medicoCreateOrConnectWithoutUsuariosInput[]
    createMany?: disponibilidad_medicoCreateManyUsuariosInputEnvelope
    connect?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
  }

  export type historial_cobrosCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<historial_cobrosCreateWithoutUsuariosInput, historial_cobrosUncheckedCreateWithoutUsuariosInput> | historial_cobrosCreateWithoutUsuariosInput[] | historial_cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutUsuariosInput | historial_cobrosCreateOrConnectWithoutUsuariosInput[]
    createMany?: historial_cobrosCreateManyUsuariosInputEnvelope
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
  }

  export type organizacionesCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<organizacionesCreateWithoutUsuariosInput, organizacionesUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutUsuariosInput
    connect?: organizacionesWhereUniqueInput
  }

  export type consultoriosCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<consultoriosCreateWithoutUsuariosInput, consultoriosUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutUsuariosInput
    connect?: consultoriosWhereUniqueInput
  }

  export type whatsapp_configCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<whatsapp_configCreateWithoutUsuariosInput, whatsapp_configUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: whatsapp_configCreateOrConnectWithoutUsuariosInput
    connect?: whatsapp_configWhereUniqueInput
  }

  export type whatsapp_messagesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<whatsapp_messagesCreateWithoutUsuariosInput, whatsapp_messagesUncheckedCreateWithoutUsuariosInput> | whatsapp_messagesCreateWithoutUsuariosInput[] | whatsapp_messagesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutUsuariosInput | whatsapp_messagesCreateOrConnectWithoutUsuariosInput[]
    createMany?: whatsapp_messagesCreateManyUsuariosInputEnvelope
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
  }

  export type whatsapp_remindersCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<whatsapp_remindersCreateWithoutUsuariosInput, whatsapp_remindersUncheckedCreateWithoutUsuariosInput> | whatsapp_remindersCreateWithoutUsuariosInput[] | whatsapp_remindersUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutUsuariosInput | whatsapp_remindersCreateOrConnectWithoutUsuariosInput[]
    createMany?: whatsapp_remindersCreateManyUsuariosInputEnvelope
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
  }

  export type whatsapp_templatesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<whatsapp_templatesCreateWithoutUsuariosInput, whatsapp_templatesUncheckedCreateWithoutUsuariosInput> | whatsapp_templatesCreateWithoutUsuariosInput[] | whatsapp_templatesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_templatesCreateOrConnectWithoutUsuariosInput | whatsapp_templatesCreateOrConnectWithoutUsuariosInput[]
    createMany?: whatsapp_templatesCreateManyUsuariosInputEnvelope
    connect?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
  }

  export type citasUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<citasCreateWithoutUsuariosInput, citasUncheckedCreateWithoutUsuariosInput> | citasCreateWithoutUsuariosInput[] | citasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutUsuariosInput | citasCreateOrConnectWithoutUsuariosInput[]
    createMany?: citasCreateManyUsuariosInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type cobrosUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<cobrosCreateWithoutUsuariosInput, cobrosUncheckedCreateWithoutUsuariosInput> | cobrosCreateWithoutUsuariosInput[] | cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutUsuariosInput | cobrosCreateOrConnectWithoutUsuariosInput[]
    createMany?: cobrosCreateManyUsuariosInputEnvelope
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
  }

  export type disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<disponibilidad_medicoCreateWithoutUsuariosInput, disponibilidad_medicoUncheckedCreateWithoutUsuariosInput> | disponibilidad_medicoCreateWithoutUsuariosInput[] | disponibilidad_medicoUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: disponibilidad_medicoCreateOrConnectWithoutUsuariosInput | disponibilidad_medicoCreateOrConnectWithoutUsuariosInput[]
    createMany?: disponibilidad_medicoCreateManyUsuariosInputEnvelope
    connect?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
  }

  export type historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<historial_cobrosCreateWithoutUsuariosInput, historial_cobrosUncheckedCreateWithoutUsuariosInput> | historial_cobrosCreateWithoutUsuariosInput[] | historial_cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutUsuariosInput | historial_cobrosCreateOrConnectWithoutUsuariosInput[]
    createMany?: historial_cobrosCreateManyUsuariosInputEnvelope
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
  }

  export type whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<whatsapp_configCreateWithoutUsuariosInput, whatsapp_configUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: whatsapp_configCreateOrConnectWithoutUsuariosInput
    connect?: whatsapp_configWhereUniqueInput
  }

  export type whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<whatsapp_messagesCreateWithoutUsuariosInput, whatsapp_messagesUncheckedCreateWithoutUsuariosInput> | whatsapp_messagesCreateWithoutUsuariosInput[] | whatsapp_messagesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutUsuariosInput | whatsapp_messagesCreateOrConnectWithoutUsuariosInput[]
    createMany?: whatsapp_messagesCreateManyUsuariosInputEnvelope
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
  }

  export type whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<whatsapp_remindersCreateWithoutUsuariosInput, whatsapp_remindersUncheckedCreateWithoutUsuariosInput> | whatsapp_remindersCreateWithoutUsuariosInput[] | whatsapp_remindersUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutUsuariosInput | whatsapp_remindersCreateOrConnectWithoutUsuariosInput[]
    createMany?: whatsapp_remindersCreateManyUsuariosInputEnvelope
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
  }

  export type whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<whatsapp_templatesCreateWithoutUsuariosInput, whatsapp_templatesUncheckedCreateWithoutUsuariosInput> | whatsapp_templatesCreateWithoutUsuariosInput[] | whatsapp_templatesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_templatesCreateOrConnectWithoutUsuariosInput | whatsapp_templatesCreateOrConnectWithoutUsuariosInput[]
    createMany?: whatsapp_templatesCreateManyUsuariosInputEnvelope
    connect?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumRolFieldUpdateOperationsInput = {
    set?: $Enums.Rol
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type citasUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<citasCreateWithoutUsuariosInput, citasUncheckedCreateWithoutUsuariosInput> | citasCreateWithoutUsuariosInput[] | citasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutUsuariosInput | citasCreateOrConnectWithoutUsuariosInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutUsuariosInput | citasUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: citasCreateManyUsuariosInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutUsuariosInput | citasUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: citasUpdateManyWithWhereWithoutUsuariosInput | citasUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type cobrosUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<cobrosCreateWithoutUsuariosInput, cobrosUncheckedCreateWithoutUsuariosInput> | cobrosCreateWithoutUsuariosInput[] | cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutUsuariosInput | cobrosCreateOrConnectWithoutUsuariosInput[]
    upsert?: cobrosUpsertWithWhereUniqueWithoutUsuariosInput | cobrosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: cobrosCreateManyUsuariosInputEnvelope
    set?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    disconnect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    delete?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    update?: cobrosUpdateWithWhereUniqueWithoutUsuariosInput | cobrosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: cobrosUpdateManyWithWhereWithoutUsuariosInput | cobrosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: cobrosScalarWhereInput | cobrosScalarWhereInput[]
  }

  export type disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<disponibilidad_medicoCreateWithoutUsuariosInput, disponibilidad_medicoUncheckedCreateWithoutUsuariosInput> | disponibilidad_medicoCreateWithoutUsuariosInput[] | disponibilidad_medicoUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: disponibilidad_medicoCreateOrConnectWithoutUsuariosInput | disponibilidad_medicoCreateOrConnectWithoutUsuariosInput[]
    upsert?: disponibilidad_medicoUpsertWithWhereUniqueWithoutUsuariosInput | disponibilidad_medicoUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: disponibilidad_medicoCreateManyUsuariosInputEnvelope
    set?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    disconnect?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    delete?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    connect?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    update?: disponibilidad_medicoUpdateWithWhereUniqueWithoutUsuariosInput | disponibilidad_medicoUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: disponibilidad_medicoUpdateManyWithWhereWithoutUsuariosInput | disponibilidad_medicoUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: disponibilidad_medicoScalarWhereInput | disponibilidad_medicoScalarWhereInput[]
  }

  export type historial_cobrosUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<historial_cobrosCreateWithoutUsuariosInput, historial_cobrosUncheckedCreateWithoutUsuariosInput> | historial_cobrosCreateWithoutUsuariosInput[] | historial_cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutUsuariosInput | historial_cobrosCreateOrConnectWithoutUsuariosInput[]
    upsert?: historial_cobrosUpsertWithWhereUniqueWithoutUsuariosInput | historial_cobrosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: historial_cobrosCreateManyUsuariosInputEnvelope
    set?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    disconnect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    delete?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    update?: historial_cobrosUpdateWithWhereUniqueWithoutUsuariosInput | historial_cobrosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: historial_cobrosUpdateManyWithWhereWithoutUsuariosInput | historial_cobrosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: historial_cobrosScalarWhereInput | historial_cobrosScalarWhereInput[]
  }

  export type organizacionesUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<organizacionesCreateWithoutUsuariosInput, organizacionesUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutUsuariosInput
    upsert?: organizacionesUpsertWithoutUsuariosInput
    connect?: organizacionesWhereUniqueInput
    update?: XOR<XOR<organizacionesUpdateToOneWithWhereWithoutUsuariosInput, organizacionesUpdateWithoutUsuariosInput>, organizacionesUncheckedUpdateWithoutUsuariosInput>
  }

  export type consultoriosUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<consultoriosCreateWithoutUsuariosInput, consultoriosUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutUsuariosInput
    upsert?: consultoriosUpsertWithoutUsuariosInput
    connect?: consultoriosWhereUniqueInput
    update?: XOR<XOR<consultoriosUpdateToOneWithWhereWithoutUsuariosInput, consultoriosUpdateWithoutUsuariosInput>, consultoriosUncheckedUpdateWithoutUsuariosInput>
  }

  export type whatsapp_configUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_configCreateWithoutUsuariosInput, whatsapp_configUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: whatsapp_configCreateOrConnectWithoutUsuariosInput
    upsert?: whatsapp_configUpsertWithoutUsuariosInput
    disconnect?: whatsapp_configWhereInput | boolean
    delete?: whatsapp_configWhereInput | boolean
    connect?: whatsapp_configWhereUniqueInput
    update?: XOR<XOR<whatsapp_configUpdateToOneWithWhereWithoutUsuariosInput, whatsapp_configUpdateWithoutUsuariosInput>, whatsapp_configUncheckedUpdateWithoutUsuariosInput>
  }

  export type whatsapp_messagesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_messagesCreateWithoutUsuariosInput, whatsapp_messagesUncheckedCreateWithoutUsuariosInput> | whatsapp_messagesCreateWithoutUsuariosInput[] | whatsapp_messagesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutUsuariosInput | whatsapp_messagesCreateOrConnectWithoutUsuariosInput[]
    upsert?: whatsapp_messagesUpsertWithWhereUniqueWithoutUsuariosInput | whatsapp_messagesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: whatsapp_messagesCreateManyUsuariosInputEnvelope
    set?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    disconnect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    delete?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    update?: whatsapp_messagesUpdateWithWhereUniqueWithoutUsuariosInput | whatsapp_messagesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: whatsapp_messagesUpdateManyWithWhereWithoutUsuariosInput | whatsapp_messagesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
  }

  export type whatsapp_remindersUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_remindersCreateWithoutUsuariosInput, whatsapp_remindersUncheckedCreateWithoutUsuariosInput> | whatsapp_remindersCreateWithoutUsuariosInput[] | whatsapp_remindersUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutUsuariosInput | whatsapp_remindersCreateOrConnectWithoutUsuariosInput[]
    upsert?: whatsapp_remindersUpsertWithWhereUniqueWithoutUsuariosInput | whatsapp_remindersUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: whatsapp_remindersCreateManyUsuariosInputEnvelope
    set?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    disconnect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    delete?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    update?: whatsapp_remindersUpdateWithWhereUniqueWithoutUsuariosInput | whatsapp_remindersUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: whatsapp_remindersUpdateManyWithWhereWithoutUsuariosInput | whatsapp_remindersUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: whatsapp_remindersScalarWhereInput | whatsapp_remindersScalarWhereInput[]
  }

  export type whatsapp_templatesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_templatesCreateWithoutUsuariosInput, whatsapp_templatesUncheckedCreateWithoutUsuariosInput> | whatsapp_templatesCreateWithoutUsuariosInput[] | whatsapp_templatesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_templatesCreateOrConnectWithoutUsuariosInput | whatsapp_templatesCreateOrConnectWithoutUsuariosInput[]
    upsert?: whatsapp_templatesUpsertWithWhereUniqueWithoutUsuariosInput | whatsapp_templatesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: whatsapp_templatesCreateManyUsuariosInputEnvelope
    set?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    disconnect?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    delete?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    connect?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    update?: whatsapp_templatesUpdateWithWhereUniqueWithoutUsuariosInput | whatsapp_templatesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: whatsapp_templatesUpdateManyWithWhereWithoutUsuariosInput | whatsapp_templatesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: whatsapp_templatesScalarWhereInput | whatsapp_templatesScalarWhereInput[]
  }

  export type citasUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<citasCreateWithoutUsuariosInput, citasUncheckedCreateWithoutUsuariosInput> | citasCreateWithoutUsuariosInput[] | citasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutUsuariosInput | citasCreateOrConnectWithoutUsuariosInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutUsuariosInput | citasUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: citasCreateManyUsuariosInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutUsuariosInput | citasUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: citasUpdateManyWithWhereWithoutUsuariosInput | citasUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type cobrosUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<cobrosCreateWithoutUsuariosInput, cobrosUncheckedCreateWithoutUsuariosInput> | cobrosCreateWithoutUsuariosInput[] | cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutUsuariosInput | cobrosCreateOrConnectWithoutUsuariosInput[]
    upsert?: cobrosUpsertWithWhereUniqueWithoutUsuariosInput | cobrosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: cobrosCreateManyUsuariosInputEnvelope
    set?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    disconnect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    delete?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    update?: cobrosUpdateWithWhereUniqueWithoutUsuariosInput | cobrosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: cobrosUpdateManyWithWhereWithoutUsuariosInput | cobrosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: cobrosScalarWhereInput | cobrosScalarWhereInput[]
  }

  export type disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<disponibilidad_medicoCreateWithoutUsuariosInput, disponibilidad_medicoUncheckedCreateWithoutUsuariosInput> | disponibilidad_medicoCreateWithoutUsuariosInput[] | disponibilidad_medicoUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: disponibilidad_medicoCreateOrConnectWithoutUsuariosInput | disponibilidad_medicoCreateOrConnectWithoutUsuariosInput[]
    upsert?: disponibilidad_medicoUpsertWithWhereUniqueWithoutUsuariosInput | disponibilidad_medicoUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: disponibilidad_medicoCreateManyUsuariosInputEnvelope
    set?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    disconnect?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    delete?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    connect?: disponibilidad_medicoWhereUniqueInput | disponibilidad_medicoWhereUniqueInput[]
    update?: disponibilidad_medicoUpdateWithWhereUniqueWithoutUsuariosInput | disponibilidad_medicoUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: disponibilidad_medicoUpdateManyWithWhereWithoutUsuariosInput | disponibilidad_medicoUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: disponibilidad_medicoScalarWhereInput | disponibilidad_medicoScalarWhereInput[]
  }

  export type historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<historial_cobrosCreateWithoutUsuariosInput, historial_cobrosUncheckedCreateWithoutUsuariosInput> | historial_cobrosCreateWithoutUsuariosInput[] | historial_cobrosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutUsuariosInput | historial_cobrosCreateOrConnectWithoutUsuariosInput[]
    upsert?: historial_cobrosUpsertWithWhereUniqueWithoutUsuariosInput | historial_cobrosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: historial_cobrosCreateManyUsuariosInputEnvelope
    set?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    disconnect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    delete?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    update?: historial_cobrosUpdateWithWhereUniqueWithoutUsuariosInput | historial_cobrosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: historial_cobrosUpdateManyWithWhereWithoutUsuariosInput | historial_cobrosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: historial_cobrosScalarWhereInput | historial_cobrosScalarWhereInput[]
  }

  export type whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_configCreateWithoutUsuariosInput, whatsapp_configUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: whatsapp_configCreateOrConnectWithoutUsuariosInput
    upsert?: whatsapp_configUpsertWithoutUsuariosInput
    disconnect?: whatsapp_configWhereInput | boolean
    delete?: whatsapp_configWhereInput | boolean
    connect?: whatsapp_configWhereUniqueInput
    update?: XOR<XOR<whatsapp_configUpdateToOneWithWhereWithoutUsuariosInput, whatsapp_configUpdateWithoutUsuariosInput>, whatsapp_configUncheckedUpdateWithoutUsuariosInput>
  }

  export type whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_messagesCreateWithoutUsuariosInput, whatsapp_messagesUncheckedCreateWithoutUsuariosInput> | whatsapp_messagesCreateWithoutUsuariosInput[] | whatsapp_messagesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutUsuariosInput | whatsapp_messagesCreateOrConnectWithoutUsuariosInput[]
    upsert?: whatsapp_messagesUpsertWithWhereUniqueWithoutUsuariosInput | whatsapp_messagesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: whatsapp_messagesCreateManyUsuariosInputEnvelope
    set?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    disconnect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    delete?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    update?: whatsapp_messagesUpdateWithWhereUniqueWithoutUsuariosInput | whatsapp_messagesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: whatsapp_messagesUpdateManyWithWhereWithoutUsuariosInput | whatsapp_messagesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
  }

  export type whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_remindersCreateWithoutUsuariosInput, whatsapp_remindersUncheckedCreateWithoutUsuariosInput> | whatsapp_remindersCreateWithoutUsuariosInput[] | whatsapp_remindersUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutUsuariosInput | whatsapp_remindersCreateOrConnectWithoutUsuariosInput[]
    upsert?: whatsapp_remindersUpsertWithWhereUniqueWithoutUsuariosInput | whatsapp_remindersUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: whatsapp_remindersCreateManyUsuariosInputEnvelope
    set?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    disconnect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    delete?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    update?: whatsapp_remindersUpdateWithWhereUniqueWithoutUsuariosInput | whatsapp_remindersUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: whatsapp_remindersUpdateManyWithWhereWithoutUsuariosInput | whatsapp_remindersUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: whatsapp_remindersScalarWhereInput | whatsapp_remindersScalarWhereInput[]
  }

  export type whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<whatsapp_templatesCreateWithoutUsuariosInput, whatsapp_templatesUncheckedCreateWithoutUsuariosInput> | whatsapp_templatesCreateWithoutUsuariosInput[] | whatsapp_templatesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: whatsapp_templatesCreateOrConnectWithoutUsuariosInput | whatsapp_templatesCreateOrConnectWithoutUsuariosInput[]
    upsert?: whatsapp_templatesUpsertWithWhereUniqueWithoutUsuariosInput | whatsapp_templatesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: whatsapp_templatesCreateManyUsuariosInputEnvelope
    set?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    disconnect?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    delete?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    connect?: whatsapp_templatesWhereUniqueInput | whatsapp_templatesWhereUniqueInput[]
    update?: whatsapp_templatesUpdateWithWhereUniqueWithoutUsuariosInput | whatsapp_templatesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: whatsapp_templatesUpdateManyWithWhereWithoutUsuariosInput | whatsapp_templatesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: whatsapp_templatesScalarWhereInput | whatsapp_templatesScalarWhereInput[]
  }

  export type InventoryUsageCreateNestedManyWithoutPacientesInput = {
    create?: XOR<InventoryUsageCreateWithoutPacientesInput, InventoryUsageUncheckedCreateWithoutPacientesInput> | InventoryUsageCreateWithoutPacientesInput[] | InventoryUsageUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutPacientesInput | InventoryUsageCreateOrConnectWithoutPacientesInput[]
    createMany?: InventoryUsageCreateManyPacientesInputEnvelope
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
  }

  export type citasCreateNestedManyWithoutPacientesInput = {
    create?: XOR<citasCreateWithoutPacientesInput, citasUncheckedCreateWithoutPacientesInput> | citasCreateWithoutPacientesInput[] | citasUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutPacientesInput | citasCreateOrConnectWithoutPacientesInput[]
    createMany?: citasCreateManyPacientesInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type cobrosCreateNestedManyWithoutPacientesInput = {
    create?: XOR<cobrosCreateWithoutPacientesInput, cobrosUncheckedCreateWithoutPacientesInput> | cobrosCreateWithoutPacientesInput[] | cobrosUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutPacientesInput | cobrosCreateOrConnectWithoutPacientesInput[]
    createMany?: cobrosCreateManyPacientesInputEnvelope
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
  }

  export type organizacionesCreateNestedOneWithoutPacientesInput = {
    create?: XOR<organizacionesCreateWithoutPacientesInput, organizacionesUncheckedCreateWithoutPacientesInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutPacientesInput
    connect?: organizacionesWhereUniqueInput
  }

  export type whatsapp_messagesCreateNestedManyWithoutPacientesInput = {
    create?: XOR<whatsapp_messagesCreateWithoutPacientesInput, whatsapp_messagesUncheckedCreateWithoutPacientesInput> | whatsapp_messagesCreateWithoutPacientesInput[] | whatsapp_messagesUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutPacientesInput | whatsapp_messagesCreateOrConnectWithoutPacientesInput[]
    createMany?: whatsapp_messagesCreateManyPacientesInputEnvelope
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
  }

  export type InventoryUsageUncheckedCreateNestedManyWithoutPacientesInput = {
    create?: XOR<InventoryUsageCreateWithoutPacientesInput, InventoryUsageUncheckedCreateWithoutPacientesInput> | InventoryUsageCreateWithoutPacientesInput[] | InventoryUsageUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutPacientesInput | InventoryUsageCreateOrConnectWithoutPacientesInput[]
    createMany?: InventoryUsageCreateManyPacientesInputEnvelope
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
  }

  export type citasUncheckedCreateNestedManyWithoutPacientesInput = {
    create?: XOR<citasCreateWithoutPacientesInput, citasUncheckedCreateWithoutPacientesInput> | citasCreateWithoutPacientesInput[] | citasUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutPacientesInput | citasCreateOrConnectWithoutPacientesInput[]
    createMany?: citasCreateManyPacientesInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type cobrosUncheckedCreateNestedManyWithoutPacientesInput = {
    create?: XOR<cobrosCreateWithoutPacientesInput, cobrosUncheckedCreateWithoutPacientesInput> | cobrosCreateWithoutPacientesInput[] | cobrosUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutPacientesInput | cobrosCreateOrConnectWithoutPacientesInput[]
    createMany?: cobrosCreateManyPacientesInputEnvelope
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
  }

  export type whatsapp_messagesUncheckedCreateNestedManyWithoutPacientesInput = {
    create?: XOR<whatsapp_messagesCreateWithoutPacientesInput, whatsapp_messagesUncheckedCreateWithoutPacientesInput> | whatsapp_messagesCreateWithoutPacientesInput[] | whatsapp_messagesUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutPacientesInput | whatsapp_messagesCreateOrConnectWithoutPacientesInput[]
    createMany?: whatsapp_messagesCreateManyPacientesInputEnvelope
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
  }

  export type InventoryUsageUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<InventoryUsageCreateWithoutPacientesInput, InventoryUsageUncheckedCreateWithoutPacientesInput> | InventoryUsageCreateWithoutPacientesInput[] | InventoryUsageUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutPacientesInput | InventoryUsageCreateOrConnectWithoutPacientesInput[]
    upsert?: InventoryUsageUpsertWithWhereUniqueWithoutPacientesInput | InventoryUsageUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: InventoryUsageCreateManyPacientesInputEnvelope
    set?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    disconnect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    delete?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    update?: InventoryUsageUpdateWithWhereUniqueWithoutPacientesInput | InventoryUsageUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: InventoryUsageUpdateManyWithWhereWithoutPacientesInput | InventoryUsageUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
  }

  export type citasUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<citasCreateWithoutPacientesInput, citasUncheckedCreateWithoutPacientesInput> | citasCreateWithoutPacientesInput[] | citasUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutPacientesInput | citasCreateOrConnectWithoutPacientesInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutPacientesInput | citasUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: citasCreateManyPacientesInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutPacientesInput | citasUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: citasUpdateManyWithWhereWithoutPacientesInput | citasUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type cobrosUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<cobrosCreateWithoutPacientesInput, cobrosUncheckedCreateWithoutPacientesInput> | cobrosCreateWithoutPacientesInput[] | cobrosUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutPacientesInput | cobrosCreateOrConnectWithoutPacientesInput[]
    upsert?: cobrosUpsertWithWhereUniqueWithoutPacientesInput | cobrosUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: cobrosCreateManyPacientesInputEnvelope
    set?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    disconnect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    delete?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    update?: cobrosUpdateWithWhereUniqueWithoutPacientesInput | cobrosUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: cobrosUpdateManyWithWhereWithoutPacientesInput | cobrosUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: cobrosScalarWhereInput | cobrosScalarWhereInput[]
  }

  export type organizacionesUpdateOneRequiredWithoutPacientesNestedInput = {
    create?: XOR<organizacionesCreateWithoutPacientesInput, organizacionesUncheckedCreateWithoutPacientesInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutPacientesInput
    upsert?: organizacionesUpsertWithoutPacientesInput
    connect?: organizacionesWhereUniqueInput
    update?: XOR<XOR<organizacionesUpdateToOneWithWhereWithoutPacientesInput, organizacionesUpdateWithoutPacientesInput>, organizacionesUncheckedUpdateWithoutPacientesInput>
  }

  export type whatsapp_messagesUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<whatsapp_messagesCreateWithoutPacientesInput, whatsapp_messagesUncheckedCreateWithoutPacientesInput> | whatsapp_messagesCreateWithoutPacientesInput[] | whatsapp_messagesUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutPacientesInput | whatsapp_messagesCreateOrConnectWithoutPacientesInput[]
    upsert?: whatsapp_messagesUpsertWithWhereUniqueWithoutPacientesInput | whatsapp_messagesUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: whatsapp_messagesCreateManyPacientesInputEnvelope
    set?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    disconnect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    delete?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    update?: whatsapp_messagesUpdateWithWhereUniqueWithoutPacientesInput | whatsapp_messagesUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: whatsapp_messagesUpdateManyWithWhereWithoutPacientesInput | whatsapp_messagesUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
  }

  export type InventoryUsageUncheckedUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<InventoryUsageCreateWithoutPacientesInput, InventoryUsageUncheckedCreateWithoutPacientesInput> | InventoryUsageCreateWithoutPacientesInput[] | InventoryUsageUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutPacientesInput | InventoryUsageCreateOrConnectWithoutPacientesInput[]
    upsert?: InventoryUsageUpsertWithWhereUniqueWithoutPacientesInput | InventoryUsageUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: InventoryUsageCreateManyPacientesInputEnvelope
    set?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    disconnect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    delete?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    update?: InventoryUsageUpdateWithWhereUniqueWithoutPacientesInput | InventoryUsageUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: InventoryUsageUpdateManyWithWhereWithoutPacientesInput | InventoryUsageUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
  }

  export type citasUncheckedUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<citasCreateWithoutPacientesInput, citasUncheckedCreateWithoutPacientesInput> | citasCreateWithoutPacientesInput[] | citasUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutPacientesInput | citasCreateOrConnectWithoutPacientesInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutPacientesInput | citasUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: citasCreateManyPacientesInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutPacientesInput | citasUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: citasUpdateManyWithWhereWithoutPacientesInput | citasUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type cobrosUncheckedUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<cobrosCreateWithoutPacientesInput, cobrosUncheckedCreateWithoutPacientesInput> | cobrosCreateWithoutPacientesInput[] | cobrosUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: cobrosCreateOrConnectWithoutPacientesInput | cobrosCreateOrConnectWithoutPacientesInput[]
    upsert?: cobrosUpsertWithWhereUniqueWithoutPacientesInput | cobrosUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: cobrosCreateManyPacientesInputEnvelope
    set?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    disconnect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    delete?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    connect?: cobrosWhereUniqueInput | cobrosWhereUniqueInput[]
    update?: cobrosUpdateWithWhereUniqueWithoutPacientesInput | cobrosUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: cobrosUpdateManyWithWhereWithoutPacientesInput | cobrosUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: cobrosScalarWhereInput | cobrosScalarWhereInput[]
  }

  export type whatsapp_messagesUncheckedUpdateManyWithoutPacientesNestedInput = {
    create?: XOR<whatsapp_messagesCreateWithoutPacientesInput, whatsapp_messagesUncheckedCreateWithoutPacientesInput> | whatsapp_messagesCreateWithoutPacientesInput[] | whatsapp_messagesUncheckedCreateWithoutPacientesInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutPacientesInput | whatsapp_messagesCreateOrConnectWithoutPacientesInput[]
    upsert?: whatsapp_messagesUpsertWithWhereUniqueWithoutPacientesInput | whatsapp_messagesUpsertWithWhereUniqueWithoutPacientesInput[]
    createMany?: whatsapp_messagesCreateManyPacientesInputEnvelope
    set?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    disconnect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    delete?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    update?: whatsapp_messagesUpdateWithWhereUniqueWithoutPacientesInput | whatsapp_messagesUpdateWithWhereUniqueWithoutPacientesInput[]
    updateMany?: whatsapp_messagesUpdateManyWithWhereWithoutPacientesInput | whatsapp_messagesUpdateManyWithWhereWithoutPacientesInput[]
    deleteMany?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
  }

  export type citasCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<citasCreateWithoutConsultoriosInput, citasUncheckedCreateWithoutConsultoriosInput> | citasCreateWithoutConsultoriosInput[] | citasUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutConsultoriosInput | citasCreateOrConnectWithoutConsultoriosInput[]
    createMany?: citasCreateManyConsultoriosInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type cobro_conceptosCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<cobro_conceptosCreateWithoutConsultoriosInput, cobro_conceptosUncheckedCreateWithoutConsultoriosInput> | cobro_conceptosCreateWithoutConsultoriosInput[] | cobro_conceptosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutConsultoriosInput | cobro_conceptosCreateOrConnectWithoutConsultoriosInput[]
    createMany?: cobro_conceptosCreateManyConsultoriosInputEnvelope
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
  }

  export type configuracion_permisosCreateNestedOneWithoutConsultoriosInput = {
    create?: XOR<configuracion_permisosCreateWithoutConsultoriosInput, configuracion_permisosUncheckedCreateWithoutConsultoriosInput>
    connectOrCreate?: configuracion_permisosCreateOrConnectWithoutConsultoriosInput
    connect?: configuracion_permisosWhereUniqueInput
  }

  export type organizacionesCreateNestedOneWithoutConsultoriosInput = {
    create?: XOR<organizacionesCreateWithoutConsultoriosInput, organizacionesUncheckedCreateWithoutConsultoriosInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutConsultoriosInput
    connect?: organizacionesWhereUniqueInput
  }

  export type precios_consultorioCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<precios_consultorioCreateWithoutConsultoriosInput, precios_consultorioUncheckedCreateWithoutConsultoriosInput> | precios_consultorioCreateWithoutConsultoriosInput[] | precios_consultorioUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: precios_consultorioCreateOrConnectWithoutConsultoriosInput | precios_consultorioCreateOrConnectWithoutConsultoriosInput[]
    createMany?: precios_consultorioCreateManyConsultoriosInputEnvelope
    connect?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
  }

  export type usuariosCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<usuariosCreateWithoutConsultoriosInput, usuariosUncheckedCreateWithoutConsultoriosInput> | usuariosCreateWithoutConsultoriosInput[] | usuariosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutConsultoriosInput | usuariosCreateOrConnectWithoutConsultoriosInput[]
    createMany?: usuariosCreateManyConsultoriosInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type citasUncheckedCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<citasCreateWithoutConsultoriosInput, citasUncheckedCreateWithoutConsultoriosInput> | citasCreateWithoutConsultoriosInput[] | citasUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutConsultoriosInput | citasCreateOrConnectWithoutConsultoriosInput[]
    createMany?: citasCreateManyConsultoriosInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type cobro_conceptosUncheckedCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<cobro_conceptosCreateWithoutConsultoriosInput, cobro_conceptosUncheckedCreateWithoutConsultoriosInput> | cobro_conceptosCreateWithoutConsultoriosInput[] | cobro_conceptosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutConsultoriosInput | cobro_conceptosCreateOrConnectWithoutConsultoriosInput[]
    createMany?: cobro_conceptosCreateManyConsultoriosInputEnvelope
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
  }

  export type configuracion_permisosUncheckedCreateNestedOneWithoutConsultoriosInput = {
    create?: XOR<configuracion_permisosCreateWithoutConsultoriosInput, configuracion_permisosUncheckedCreateWithoutConsultoriosInput>
    connectOrCreate?: configuracion_permisosCreateOrConnectWithoutConsultoriosInput
    connect?: configuracion_permisosWhereUniqueInput
  }

  export type precios_consultorioUncheckedCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<precios_consultorioCreateWithoutConsultoriosInput, precios_consultorioUncheckedCreateWithoutConsultoriosInput> | precios_consultorioCreateWithoutConsultoriosInput[] | precios_consultorioUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: precios_consultorioCreateOrConnectWithoutConsultoriosInput | precios_consultorioCreateOrConnectWithoutConsultoriosInput[]
    createMany?: precios_consultorioCreateManyConsultoriosInputEnvelope
    connect?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
  }

  export type usuariosUncheckedCreateNestedManyWithoutConsultoriosInput = {
    create?: XOR<usuariosCreateWithoutConsultoriosInput, usuariosUncheckedCreateWithoutConsultoriosInput> | usuariosCreateWithoutConsultoriosInput[] | usuariosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutConsultoriosInput | usuariosCreateOrConnectWithoutConsultoriosInput[]
    createMany?: usuariosCreateManyConsultoriosInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type citasUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<citasCreateWithoutConsultoriosInput, citasUncheckedCreateWithoutConsultoriosInput> | citasCreateWithoutConsultoriosInput[] | citasUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutConsultoriosInput | citasCreateOrConnectWithoutConsultoriosInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutConsultoriosInput | citasUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: citasCreateManyConsultoriosInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutConsultoriosInput | citasUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: citasUpdateManyWithWhereWithoutConsultoriosInput | citasUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type cobro_conceptosUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<cobro_conceptosCreateWithoutConsultoriosInput, cobro_conceptosUncheckedCreateWithoutConsultoriosInput> | cobro_conceptosCreateWithoutConsultoriosInput[] | cobro_conceptosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutConsultoriosInput | cobro_conceptosCreateOrConnectWithoutConsultoriosInput[]
    upsert?: cobro_conceptosUpsertWithWhereUniqueWithoutConsultoriosInput | cobro_conceptosUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: cobro_conceptosCreateManyConsultoriosInputEnvelope
    set?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    disconnect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    delete?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    update?: cobro_conceptosUpdateWithWhereUniqueWithoutConsultoriosInput | cobro_conceptosUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: cobro_conceptosUpdateManyWithWhereWithoutConsultoriosInput | cobro_conceptosUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
  }

  export type configuracion_permisosUpdateOneWithoutConsultoriosNestedInput = {
    create?: XOR<configuracion_permisosCreateWithoutConsultoriosInput, configuracion_permisosUncheckedCreateWithoutConsultoriosInput>
    connectOrCreate?: configuracion_permisosCreateOrConnectWithoutConsultoriosInput
    upsert?: configuracion_permisosUpsertWithoutConsultoriosInput
    disconnect?: configuracion_permisosWhereInput | boolean
    delete?: configuracion_permisosWhereInput | boolean
    connect?: configuracion_permisosWhereUniqueInput
    update?: XOR<XOR<configuracion_permisosUpdateToOneWithWhereWithoutConsultoriosInput, configuracion_permisosUpdateWithoutConsultoriosInput>, configuracion_permisosUncheckedUpdateWithoutConsultoriosInput>
  }

  export type organizacionesUpdateOneRequiredWithoutConsultoriosNestedInput = {
    create?: XOR<organizacionesCreateWithoutConsultoriosInput, organizacionesUncheckedCreateWithoutConsultoriosInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutConsultoriosInput
    upsert?: organizacionesUpsertWithoutConsultoriosInput
    connect?: organizacionesWhereUniqueInput
    update?: XOR<XOR<organizacionesUpdateToOneWithWhereWithoutConsultoriosInput, organizacionesUpdateWithoutConsultoriosInput>, organizacionesUncheckedUpdateWithoutConsultoriosInput>
  }

  export type precios_consultorioUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<precios_consultorioCreateWithoutConsultoriosInput, precios_consultorioUncheckedCreateWithoutConsultoriosInput> | precios_consultorioCreateWithoutConsultoriosInput[] | precios_consultorioUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: precios_consultorioCreateOrConnectWithoutConsultoriosInput | precios_consultorioCreateOrConnectWithoutConsultoriosInput[]
    upsert?: precios_consultorioUpsertWithWhereUniqueWithoutConsultoriosInput | precios_consultorioUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: precios_consultorioCreateManyConsultoriosInputEnvelope
    set?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    disconnect?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    delete?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    connect?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    update?: precios_consultorioUpdateWithWhereUniqueWithoutConsultoriosInput | precios_consultorioUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: precios_consultorioUpdateManyWithWhereWithoutConsultoriosInput | precios_consultorioUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: precios_consultorioScalarWhereInput | precios_consultorioScalarWhereInput[]
  }

  export type usuariosUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<usuariosCreateWithoutConsultoriosInput, usuariosUncheckedCreateWithoutConsultoriosInput> | usuariosCreateWithoutConsultoriosInput[] | usuariosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutConsultoriosInput | usuariosCreateOrConnectWithoutConsultoriosInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutConsultoriosInput | usuariosUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: usuariosCreateManyConsultoriosInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutConsultoriosInput | usuariosUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutConsultoriosInput | usuariosUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type citasUncheckedUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<citasCreateWithoutConsultoriosInput, citasUncheckedCreateWithoutConsultoriosInput> | citasCreateWithoutConsultoriosInput[] | citasUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutConsultoriosInput | citasCreateOrConnectWithoutConsultoriosInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutConsultoriosInput | citasUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: citasCreateManyConsultoriosInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutConsultoriosInput | citasUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: citasUpdateManyWithWhereWithoutConsultoriosInput | citasUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type cobro_conceptosUncheckedUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<cobro_conceptosCreateWithoutConsultoriosInput, cobro_conceptosUncheckedCreateWithoutConsultoriosInput> | cobro_conceptosCreateWithoutConsultoriosInput[] | cobro_conceptosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutConsultoriosInput | cobro_conceptosCreateOrConnectWithoutConsultoriosInput[]
    upsert?: cobro_conceptosUpsertWithWhereUniqueWithoutConsultoriosInput | cobro_conceptosUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: cobro_conceptosCreateManyConsultoriosInputEnvelope
    set?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    disconnect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    delete?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    update?: cobro_conceptosUpdateWithWhereUniqueWithoutConsultoriosInput | cobro_conceptosUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: cobro_conceptosUpdateManyWithWhereWithoutConsultoriosInput | cobro_conceptosUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
  }

  export type configuracion_permisosUncheckedUpdateOneWithoutConsultoriosNestedInput = {
    create?: XOR<configuracion_permisosCreateWithoutConsultoriosInput, configuracion_permisosUncheckedCreateWithoutConsultoriosInput>
    connectOrCreate?: configuracion_permisosCreateOrConnectWithoutConsultoriosInput
    upsert?: configuracion_permisosUpsertWithoutConsultoriosInput
    disconnect?: configuracion_permisosWhereInput | boolean
    delete?: configuracion_permisosWhereInput | boolean
    connect?: configuracion_permisosWhereUniqueInput
    update?: XOR<XOR<configuracion_permisosUpdateToOneWithWhereWithoutConsultoriosInput, configuracion_permisosUpdateWithoutConsultoriosInput>, configuracion_permisosUncheckedUpdateWithoutConsultoriosInput>
  }

  export type precios_consultorioUncheckedUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<precios_consultorioCreateWithoutConsultoriosInput, precios_consultorioUncheckedCreateWithoutConsultoriosInput> | precios_consultorioCreateWithoutConsultoriosInput[] | precios_consultorioUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: precios_consultorioCreateOrConnectWithoutConsultoriosInput | precios_consultorioCreateOrConnectWithoutConsultoriosInput[]
    upsert?: precios_consultorioUpsertWithWhereUniqueWithoutConsultoriosInput | precios_consultorioUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: precios_consultorioCreateManyConsultoriosInputEnvelope
    set?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    disconnect?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    delete?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    connect?: precios_consultorioWhereUniqueInput | precios_consultorioWhereUniqueInput[]
    update?: precios_consultorioUpdateWithWhereUniqueWithoutConsultoriosInput | precios_consultorioUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: precios_consultorioUpdateManyWithWhereWithoutConsultoriosInput | precios_consultorioUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: precios_consultorioScalarWhereInput | precios_consultorioScalarWhereInput[]
  }

  export type usuariosUncheckedUpdateManyWithoutConsultoriosNestedInput = {
    create?: XOR<usuariosCreateWithoutConsultoriosInput, usuariosUncheckedCreateWithoutConsultoriosInput> | usuariosCreateWithoutConsultoriosInput[] | usuariosUncheckedCreateWithoutConsultoriosInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutConsultoriosInput | usuariosCreateOrConnectWithoutConsultoriosInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutConsultoriosInput | usuariosUpsertWithWhereUniqueWithoutConsultoriosInput[]
    createMany?: usuariosCreateManyConsultoriosInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutConsultoriosInput | usuariosUpdateWithWhereUniqueWithoutConsultoriosInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutConsultoriosInput | usuariosUpdateManyWithWhereWithoutConsultoriosInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type cobro_conceptosCreateNestedManyWithoutCobrosInput = {
    create?: XOR<cobro_conceptosCreateWithoutCobrosInput, cobro_conceptosUncheckedCreateWithoutCobrosInput> | cobro_conceptosCreateWithoutCobrosInput[] | cobro_conceptosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutCobrosInput | cobro_conceptosCreateOrConnectWithoutCobrosInput[]
    createMany?: cobro_conceptosCreateManyCobrosInputEnvelope
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
  }

  export type pacientesCreateNestedOneWithoutCobrosInput = {
    create?: XOR<pacientesCreateWithoutCobrosInput, pacientesUncheckedCreateWithoutCobrosInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutCobrosInput
    connect?: pacientesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutCobrosInput = {
    create?: XOR<usuariosCreateWithoutCobrosInput, usuariosUncheckedCreateWithoutCobrosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCobrosInput
    connect?: usuariosWhereUniqueInput
  }

  export type historial_cobrosCreateNestedManyWithoutCobrosInput = {
    create?: XOR<historial_cobrosCreateWithoutCobrosInput, historial_cobrosUncheckedCreateWithoutCobrosInput> | historial_cobrosCreateWithoutCobrosInput[] | historial_cobrosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutCobrosInput | historial_cobrosCreateOrConnectWithoutCobrosInput[]
    createMany?: historial_cobrosCreateManyCobrosInputEnvelope
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
  }

  export type metodos_pago_cobroCreateNestedManyWithoutCobrosInput = {
    create?: XOR<metodos_pago_cobroCreateWithoutCobrosInput, metodos_pago_cobroUncheckedCreateWithoutCobrosInput> | metodos_pago_cobroCreateWithoutCobrosInput[] | metodos_pago_cobroUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: metodos_pago_cobroCreateOrConnectWithoutCobrosInput | metodos_pago_cobroCreateOrConnectWithoutCobrosInput[]
    createMany?: metodos_pago_cobroCreateManyCobrosInputEnvelope
    connect?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
  }

  export type cobro_conceptosUncheckedCreateNestedManyWithoutCobrosInput = {
    create?: XOR<cobro_conceptosCreateWithoutCobrosInput, cobro_conceptosUncheckedCreateWithoutCobrosInput> | cobro_conceptosCreateWithoutCobrosInput[] | cobro_conceptosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutCobrosInput | cobro_conceptosCreateOrConnectWithoutCobrosInput[]
    createMany?: cobro_conceptosCreateManyCobrosInputEnvelope
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
  }

  export type historial_cobrosUncheckedCreateNestedManyWithoutCobrosInput = {
    create?: XOR<historial_cobrosCreateWithoutCobrosInput, historial_cobrosUncheckedCreateWithoutCobrosInput> | historial_cobrosCreateWithoutCobrosInput[] | historial_cobrosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutCobrosInput | historial_cobrosCreateOrConnectWithoutCobrosInput[]
    createMany?: historial_cobrosCreateManyCobrosInputEnvelope
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
  }

  export type metodos_pago_cobroUncheckedCreateNestedManyWithoutCobrosInput = {
    create?: XOR<metodos_pago_cobroCreateWithoutCobrosInput, metodos_pago_cobroUncheckedCreateWithoutCobrosInput> | metodos_pago_cobroCreateWithoutCobrosInput[] | metodos_pago_cobroUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: metodos_pago_cobroCreateOrConnectWithoutCobrosInput | metodos_pago_cobroCreateOrConnectWithoutCobrosInput[]
    createMany?: metodos_pago_cobroCreateManyCobrosInputEnvelope
    connect?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumEstadoCobroFieldUpdateOperationsInput = {
    set?: $Enums.EstadoCobro
  }

  export type NullableEnumMetodoPagoFieldUpdateOperationsInput = {
    set?: $Enums.MetodoPago | null
  }

  export type cobro_conceptosUpdateManyWithoutCobrosNestedInput = {
    create?: XOR<cobro_conceptosCreateWithoutCobrosInput, cobro_conceptosUncheckedCreateWithoutCobrosInput> | cobro_conceptosCreateWithoutCobrosInput[] | cobro_conceptosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutCobrosInput | cobro_conceptosCreateOrConnectWithoutCobrosInput[]
    upsert?: cobro_conceptosUpsertWithWhereUniqueWithoutCobrosInput | cobro_conceptosUpsertWithWhereUniqueWithoutCobrosInput[]
    createMany?: cobro_conceptosCreateManyCobrosInputEnvelope
    set?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    disconnect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    delete?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    update?: cobro_conceptosUpdateWithWhereUniqueWithoutCobrosInput | cobro_conceptosUpdateWithWhereUniqueWithoutCobrosInput[]
    updateMany?: cobro_conceptosUpdateManyWithWhereWithoutCobrosInput | cobro_conceptosUpdateManyWithWhereWithoutCobrosInput[]
    deleteMany?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
  }

  export type pacientesUpdateOneRequiredWithoutCobrosNestedInput = {
    create?: XOR<pacientesCreateWithoutCobrosInput, pacientesUncheckedCreateWithoutCobrosInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutCobrosInput
    upsert?: pacientesUpsertWithoutCobrosInput
    connect?: pacientesWhereUniqueInput
    update?: XOR<XOR<pacientesUpdateToOneWithWhereWithoutCobrosInput, pacientesUpdateWithoutCobrosInput>, pacientesUncheckedUpdateWithoutCobrosInput>
  }

  export type usuariosUpdateOneRequiredWithoutCobrosNestedInput = {
    create?: XOR<usuariosCreateWithoutCobrosInput, usuariosUncheckedCreateWithoutCobrosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCobrosInput
    upsert?: usuariosUpsertWithoutCobrosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutCobrosInput, usuariosUpdateWithoutCobrosInput>, usuariosUncheckedUpdateWithoutCobrosInput>
  }

  export type historial_cobrosUpdateManyWithoutCobrosNestedInput = {
    create?: XOR<historial_cobrosCreateWithoutCobrosInput, historial_cobrosUncheckedCreateWithoutCobrosInput> | historial_cobrosCreateWithoutCobrosInput[] | historial_cobrosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutCobrosInput | historial_cobrosCreateOrConnectWithoutCobrosInput[]
    upsert?: historial_cobrosUpsertWithWhereUniqueWithoutCobrosInput | historial_cobrosUpsertWithWhereUniqueWithoutCobrosInput[]
    createMany?: historial_cobrosCreateManyCobrosInputEnvelope
    set?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    disconnect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    delete?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    update?: historial_cobrosUpdateWithWhereUniqueWithoutCobrosInput | historial_cobrosUpdateWithWhereUniqueWithoutCobrosInput[]
    updateMany?: historial_cobrosUpdateManyWithWhereWithoutCobrosInput | historial_cobrosUpdateManyWithWhereWithoutCobrosInput[]
    deleteMany?: historial_cobrosScalarWhereInput | historial_cobrosScalarWhereInput[]
  }

  export type metodos_pago_cobroUpdateManyWithoutCobrosNestedInput = {
    create?: XOR<metodos_pago_cobroCreateWithoutCobrosInput, metodos_pago_cobroUncheckedCreateWithoutCobrosInput> | metodos_pago_cobroCreateWithoutCobrosInput[] | metodos_pago_cobroUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: metodos_pago_cobroCreateOrConnectWithoutCobrosInput | metodos_pago_cobroCreateOrConnectWithoutCobrosInput[]
    upsert?: metodos_pago_cobroUpsertWithWhereUniqueWithoutCobrosInput | metodos_pago_cobroUpsertWithWhereUniqueWithoutCobrosInput[]
    createMany?: metodos_pago_cobroCreateManyCobrosInputEnvelope
    set?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    disconnect?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    delete?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    connect?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    update?: metodos_pago_cobroUpdateWithWhereUniqueWithoutCobrosInput | metodos_pago_cobroUpdateWithWhereUniqueWithoutCobrosInput[]
    updateMany?: metodos_pago_cobroUpdateManyWithWhereWithoutCobrosInput | metodos_pago_cobroUpdateManyWithWhereWithoutCobrosInput[]
    deleteMany?: metodos_pago_cobroScalarWhereInput | metodos_pago_cobroScalarWhereInput[]
  }

  export type cobro_conceptosUncheckedUpdateManyWithoutCobrosNestedInput = {
    create?: XOR<cobro_conceptosCreateWithoutCobrosInput, cobro_conceptosUncheckedCreateWithoutCobrosInput> | cobro_conceptosCreateWithoutCobrosInput[] | cobro_conceptosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutCobrosInput | cobro_conceptosCreateOrConnectWithoutCobrosInput[]
    upsert?: cobro_conceptosUpsertWithWhereUniqueWithoutCobrosInput | cobro_conceptosUpsertWithWhereUniqueWithoutCobrosInput[]
    createMany?: cobro_conceptosCreateManyCobrosInputEnvelope
    set?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    disconnect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    delete?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    update?: cobro_conceptosUpdateWithWhereUniqueWithoutCobrosInput | cobro_conceptosUpdateWithWhereUniqueWithoutCobrosInput[]
    updateMany?: cobro_conceptosUpdateManyWithWhereWithoutCobrosInput | cobro_conceptosUpdateManyWithWhereWithoutCobrosInput[]
    deleteMany?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
  }

  export type historial_cobrosUncheckedUpdateManyWithoutCobrosNestedInput = {
    create?: XOR<historial_cobrosCreateWithoutCobrosInput, historial_cobrosUncheckedCreateWithoutCobrosInput> | historial_cobrosCreateWithoutCobrosInput[] | historial_cobrosUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: historial_cobrosCreateOrConnectWithoutCobrosInput | historial_cobrosCreateOrConnectWithoutCobrosInput[]
    upsert?: historial_cobrosUpsertWithWhereUniqueWithoutCobrosInput | historial_cobrosUpsertWithWhereUniqueWithoutCobrosInput[]
    createMany?: historial_cobrosCreateManyCobrosInputEnvelope
    set?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    disconnect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    delete?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    connect?: historial_cobrosWhereUniqueInput | historial_cobrosWhereUniqueInput[]
    update?: historial_cobrosUpdateWithWhereUniqueWithoutCobrosInput | historial_cobrosUpdateWithWhereUniqueWithoutCobrosInput[]
    updateMany?: historial_cobrosUpdateManyWithWhereWithoutCobrosInput | historial_cobrosUpdateManyWithWhereWithoutCobrosInput[]
    deleteMany?: historial_cobrosScalarWhereInput | historial_cobrosScalarWhereInput[]
  }

  export type metodos_pago_cobroUncheckedUpdateManyWithoutCobrosNestedInput = {
    create?: XOR<metodos_pago_cobroCreateWithoutCobrosInput, metodos_pago_cobroUncheckedCreateWithoutCobrosInput> | metodos_pago_cobroCreateWithoutCobrosInput[] | metodos_pago_cobroUncheckedCreateWithoutCobrosInput[]
    connectOrCreate?: metodos_pago_cobroCreateOrConnectWithoutCobrosInput | metodos_pago_cobroCreateOrConnectWithoutCobrosInput[]
    upsert?: metodos_pago_cobroUpsertWithWhereUniqueWithoutCobrosInput | metodos_pago_cobroUpsertWithWhereUniqueWithoutCobrosInput[]
    createMany?: metodos_pago_cobroCreateManyCobrosInputEnvelope
    set?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    disconnect?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    delete?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    connect?: metodos_pago_cobroWhereUniqueInput | metodos_pago_cobroWhereUniqueInput[]
    update?: metodos_pago_cobroUpdateWithWhereUniqueWithoutCobrosInput | metodos_pago_cobroUpdateWithWhereUniqueWithoutCobrosInput[]
    updateMany?: metodos_pago_cobroUpdateManyWithWhereWithoutCobrosInput | metodos_pago_cobroUpdateManyWithWhereWithoutCobrosInput[]
    deleteMany?: metodos_pago_cobroScalarWhereInput | metodos_pago_cobroScalarWhereInput[]
  }

  export type cobrosCreateNestedOneWithoutCobro_conceptosInput = {
    create?: XOR<cobrosCreateWithoutCobro_conceptosInput, cobrosUncheckedCreateWithoutCobro_conceptosInput>
    connectOrCreate?: cobrosCreateOrConnectWithoutCobro_conceptosInput
    connect?: cobrosWhereUniqueInput
  }

  export type consultoriosCreateNestedOneWithoutCobro_conceptosInput = {
    create?: XOR<consultoriosCreateWithoutCobro_conceptosInput, consultoriosUncheckedCreateWithoutCobro_conceptosInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutCobro_conceptosInput
    connect?: consultoriosWhereUniqueInput
  }

  export type serviciosCreateNestedOneWithoutCobro_conceptosInput = {
    create?: XOR<serviciosCreateWithoutCobro_conceptosInput, serviciosUncheckedCreateWithoutCobro_conceptosInput>
    connectOrCreate?: serviciosCreateOrConnectWithoutCobro_conceptosInput
    connect?: serviciosWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type cobrosUpdateOneRequiredWithoutCobro_conceptosNestedInput = {
    create?: XOR<cobrosCreateWithoutCobro_conceptosInput, cobrosUncheckedCreateWithoutCobro_conceptosInput>
    connectOrCreate?: cobrosCreateOrConnectWithoutCobro_conceptosInput
    upsert?: cobrosUpsertWithoutCobro_conceptosInput
    connect?: cobrosWhereUniqueInput
    update?: XOR<XOR<cobrosUpdateToOneWithWhereWithoutCobro_conceptosInput, cobrosUpdateWithoutCobro_conceptosInput>, cobrosUncheckedUpdateWithoutCobro_conceptosInput>
  }

  export type consultoriosUpdateOneRequiredWithoutCobro_conceptosNestedInput = {
    create?: XOR<consultoriosCreateWithoutCobro_conceptosInput, consultoriosUncheckedCreateWithoutCobro_conceptosInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutCobro_conceptosInput
    upsert?: consultoriosUpsertWithoutCobro_conceptosInput
    connect?: consultoriosWhereUniqueInput
    update?: XOR<XOR<consultoriosUpdateToOneWithWhereWithoutCobro_conceptosInput, consultoriosUpdateWithoutCobro_conceptosInput>, consultoriosUncheckedUpdateWithoutCobro_conceptosInput>
  }

  export type serviciosUpdateOneRequiredWithoutCobro_conceptosNestedInput = {
    create?: XOR<serviciosCreateWithoutCobro_conceptosInput, serviciosUncheckedCreateWithoutCobro_conceptosInput>
    connectOrCreate?: serviciosCreateOrConnectWithoutCobro_conceptosInput
    upsert?: serviciosUpsertWithoutCobro_conceptosInput
    connect?: serviciosWhereUniqueInput
    update?: XOR<XOR<serviciosUpdateToOneWithWhereWithoutCobro_conceptosInput, serviciosUpdateWithoutCobro_conceptosInput>, serviciosUncheckedUpdateWithoutCobro_conceptosInput>
  }

  export type cobrosCreateNestedOneWithoutHistorial_cobrosInput = {
    create?: XOR<cobrosCreateWithoutHistorial_cobrosInput, cobrosUncheckedCreateWithoutHistorial_cobrosInput>
    connectOrCreate?: cobrosCreateOrConnectWithoutHistorial_cobrosInput
    connect?: cobrosWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutHistorial_cobrosInput = {
    create?: XOR<usuariosCreateWithoutHistorial_cobrosInput, usuariosUncheckedCreateWithoutHistorial_cobrosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutHistorial_cobrosInput
    connect?: usuariosWhereUniqueInput
  }

  export type EnumTipoCambioFieldUpdateOperationsInput = {
    set?: $Enums.TipoCambio
  }

  export type cobrosUpdateOneRequiredWithoutHistorial_cobrosNestedInput = {
    create?: XOR<cobrosCreateWithoutHistorial_cobrosInput, cobrosUncheckedCreateWithoutHistorial_cobrosInput>
    connectOrCreate?: cobrosCreateOrConnectWithoutHistorial_cobrosInput
    upsert?: cobrosUpsertWithoutHistorial_cobrosInput
    connect?: cobrosWhereUniqueInput
    update?: XOR<XOR<cobrosUpdateToOneWithWhereWithoutHistorial_cobrosInput, cobrosUpdateWithoutHistorial_cobrosInput>, cobrosUncheckedUpdateWithoutHistorial_cobrosInput>
  }

  export type usuariosUpdateOneRequiredWithoutHistorial_cobrosNestedInput = {
    create?: XOR<usuariosCreateWithoutHistorial_cobrosInput, usuariosUncheckedCreateWithoutHistorial_cobrosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutHistorial_cobrosInput
    upsert?: usuariosUpsertWithoutHistorial_cobrosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutHistorial_cobrosInput, usuariosUpdateWithoutHistorial_cobrosInput>, usuariosUncheckedUpdateWithoutHistorial_cobrosInput>
  }

  export type cobrosCreateNestedOneWithoutMetodos_pago_cobroInput = {
    create?: XOR<cobrosCreateWithoutMetodos_pago_cobroInput, cobrosUncheckedCreateWithoutMetodos_pago_cobroInput>
    connectOrCreate?: cobrosCreateOrConnectWithoutMetodos_pago_cobroInput
    connect?: cobrosWhereUniqueInput
  }

  export type EnumMetodoPagoFieldUpdateOperationsInput = {
    set?: $Enums.MetodoPago
  }

  export type cobrosUpdateOneRequiredWithoutMetodos_pago_cobroNestedInput = {
    create?: XOR<cobrosCreateWithoutMetodos_pago_cobroInput, cobrosUncheckedCreateWithoutMetodos_pago_cobroInput>
    connectOrCreate?: cobrosCreateOrConnectWithoutMetodos_pago_cobroInput
    upsert?: cobrosUpsertWithoutMetodos_pago_cobroInput
    connect?: cobrosWhereUniqueInput
    update?: XOR<XOR<cobrosUpdateToOneWithWhereWithoutMetodos_pago_cobroInput, cobrosUpdateWithoutMetodos_pago_cobroInput>, cobrosUncheckedUpdateWithoutMetodos_pago_cobroInput>
  }

  export type cobro_conceptosCreateNestedManyWithoutServiciosInput = {
    create?: XOR<cobro_conceptosCreateWithoutServiciosInput, cobro_conceptosUncheckedCreateWithoutServiciosInput> | cobro_conceptosCreateWithoutServiciosInput[] | cobro_conceptosUncheckedCreateWithoutServiciosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutServiciosInput | cobro_conceptosCreateOrConnectWithoutServiciosInput[]
    createMany?: cobro_conceptosCreateManyServiciosInputEnvelope
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
  }

  export type organizacionesCreateNestedOneWithoutServiciosInput = {
    create?: XOR<organizacionesCreateWithoutServiciosInput, organizacionesUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutServiciosInput
    connect?: organizacionesWhereUniqueInput
  }

  export type cobro_conceptosUncheckedCreateNestedManyWithoutServiciosInput = {
    create?: XOR<cobro_conceptosCreateWithoutServiciosInput, cobro_conceptosUncheckedCreateWithoutServiciosInput> | cobro_conceptosCreateWithoutServiciosInput[] | cobro_conceptosUncheckedCreateWithoutServiciosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutServiciosInput | cobro_conceptosCreateOrConnectWithoutServiciosInput[]
    createMany?: cobro_conceptosCreateManyServiciosInputEnvelope
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
  }

  export type cobro_conceptosUpdateManyWithoutServiciosNestedInput = {
    create?: XOR<cobro_conceptosCreateWithoutServiciosInput, cobro_conceptosUncheckedCreateWithoutServiciosInput> | cobro_conceptosCreateWithoutServiciosInput[] | cobro_conceptosUncheckedCreateWithoutServiciosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutServiciosInput | cobro_conceptosCreateOrConnectWithoutServiciosInput[]
    upsert?: cobro_conceptosUpsertWithWhereUniqueWithoutServiciosInput | cobro_conceptosUpsertWithWhereUniqueWithoutServiciosInput[]
    createMany?: cobro_conceptosCreateManyServiciosInputEnvelope
    set?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    disconnect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    delete?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    update?: cobro_conceptosUpdateWithWhereUniqueWithoutServiciosInput | cobro_conceptosUpdateWithWhereUniqueWithoutServiciosInput[]
    updateMany?: cobro_conceptosUpdateManyWithWhereWithoutServiciosInput | cobro_conceptosUpdateManyWithWhereWithoutServiciosInput[]
    deleteMany?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
  }

  export type organizacionesUpdateOneRequiredWithoutServiciosNestedInput = {
    create?: XOR<organizacionesCreateWithoutServiciosInput, organizacionesUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: organizacionesCreateOrConnectWithoutServiciosInput
    upsert?: organizacionesUpsertWithoutServiciosInput
    connect?: organizacionesWhereUniqueInput
    update?: XOR<XOR<organizacionesUpdateToOneWithWhereWithoutServiciosInput, organizacionesUpdateWithoutServiciosInput>, organizacionesUncheckedUpdateWithoutServiciosInput>
  }

  export type cobro_conceptosUncheckedUpdateManyWithoutServiciosNestedInput = {
    create?: XOR<cobro_conceptosCreateWithoutServiciosInput, cobro_conceptosUncheckedCreateWithoutServiciosInput> | cobro_conceptosCreateWithoutServiciosInput[] | cobro_conceptosUncheckedCreateWithoutServiciosInput[]
    connectOrCreate?: cobro_conceptosCreateOrConnectWithoutServiciosInput | cobro_conceptosCreateOrConnectWithoutServiciosInput[]
    upsert?: cobro_conceptosUpsertWithWhereUniqueWithoutServiciosInput | cobro_conceptosUpsertWithWhereUniqueWithoutServiciosInput[]
    createMany?: cobro_conceptosCreateManyServiciosInputEnvelope
    set?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    disconnect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    delete?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    connect?: cobro_conceptosWhereUniqueInput | cobro_conceptosWhereUniqueInput[]
    update?: cobro_conceptosUpdateWithWhereUniqueWithoutServiciosInput | cobro_conceptosUpdateWithWhereUniqueWithoutServiciosInput[]
    updateMany?: cobro_conceptosUpdateManyWithWhereWithoutServiciosInput | cobro_conceptosUpdateManyWithWhereWithoutServiciosInput[]
    deleteMany?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
  }

  export type consultoriosCreateNestedOneWithoutPrecios_consultorioInput = {
    create?: XOR<consultoriosCreateWithoutPrecios_consultorioInput, consultoriosUncheckedCreateWithoutPrecios_consultorioInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutPrecios_consultorioInput
    connect?: consultoriosWhereUniqueInput
  }

  export type consultoriosUpdateOneRequiredWithoutPrecios_consultorioNestedInput = {
    create?: XOR<consultoriosCreateWithoutPrecios_consultorioInput, consultoriosUncheckedCreateWithoutPrecios_consultorioInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutPrecios_consultorioInput
    upsert?: consultoriosUpsertWithoutPrecios_consultorioInput
    connect?: consultoriosWhereUniqueInput
    update?: XOR<XOR<consultoriosUpdateToOneWithWhereWithoutPrecios_consultorioInput, consultoriosUpdateWithoutPrecios_consultorioInput>, consultoriosUncheckedUpdateWithoutPrecios_consultorioInput>
  }

  export type consultoriosCreateNestedOneWithoutConfiguracion_permisosInput = {
    create?: XOR<consultoriosCreateWithoutConfiguracion_permisosInput, consultoriosUncheckedCreateWithoutConfiguracion_permisosInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutConfiguracion_permisosInput
    connect?: consultoriosWhereUniqueInput
  }

  export type consultoriosUpdateOneRequiredWithoutConfiguracion_permisosNestedInput = {
    create?: XOR<consultoriosCreateWithoutConfiguracion_permisosInput, consultoriosUncheckedCreateWithoutConfiguracion_permisosInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutConfiguracion_permisosInput
    upsert?: consultoriosUpsertWithoutConfiguracion_permisosInput
    connect?: consultoriosWhereUniqueInput
    update?: XOR<XOR<consultoriosUpdateToOneWithWhereWithoutConfiguracion_permisosInput, consultoriosUpdateWithoutConfiguracion_permisosInput>, consultoriosUncheckedUpdateWithoutConfiguracion_permisosInput>
  }

  export type consultoriosCreateNestedOneWithoutCitasInput = {
    create?: XOR<consultoriosCreateWithoutCitasInput, consultoriosUncheckedCreateWithoutCitasInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutCitasInput
    connect?: consultoriosWhereUniqueInput
  }

  export type pacientesCreateNestedOneWithoutCitasInput = {
    create?: XOR<pacientesCreateWithoutCitasInput, pacientesUncheckedCreateWithoutCitasInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutCitasInput
    connect?: pacientesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutCitasInput = {
    create?: XOR<usuariosCreateWithoutCitasInput, usuariosUncheckedCreateWithoutCitasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCitasInput
    connect?: usuariosWhereUniqueInput
  }

  export type whatsapp_messagesCreateNestedManyWithoutCitasInput = {
    create?: XOR<whatsapp_messagesCreateWithoutCitasInput, whatsapp_messagesUncheckedCreateWithoutCitasInput> | whatsapp_messagesCreateWithoutCitasInput[] | whatsapp_messagesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutCitasInput | whatsapp_messagesCreateOrConnectWithoutCitasInput[]
    createMany?: whatsapp_messagesCreateManyCitasInputEnvelope
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
  }

  export type whatsapp_remindersCreateNestedManyWithoutCitasInput = {
    create?: XOR<whatsapp_remindersCreateWithoutCitasInput, whatsapp_remindersUncheckedCreateWithoutCitasInput> | whatsapp_remindersCreateWithoutCitasInput[] | whatsapp_remindersUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutCitasInput | whatsapp_remindersCreateOrConnectWithoutCitasInput[]
    createMany?: whatsapp_remindersCreateManyCitasInputEnvelope
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
  }

  export type whatsapp_messagesUncheckedCreateNestedManyWithoutCitasInput = {
    create?: XOR<whatsapp_messagesCreateWithoutCitasInput, whatsapp_messagesUncheckedCreateWithoutCitasInput> | whatsapp_messagesCreateWithoutCitasInput[] | whatsapp_messagesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutCitasInput | whatsapp_messagesCreateOrConnectWithoutCitasInput[]
    createMany?: whatsapp_messagesCreateManyCitasInputEnvelope
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
  }

  export type whatsapp_remindersUncheckedCreateNestedManyWithoutCitasInput = {
    create?: XOR<whatsapp_remindersCreateWithoutCitasInput, whatsapp_remindersUncheckedCreateWithoutCitasInput> | whatsapp_remindersCreateWithoutCitasInput[] | whatsapp_remindersUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutCitasInput | whatsapp_remindersCreateOrConnectWithoutCitasInput[]
    createMany?: whatsapp_remindersCreateManyCitasInputEnvelope
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
  }

  export type EnumEstadoCitaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoCita
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type consultoriosUpdateOneRequiredWithoutCitasNestedInput = {
    create?: XOR<consultoriosCreateWithoutCitasInput, consultoriosUncheckedCreateWithoutCitasInput>
    connectOrCreate?: consultoriosCreateOrConnectWithoutCitasInput
    upsert?: consultoriosUpsertWithoutCitasInput
    connect?: consultoriosWhereUniqueInput
    update?: XOR<XOR<consultoriosUpdateToOneWithWhereWithoutCitasInput, consultoriosUpdateWithoutCitasInput>, consultoriosUncheckedUpdateWithoutCitasInput>
  }

  export type pacientesUpdateOneRequiredWithoutCitasNestedInput = {
    create?: XOR<pacientesCreateWithoutCitasInput, pacientesUncheckedCreateWithoutCitasInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutCitasInput
    upsert?: pacientesUpsertWithoutCitasInput
    connect?: pacientesWhereUniqueInput
    update?: XOR<XOR<pacientesUpdateToOneWithWhereWithoutCitasInput, pacientesUpdateWithoutCitasInput>, pacientesUncheckedUpdateWithoutCitasInput>
  }

  export type usuariosUpdateOneRequiredWithoutCitasNestedInput = {
    create?: XOR<usuariosCreateWithoutCitasInput, usuariosUncheckedCreateWithoutCitasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCitasInput
    upsert?: usuariosUpsertWithoutCitasInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutCitasInput, usuariosUpdateWithoutCitasInput>, usuariosUncheckedUpdateWithoutCitasInput>
  }

  export type whatsapp_messagesUpdateManyWithoutCitasNestedInput = {
    create?: XOR<whatsapp_messagesCreateWithoutCitasInput, whatsapp_messagesUncheckedCreateWithoutCitasInput> | whatsapp_messagesCreateWithoutCitasInput[] | whatsapp_messagesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutCitasInput | whatsapp_messagesCreateOrConnectWithoutCitasInput[]
    upsert?: whatsapp_messagesUpsertWithWhereUniqueWithoutCitasInput | whatsapp_messagesUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: whatsapp_messagesCreateManyCitasInputEnvelope
    set?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    disconnect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    delete?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    update?: whatsapp_messagesUpdateWithWhereUniqueWithoutCitasInput | whatsapp_messagesUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: whatsapp_messagesUpdateManyWithWhereWithoutCitasInput | whatsapp_messagesUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
  }

  export type whatsapp_remindersUpdateManyWithoutCitasNestedInput = {
    create?: XOR<whatsapp_remindersCreateWithoutCitasInput, whatsapp_remindersUncheckedCreateWithoutCitasInput> | whatsapp_remindersCreateWithoutCitasInput[] | whatsapp_remindersUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutCitasInput | whatsapp_remindersCreateOrConnectWithoutCitasInput[]
    upsert?: whatsapp_remindersUpsertWithWhereUniqueWithoutCitasInput | whatsapp_remindersUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: whatsapp_remindersCreateManyCitasInputEnvelope
    set?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    disconnect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    delete?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    update?: whatsapp_remindersUpdateWithWhereUniqueWithoutCitasInput | whatsapp_remindersUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: whatsapp_remindersUpdateManyWithWhereWithoutCitasInput | whatsapp_remindersUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: whatsapp_remindersScalarWhereInput | whatsapp_remindersScalarWhereInput[]
  }

  export type whatsapp_messagesUncheckedUpdateManyWithoutCitasNestedInput = {
    create?: XOR<whatsapp_messagesCreateWithoutCitasInput, whatsapp_messagesUncheckedCreateWithoutCitasInput> | whatsapp_messagesCreateWithoutCitasInput[] | whatsapp_messagesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_messagesCreateOrConnectWithoutCitasInput | whatsapp_messagesCreateOrConnectWithoutCitasInput[]
    upsert?: whatsapp_messagesUpsertWithWhereUniqueWithoutCitasInput | whatsapp_messagesUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: whatsapp_messagesCreateManyCitasInputEnvelope
    set?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    disconnect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    delete?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    connect?: whatsapp_messagesWhereUniqueInput | whatsapp_messagesWhereUniqueInput[]
    update?: whatsapp_messagesUpdateWithWhereUniqueWithoutCitasInput | whatsapp_messagesUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: whatsapp_messagesUpdateManyWithWhereWithoutCitasInput | whatsapp_messagesUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
  }

  export type whatsapp_remindersUncheckedUpdateManyWithoutCitasNestedInput = {
    create?: XOR<whatsapp_remindersCreateWithoutCitasInput, whatsapp_remindersUncheckedCreateWithoutCitasInput> | whatsapp_remindersCreateWithoutCitasInput[] | whatsapp_remindersUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: whatsapp_remindersCreateOrConnectWithoutCitasInput | whatsapp_remindersCreateOrConnectWithoutCitasInput[]
    upsert?: whatsapp_remindersUpsertWithWhereUniqueWithoutCitasInput | whatsapp_remindersUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: whatsapp_remindersCreateManyCitasInputEnvelope
    set?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    disconnect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    delete?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    connect?: whatsapp_remindersWhereUniqueInput | whatsapp_remindersWhereUniqueInput[]
    update?: whatsapp_remindersUpdateWithWhereUniqueWithoutCitasInput | whatsapp_remindersUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: whatsapp_remindersUpdateManyWithWhereWithoutCitasInput | whatsapp_remindersUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: whatsapp_remindersScalarWhereInput | whatsapp_remindersScalarWhereInput[]
  }

  export type usuariosCreateNestedOneWithoutDisponibilidad_medicoInput = {
    create?: XOR<usuariosCreateWithoutDisponibilidad_medicoInput, usuariosUncheckedCreateWithoutDisponibilidad_medicoInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutDisponibilidad_medicoInput
    connect?: usuariosWhereUniqueInput
  }

  export type usuariosUpdateOneRequiredWithoutDisponibilidad_medicoNestedInput = {
    create?: XOR<usuariosCreateWithoutDisponibilidad_medicoInput, usuariosUncheckedCreateWithoutDisponibilidad_medicoInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutDisponibilidad_medicoInput
    upsert?: usuariosUpsertWithoutDisponibilidad_medicoInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutDisponibilidad_medicoInput, usuariosUpdateWithoutDisponibilidad_medicoInput>, usuariosUncheckedUpdateWithoutDisponibilidad_medicoInput>
  }

  export type InventoryUsageDetailCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutProductInput, InventoryUsageDetailUncheckedCreateWithoutProductInput> | InventoryUsageDetailCreateWithoutProductInput[] | InventoryUsageDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutProductInput | InventoryUsageDetailCreateOrConnectWithoutProductInput[]
    createMany?: InventoryUsageDetailCreateManyProductInputEnvelope
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
  }

  export type MovementCreateNestedManyWithoutProductInput = {
    create?: XOR<MovementCreateWithoutProductInput, MovementUncheckedCreateWithoutProductInput> | MovementCreateWithoutProductInput[] | MovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutProductInput | MovementCreateOrConnectWithoutProductInput[]
    createMany?: MovementCreateManyProductInputEnvelope
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
  }

  export type ProductAllergenCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductAllergenCreateWithoutProductInput, ProductAllergenUncheckedCreateWithoutProductInput> | ProductAllergenCreateWithoutProductInput[] | ProductAllergenUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutProductInput | ProductAllergenCreateOrConnectWithoutProductInput[]
    createMany?: ProductAllergenCreateManyProductInputEnvelope
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
  }

  export type ProductExpirationCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductExpirationCreateWithoutProductInput, ProductExpirationUncheckedCreateWithoutProductInput> | ProductExpirationCreateWithoutProductInput[] | ProductExpirationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutProductInput | ProductExpirationCreateOrConnectWithoutProductInput[]
    createMany?: ProductExpirationCreateManyProductInputEnvelope
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
  }

  export type StockBySedeCreateNestedManyWithoutProductInput = {
    create?: XOR<StockBySedeCreateWithoutProductInput, StockBySedeUncheckedCreateWithoutProductInput> | StockBySedeCreateWithoutProductInput[] | StockBySedeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutProductInput | StockBySedeCreateOrConnectWithoutProductInput[]
    createMany?: StockBySedeCreateManyProductInputEnvelope
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
  }

  export type InventoryUsageDetailUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutProductInput, InventoryUsageDetailUncheckedCreateWithoutProductInput> | InventoryUsageDetailCreateWithoutProductInput[] | InventoryUsageDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutProductInput | InventoryUsageDetailCreateOrConnectWithoutProductInput[]
    createMany?: InventoryUsageDetailCreateManyProductInputEnvelope
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
  }

  export type MovementUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<MovementCreateWithoutProductInput, MovementUncheckedCreateWithoutProductInput> | MovementCreateWithoutProductInput[] | MovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutProductInput | MovementCreateOrConnectWithoutProductInput[]
    createMany?: MovementCreateManyProductInputEnvelope
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
  }

  export type ProductAllergenUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductAllergenCreateWithoutProductInput, ProductAllergenUncheckedCreateWithoutProductInput> | ProductAllergenCreateWithoutProductInput[] | ProductAllergenUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutProductInput | ProductAllergenCreateOrConnectWithoutProductInput[]
    createMany?: ProductAllergenCreateManyProductInputEnvelope
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
  }

  export type ProductExpirationUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductExpirationCreateWithoutProductInput, ProductExpirationUncheckedCreateWithoutProductInput> | ProductExpirationCreateWithoutProductInput[] | ProductExpirationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutProductInput | ProductExpirationCreateOrConnectWithoutProductInput[]
    createMany?: ProductExpirationCreateManyProductInputEnvelope
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
  }

  export type StockBySedeUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<StockBySedeCreateWithoutProductInput, StockBySedeUncheckedCreateWithoutProductInput> | StockBySedeCreateWithoutProductInput[] | StockBySedeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutProductInput | StockBySedeCreateOrConnectWithoutProductInput[]
    createMany?: StockBySedeCreateManyProductInputEnvelope
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
  }

  export type EnumProductTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProductType
  }

  export type EnumProductUnitFieldUpdateOperationsInput = {
    set?: $Enums.ProductUnit
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type InventoryUsageDetailUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutProductInput, InventoryUsageDetailUncheckedCreateWithoutProductInput> | InventoryUsageDetailCreateWithoutProductInput[] | InventoryUsageDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutProductInput | InventoryUsageDetailCreateOrConnectWithoutProductInput[]
    upsert?: InventoryUsageDetailUpsertWithWhereUniqueWithoutProductInput | InventoryUsageDetailUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryUsageDetailCreateManyProductInputEnvelope
    set?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    disconnect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    delete?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    update?: InventoryUsageDetailUpdateWithWhereUniqueWithoutProductInput | InventoryUsageDetailUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryUsageDetailUpdateManyWithWhereWithoutProductInput | InventoryUsageDetailUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
  }

  export type MovementUpdateManyWithoutProductNestedInput = {
    create?: XOR<MovementCreateWithoutProductInput, MovementUncheckedCreateWithoutProductInput> | MovementCreateWithoutProductInput[] | MovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutProductInput | MovementCreateOrConnectWithoutProductInput[]
    upsert?: MovementUpsertWithWhereUniqueWithoutProductInput | MovementUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: MovementCreateManyProductInputEnvelope
    set?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    disconnect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    delete?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    update?: MovementUpdateWithWhereUniqueWithoutProductInput | MovementUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: MovementUpdateManyWithWhereWithoutProductInput | MovementUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: MovementScalarWhereInput | MovementScalarWhereInput[]
  }

  export type ProductAllergenUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductAllergenCreateWithoutProductInput, ProductAllergenUncheckedCreateWithoutProductInput> | ProductAllergenCreateWithoutProductInput[] | ProductAllergenUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutProductInput | ProductAllergenCreateOrConnectWithoutProductInput[]
    upsert?: ProductAllergenUpsertWithWhereUniqueWithoutProductInput | ProductAllergenUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductAllergenCreateManyProductInputEnvelope
    set?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    disconnect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    delete?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    update?: ProductAllergenUpdateWithWhereUniqueWithoutProductInput | ProductAllergenUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductAllergenUpdateManyWithWhereWithoutProductInput | ProductAllergenUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductAllergenScalarWhereInput | ProductAllergenScalarWhereInput[]
  }

  export type ProductExpirationUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductExpirationCreateWithoutProductInput, ProductExpirationUncheckedCreateWithoutProductInput> | ProductExpirationCreateWithoutProductInput[] | ProductExpirationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutProductInput | ProductExpirationCreateOrConnectWithoutProductInput[]
    upsert?: ProductExpirationUpsertWithWhereUniqueWithoutProductInput | ProductExpirationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductExpirationCreateManyProductInputEnvelope
    set?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    disconnect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    delete?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    update?: ProductExpirationUpdateWithWhereUniqueWithoutProductInput | ProductExpirationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductExpirationUpdateManyWithWhereWithoutProductInput | ProductExpirationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductExpirationScalarWhereInput | ProductExpirationScalarWhereInput[]
  }

  export type StockBySedeUpdateManyWithoutProductNestedInput = {
    create?: XOR<StockBySedeCreateWithoutProductInput, StockBySedeUncheckedCreateWithoutProductInput> | StockBySedeCreateWithoutProductInput[] | StockBySedeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutProductInput | StockBySedeCreateOrConnectWithoutProductInput[]
    upsert?: StockBySedeUpsertWithWhereUniqueWithoutProductInput | StockBySedeUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: StockBySedeCreateManyProductInputEnvelope
    set?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    disconnect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    delete?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    update?: StockBySedeUpdateWithWhereUniqueWithoutProductInput | StockBySedeUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: StockBySedeUpdateManyWithWhereWithoutProductInput | StockBySedeUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: StockBySedeScalarWhereInput | StockBySedeScalarWhereInput[]
  }

  export type InventoryUsageDetailUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutProductInput, InventoryUsageDetailUncheckedCreateWithoutProductInput> | InventoryUsageDetailCreateWithoutProductInput[] | InventoryUsageDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutProductInput | InventoryUsageDetailCreateOrConnectWithoutProductInput[]
    upsert?: InventoryUsageDetailUpsertWithWhereUniqueWithoutProductInput | InventoryUsageDetailUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryUsageDetailCreateManyProductInputEnvelope
    set?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    disconnect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    delete?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    update?: InventoryUsageDetailUpdateWithWhereUniqueWithoutProductInput | InventoryUsageDetailUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryUsageDetailUpdateManyWithWhereWithoutProductInput | InventoryUsageDetailUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
  }

  export type MovementUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<MovementCreateWithoutProductInput, MovementUncheckedCreateWithoutProductInput> | MovementCreateWithoutProductInput[] | MovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutProductInput | MovementCreateOrConnectWithoutProductInput[]
    upsert?: MovementUpsertWithWhereUniqueWithoutProductInput | MovementUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: MovementCreateManyProductInputEnvelope
    set?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    disconnect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    delete?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    update?: MovementUpdateWithWhereUniqueWithoutProductInput | MovementUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: MovementUpdateManyWithWhereWithoutProductInput | MovementUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: MovementScalarWhereInput | MovementScalarWhereInput[]
  }

  export type ProductAllergenUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductAllergenCreateWithoutProductInput, ProductAllergenUncheckedCreateWithoutProductInput> | ProductAllergenCreateWithoutProductInput[] | ProductAllergenUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutProductInput | ProductAllergenCreateOrConnectWithoutProductInput[]
    upsert?: ProductAllergenUpsertWithWhereUniqueWithoutProductInput | ProductAllergenUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductAllergenCreateManyProductInputEnvelope
    set?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    disconnect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    delete?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    update?: ProductAllergenUpdateWithWhereUniqueWithoutProductInput | ProductAllergenUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductAllergenUpdateManyWithWhereWithoutProductInput | ProductAllergenUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductAllergenScalarWhereInput | ProductAllergenScalarWhereInput[]
  }

  export type ProductExpirationUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductExpirationCreateWithoutProductInput, ProductExpirationUncheckedCreateWithoutProductInput> | ProductExpirationCreateWithoutProductInput[] | ProductExpirationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutProductInput | ProductExpirationCreateOrConnectWithoutProductInput[]
    upsert?: ProductExpirationUpsertWithWhereUniqueWithoutProductInput | ProductExpirationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductExpirationCreateManyProductInputEnvelope
    set?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    disconnect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    delete?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    update?: ProductExpirationUpdateWithWhereUniqueWithoutProductInput | ProductExpirationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductExpirationUpdateManyWithWhereWithoutProductInput | ProductExpirationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductExpirationScalarWhereInput | ProductExpirationScalarWhereInput[]
  }

  export type StockBySedeUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<StockBySedeCreateWithoutProductInput, StockBySedeUncheckedCreateWithoutProductInput> | StockBySedeCreateWithoutProductInput[] | StockBySedeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutProductInput | StockBySedeCreateOrConnectWithoutProductInput[]
    upsert?: StockBySedeUpsertWithWhereUniqueWithoutProductInput | StockBySedeUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: StockBySedeCreateManyProductInputEnvelope
    set?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    disconnect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    delete?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    update?: StockBySedeUpdateWithWhereUniqueWithoutProductInput | StockBySedeUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: StockBySedeUpdateManyWithWhereWithoutProductInput | StockBySedeUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: StockBySedeScalarWhereInput | StockBySedeScalarWhereInput[]
  }

  export type InventoryUsageCreateNestedManyWithoutSedeInput = {
    create?: XOR<InventoryUsageCreateWithoutSedeInput, InventoryUsageUncheckedCreateWithoutSedeInput> | InventoryUsageCreateWithoutSedeInput[] | InventoryUsageUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutSedeInput | InventoryUsageCreateOrConnectWithoutSedeInput[]
    createMany?: InventoryUsageCreateManySedeInputEnvelope
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
  }

  export type MovementCreateNestedManyWithoutSedeInput = {
    create?: XOR<MovementCreateWithoutSedeInput, MovementUncheckedCreateWithoutSedeInput> | MovementCreateWithoutSedeInput[] | MovementUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutSedeInput | MovementCreateOrConnectWithoutSedeInput[]
    createMany?: MovementCreateManySedeInputEnvelope
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
  }

  export type ProductExpirationCreateNestedManyWithoutSedeInput = {
    create?: XOR<ProductExpirationCreateWithoutSedeInput, ProductExpirationUncheckedCreateWithoutSedeInput> | ProductExpirationCreateWithoutSedeInput[] | ProductExpirationUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutSedeInput | ProductExpirationCreateOrConnectWithoutSedeInput[]
    createMany?: ProductExpirationCreateManySedeInputEnvelope
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
  }

  export type StockBySedeCreateNestedManyWithoutSedeInput = {
    create?: XOR<StockBySedeCreateWithoutSedeInput, StockBySedeUncheckedCreateWithoutSedeInput> | StockBySedeCreateWithoutSedeInput[] | StockBySedeUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutSedeInput | StockBySedeCreateOrConnectWithoutSedeInput[]
    createMany?: StockBySedeCreateManySedeInputEnvelope
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutSedeInput = {
    create?: XOR<UserCreateWithoutSedeInput, UserUncheckedCreateWithoutSedeInput> | UserCreateWithoutSedeInput[] | UserUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSedeInput | UserCreateOrConnectWithoutSedeInput[]
    createMany?: UserCreateManySedeInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type InventoryUsageUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<InventoryUsageCreateWithoutSedeInput, InventoryUsageUncheckedCreateWithoutSedeInput> | InventoryUsageCreateWithoutSedeInput[] | InventoryUsageUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutSedeInput | InventoryUsageCreateOrConnectWithoutSedeInput[]
    createMany?: InventoryUsageCreateManySedeInputEnvelope
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
  }

  export type MovementUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<MovementCreateWithoutSedeInput, MovementUncheckedCreateWithoutSedeInput> | MovementCreateWithoutSedeInput[] | MovementUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutSedeInput | MovementCreateOrConnectWithoutSedeInput[]
    createMany?: MovementCreateManySedeInputEnvelope
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
  }

  export type ProductExpirationUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<ProductExpirationCreateWithoutSedeInput, ProductExpirationUncheckedCreateWithoutSedeInput> | ProductExpirationCreateWithoutSedeInput[] | ProductExpirationUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutSedeInput | ProductExpirationCreateOrConnectWithoutSedeInput[]
    createMany?: ProductExpirationCreateManySedeInputEnvelope
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
  }

  export type StockBySedeUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<StockBySedeCreateWithoutSedeInput, StockBySedeUncheckedCreateWithoutSedeInput> | StockBySedeCreateWithoutSedeInput[] | StockBySedeUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutSedeInput | StockBySedeCreateOrConnectWithoutSedeInput[]
    createMany?: StockBySedeCreateManySedeInputEnvelope
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<UserCreateWithoutSedeInput, UserUncheckedCreateWithoutSedeInput> | UserCreateWithoutSedeInput[] | UserUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSedeInput | UserCreateOrConnectWithoutSedeInput[]
    createMany?: UserCreateManySedeInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type InventoryUsageUpdateManyWithoutSedeNestedInput = {
    create?: XOR<InventoryUsageCreateWithoutSedeInput, InventoryUsageUncheckedCreateWithoutSedeInput> | InventoryUsageCreateWithoutSedeInput[] | InventoryUsageUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutSedeInput | InventoryUsageCreateOrConnectWithoutSedeInput[]
    upsert?: InventoryUsageUpsertWithWhereUniqueWithoutSedeInput | InventoryUsageUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: InventoryUsageCreateManySedeInputEnvelope
    set?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    disconnect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    delete?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    update?: InventoryUsageUpdateWithWhereUniqueWithoutSedeInput | InventoryUsageUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: InventoryUsageUpdateManyWithWhereWithoutSedeInput | InventoryUsageUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
  }

  export type MovementUpdateManyWithoutSedeNestedInput = {
    create?: XOR<MovementCreateWithoutSedeInput, MovementUncheckedCreateWithoutSedeInput> | MovementCreateWithoutSedeInput[] | MovementUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutSedeInput | MovementCreateOrConnectWithoutSedeInput[]
    upsert?: MovementUpsertWithWhereUniqueWithoutSedeInput | MovementUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: MovementCreateManySedeInputEnvelope
    set?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    disconnect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    delete?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    update?: MovementUpdateWithWhereUniqueWithoutSedeInput | MovementUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: MovementUpdateManyWithWhereWithoutSedeInput | MovementUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: MovementScalarWhereInput | MovementScalarWhereInput[]
  }

  export type ProductExpirationUpdateManyWithoutSedeNestedInput = {
    create?: XOR<ProductExpirationCreateWithoutSedeInput, ProductExpirationUncheckedCreateWithoutSedeInput> | ProductExpirationCreateWithoutSedeInput[] | ProductExpirationUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutSedeInput | ProductExpirationCreateOrConnectWithoutSedeInput[]
    upsert?: ProductExpirationUpsertWithWhereUniqueWithoutSedeInput | ProductExpirationUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: ProductExpirationCreateManySedeInputEnvelope
    set?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    disconnect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    delete?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    update?: ProductExpirationUpdateWithWhereUniqueWithoutSedeInput | ProductExpirationUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: ProductExpirationUpdateManyWithWhereWithoutSedeInput | ProductExpirationUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: ProductExpirationScalarWhereInput | ProductExpirationScalarWhereInput[]
  }

  export type StockBySedeUpdateManyWithoutSedeNestedInput = {
    create?: XOR<StockBySedeCreateWithoutSedeInput, StockBySedeUncheckedCreateWithoutSedeInput> | StockBySedeCreateWithoutSedeInput[] | StockBySedeUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutSedeInput | StockBySedeCreateOrConnectWithoutSedeInput[]
    upsert?: StockBySedeUpsertWithWhereUniqueWithoutSedeInput | StockBySedeUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: StockBySedeCreateManySedeInputEnvelope
    set?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    disconnect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    delete?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    update?: StockBySedeUpdateWithWhereUniqueWithoutSedeInput | StockBySedeUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: StockBySedeUpdateManyWithWhereWithoutSedeInput | StockBySedeUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: StockBySedeScalarWhereInput | StockBySedeScalarWhereInput[]
  }

  export type UserUpdateManyWithoutSedeNestedInput = {
    create?: XOR<UserCreateWithoutSedeInput, UserUncheckedCreateWithoutSedeInput> | UserCreateWithoutSedeInput[] | UserUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSedeInput | UserCreateOrConnectWithoutSedeInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutSedeInput | UserUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: UserCreateManySedeInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutSedeInput | UserUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: UserUpdateManyWithWhereWithoutSedeInput | UserUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type InventoryUsageUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<InventoryUsageCreateWithoutSedeInput, InventoryUsageUncheckedCreateWithoutSedeInput> | InventoryUsageCreateWithoutSedeInput[] | InventoryUsageUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutSedeInput | InventoryUsageCreateOrConnectWithoutSedeInput[]
    upsert?: InventoryUsageUpsertWithWhereUniqueWithoutSedeInput | InventoryUsageUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: InventoryUsageCreateManySedeInputEnvelope
    set?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    disconnect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    delete?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    update?: InventoryUsageUpdateWithWhereUniqueWithoutSedeInput | InventoryUsageUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: InventoryUsageUpdateManyWithWhereWithoutSedeInput | InventoryUsageUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
  }

  export type MovementUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<MovementCreateWithoutSedeInput, MovementUncheckedCreateWithoutSedeInput> | MovementCreateWithoutSedeInput[] | MovementUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutSedeInput | MovementCreateOrConnectWithoutSedeInput[]
    upsert?: MovementUpsertWithWhereUniqueWithoutSedeInput | MovementUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: MovementCreateManySedeInputEnvelope
    set?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    disconnect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    delete?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    update?: MovementUpdateWithWhereUniqueWithoutSedeInput | MovementUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: MovementUpdateManyWithWhereWithoutSedeInput | MovementUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: MovementScalarWhereInput | MovementScalarWhereInput[]
  }

  export type ProductExpirationUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<ProductExpirationCreateWithoutSedeInput, ProductExpirationUncheckedCreateWithoutSedeInput> | ProductExpirationCreateWithoutSedeInput[] | ProductExpirationUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ProductExpirationCreateOrConnectWithoutSedeInput | ProductExpirationCreateOrConnectWithoutSedeInput[]
    upsert?: ProductExpirationUpsertWithWhereUniqueWithoutSedeInput | ProductExpirationUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: ProductExpirationCreateManySedeInputEnvelope
    set?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    disconnect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    delete?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    connect?: ProductExpirationWhereUniqueInput | ProductExpirationWhereUniqueInput[]
    update?: ProductExpirationUpdateWithWhereUniqueWithoutSedeInput | ProductExpirationUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: ProductExpirationUpdateManyWithWhereWithoutSedeInput | ProductExpirationUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: ProductExpirationScalarWhereInput | ProductExpirationScalarWhereInput[]
  }

  export type StockBySedeUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<StockBySedeCreateWithoutSedeInput, StockBySedeUncheckedCreateWithoutSedeInput> | StockBySedeCreateWithoutSedeInput[] | StockBySedeUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: StockBySedeCreateOrConnectWithoutSedeInput | StockBySedeCreateOrConnectWithoutSedeInput[]
    upsert?: StockBySedeUpsertWithWhereUniqueWithoutSedeInput | StockBySedeUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: StockBySedeCreateManySedeInputEnvelope
    set?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    disconnect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    delete?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    connect?: StockBySedeWhereUniqueInput | StockBySedeWhereUniqueInput[]
    update?: StockBySedeUpdateWithWhereUniqueWithoutSedeInput | StockBySedeUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: StockBySedeUpdateManyWithWhereWithoutSedeInput | StockBySedeUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: StockBySedeScalarWhereInput | StockBySedeScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<UserCreateWithoutSedeInput, UserUncheckedCreateWithoutSedeInput> | UserCreateWithoutSedeInput[] | UserUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSedeInput | UserCreateOrConnectWithoutSedeInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutSedeInput | UserUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: UserCreateManySedeInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutSedeInput | UserUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: UserUpdateManyWithWhereWithoutSedeInput | UserUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type InventoryUsageCreateNestedManyWithoutUserInput = {
    create?: XOR<InventoryUsageCreateWithoutUserInput, InventoryUsageUncheckedCreateWithoutUserInput> | InventoryUsageCreateWithoutUserInput[] | InventoryUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutUserInput | InventoryUsageCreateOrConnectWithoutUserInput[]
    createMany?: InventoryUsageCreateManyUserInputEnvelope
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
  }

  export type MovementCreateNestedManyWithoutUserInput = {
    create?: XOR<MovementCreateWithoutUserInput, MovementUncheckedCreateWithoutUserInput> | MovementCreateWithoutUserInput[] | MovementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutUserInput | MovementCreateOrConnectWithoutUserInput[]
    createMany?: MovementCreateManyUserInputEnvelope
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
  }

  export type SedeCreateNestedOneWithoutUserInput = {
    create?: XOR<SedeCreateWithoutUserInput, SedeUncheckedCreateWithoutUserInput>
    connectOrCreate?: SedeCreateOrConnectWithoutUserInput
    connect?: SedeWhereUniqueInput
  }

  export type InventoryUsageUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<InventoryUsageCreateWithoutUserInput, InventoryUsageUncheckedCreateWithoutUserInput> | InventoryUsageCreateWithoutUserInput[] | InventoryUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutUserInput | InventoryUsageCreateOrConnectWithoutUserInput[]
    createMany?: InventoryUsageCreateManyUserInputEnvelope
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
  }

  export type MovementUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MovementCreateWithoutUserInput, MovementUncheckedCreateWithoutUserInput> | MovementCreateWithoutUserInput[] | MovementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutUserInput | MovementCreateOrConnectWithoutUserInput[]
    createMany?: MovementCreateManyUserInputEnvelope
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type InventoryUsageUpdateManyWithoutUserNestedInput = {
    create?: XOR<InventoryUsageCreateWithoutUserInput, InventoryUsageUncheckedCreateWithoutUserInput> | InventoryUsageCreateWithoutUserInput[] | InventoryUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutUserInput | InventoryUsageCreateOrConnectWithoutUserInput[]
    upsert?: InventoryUsageUpsertWithWhereUniqueWithoutUserInput | InventoryUsageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InventoryUsageCreateManyUserInputEnvelope
    set?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    disconnect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    delete?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    update?: InventoryUsageUpdateWithWhereUniqueWithoutUserInput | InventoryUsageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InventoryUsageUpdateManyWithWhereWithoutUserInput | InventoryUsageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
  }

  export type MovementUpdateManyWithoutUserNestedInput = {
    create?: XOR<MovementCreateWithoutUserInput, MovementUncheckedCreateWithoutUserInput> | MovementCreateWithoutUserInput[] | MovementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutUserInput | MovementCreateOrConnectWithoutUserInput[]
    upsert?: MovementUpsertWithWhereUniqueWithoutUserInput | MovementUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MovementCreateManyUserInputEnvelope
    set?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    disconnect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    delete?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    update?: MovementUpdateWithWhereUniqueWithoutUserInput | MovementUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MovementUpdateManyWithWhereWithoutUserInput | MovementUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MovementScalarWhereInput | MovementScalarWhereInput[]
  }

  export type SedeUpdateOneRequiredWithoutUserNestedInput = {
    create?: XOR<SedeCreateWithoutUserInput, SedeUncheckedCreateWithoutUserInput>
    connectOrCreate?: SedeCreateOrConnectWithoutUserInput
    upsert?: SedeUpsertWithoutUserInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutUserInput, SedeUpdateWithoutUserInput>, SedeUncheckedUpdateWithoutUserInput>
  }

  export type InventoryUsageUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<InventoryUsageCreateWithoutUserInput, InventoryUsageUncheckedCreateWithoutUserInput> | InventoryUsageCreateWithoutUserInput[] | InventoryUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutUserInput | InventoryUsageCreateOrConnectWithoutUserInput[]
    upsert?: InventoryUsageUpsertWithWhereUniqueWithoutUserInput | InventoryUsageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InventoryUsageCreateManyUserInputEnvelope
    set?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    disconnect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    delete?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    connect?: InventoryUsageWhereUniqueInput | InventoryUsageWhereUniqueInput[]
    update?: InventoryUsageUpdateWithWhereUniqueWithoutUserInput | InventoryUsageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InventoryUsageUpdateManyWithWhereWithoutUserInput | InventoryUsageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
  }

  export type MovementUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MovementCreateWithoutUserInput, MovementUncheckedCreateWithoutUserInput> | MovementCreateWithoutUserInput[] | MovementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MovementCreateOrConnectWithoutUserInput | MovementCreateOrConnectWithoutUserInput[]
    upsert?: MovementUpsertWithWhereUniqueWithoutUserInput | MovementUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MovementCreateManyUserInputEnvelope
    set?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    disconnect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    delete?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    connect?: MovementWhereUniqueInput | MovementWhereUniqueInput[]
    update?: MovementUpdateWithWhereUniqueWithoutUserInput | MovementUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MovementUpdateManyWithWhereWithoutUserInput | MovementUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MovementScalarWhereInput | MovementScalarWhereInput[]
  }

  export type pacientesCreateNestedOneWithoutInventoryUsageInput = {
    create?: XOR<pacientesCreateWithoutInventoryUsageInput, pacientesUncheckedCreateWithoutInventoryUsageInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutInventoryUsageInput
    connect?: pacientesWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutInventoryUsageInput = {
    create?: XOR<SedeCreateWithoutInventoryUsageInput, SedeUncheckedCreateWithoutInventoryUsageInput>
    connectOrCreate?: SedeCreateOrConnectWithoutInventoryUsageInput
    connect?: SedeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInventoryUsageInput = {
    create?: XOR<UserCreateWithoutInventoryUsageInput, UserUncheckedCreateWithoutInventoryUsageInput>
    connectOrCreate?: UserCreateOrConnectWithoutInventoryUsageInput
    connect?: UserWhereUniqueInput
  }

  export type InventoryUsageDetailCreateNestedManyWithoutInventoryUsageInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput> | InventoryUsageDetailCreateWithoutInventoryUsageInput[] | InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput | InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput[]
    createMany?: InventoryUsageDetailCreateManyInventoryUsageInputEnvelope
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
  }

  export type InventoryUsageDetailUncheckedCreateNestedManyWithoutInventoryUsageInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput> | InventoryUsageDetailCreateWithoutInventoryUsageInput[] | InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput | InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput[]
    createMany?: InventoryUsageDetailCreateManyInventoryUsageInputEnvelope
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
  }

  export type EnumTipoTratamientoFieldUpdateOperationsInput = {
    set?: $Enums.TipoTratamiento
  }

  export type pacientesUpdateOneWithoutInventoryUsageNestedInput = {
    create?: XOR<pacientesCreateWithoutInventoryUsageInput, pacientesUncheckedCreateWithoutInventoryUsageInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutInventoryUsageInput
    upsert?: pacientesUpsertWithoutInventoryUsageInput
    disconnect?: pacientesWhereInput | boolean
    delete?: pacientesWhereInput | boolean
    connect?: pacientesWhereUniqueInput
    update?: XOR<XOR<pacientesUpdateToOneWithWhereWithoutInventoryUsageInput, pacientesUpdateWithoutInventoryUsageInput>, pacientesUncheckedUpdateWithoutInventoryUsageInput>
  }

  export type SedeUpdateOneRequiredWithoutInventoryUsageNestedInput = {
    create?: XOR<SedeCreateWithoutInventoryUsageInput, SedeUncheckedCreateWithoutInventoryUsageInput>
    connectOrCreate?: SedeCreateOrConnectWithoutInventoryUsageInput
    upsert?: SedeUpsertWithoutInventoryUsageInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutInventoryUsageInput, SedeUpdateWithoutInventoryUsageInput>, SedeUncheckedUpdateWithoutInventoryUsageInput>
  }

  export type UserUpdateOneRequiredWithoutInventoryUsageNestedInput = {
    create?: XOR<UserCreateWithoutInventoryUsageInput, UserUncheckedCreateWithoutInventoryUsageInput>
    connectOrCreate?: UserCreateOrConnectWithoutInventoryUsageInput
    upsert?: UserUpsertWithoutInventoryUsageInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInventoryUsageInput, UserUpdateWithoutInventoryUsageInput>, UserUncheckedUpdateWithoutInventoryUsageInput>
  }

  export type InventoryUsageDetailUpdateManyWithoutInventoryUsageNestedInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput> | InventoryUsageDetailCreateWithoutInventoryUsageInput[] | InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput | InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput[]
    upsert?: InventoryUsageDetailUpsertWithWhereUniqueWithoutInventoryUsageInput | InventoryUsageDetailUpsertWithWhereUniqueWithoutInventoryUsageInput[]
    createMany?: InventoryUsageDetailCreateManyInventoryUsageInputEnvelope
    set?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    disconnect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    delete?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    update?: InventoryUsageDetailUpdateWithWhereUniqueWithoutInventoryUsageInput | InventoryUsageDetailUpdateWithWhereUniqueWithoutInventoryUsageInput[]
    updateMany?: InventoryUsageDetailUpdateManyWithWhereWithoutInventoryUsageInput | InventoryUsageDetailUpdateManyWithWhereWithoutInventoryUsageInput[]
    deleteMany?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
  }

  export type InventoryUsageDetailUncheckedUpdateManyWithoutInventoryUsageNestedInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput> | InventoryUsageDetailCreateWithoutInventoryUsageInput[] | InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput | InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput[]
    upsert?: InventoryUsageDetailUpsertWithWhereUniqueWithoutInventoryUsageInput | InventoryUsageDetailUpsertWithWhereUniqueWithoutInventoryUsageInput[]
    createMany?: InventoryUsageDetailCreateManyInventoryUsageInputEnvelope
    set?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    disconnect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    delete?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    update?: InventoryUsageDetailUpdateWithWhereUniqueWithoutInventoryUsageInput | InventoryUsageDetailUpdateWithWhereUniqueWithoutInventoryUsageInput[]
    updateMany?: InventoryUsageDetailUpdateManyWithWhereWithoutInventoryUsageInput | InventoryUsageDetailUpdateManyWithWhereWithoutInventoryUsageInput[]
    deleteMany?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
  }

  export type InventoryUsageCreateNestedOneWithoutDetailsInput = {
    create?: XOR<InventoryUsageCreateWithoutDetailsInput, InventoryUsageUncheckedCreateWithoutDetailsInput>
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutDetailsInput
    connect?: InventoryUsageWhereUniqueInput
  }

  export type MovementCreateNestedOneWithoutInventoryUsageDetailInput = {
    create?: XOR<MovementCreateWithoutInventoryUsageDetailInput, MovementUncheckedCreateWithoutInventoryUsageDetailInput>
    connectOrCreate?: MovementCreateOrConnectWithoutInventoryUsageDetailInput
    connect?: MovementWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutInventoryUsageDetailInput = {
    create?: XOR<ProductCreateWithoutInventoryUsageDetailInput, ProductUncheckedCreateWithoutInventoryUsageDetailInput>
    connectOrCreate?: ProductCreateOrConnectWithoutInventoryUsageDetailInput
    connect?: ProductWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type InventoryUsageUpdateOneRequiredWithoutDetailsNestedInput = {
    create?: XOR<InventoryUsageCreateWithoutDetailsInput, InventoryUsageUncheckedCreateWithoutDetailsInput>
    connectOrCreate?: InventoryUsageCreateOrConnectWithoutDetailsInput
    upsert?: InventoryUsageUpsertWithoutDetailsInput
    connect?: InventoryUsageWhereUniqueInput
    update?: XOR<XOR<InventoryUsageUpdateToOneWithWhereWithoutDetailsInput, InventoryUsageUpdateWithoutDetailsInput>, InventoryUsageUncheckedUpdateWithoutDetailsInput>
  }

  export type MovementUpdateOneWithoutInventoryUsageDetailNestedInput = {
    create?: XOR<MovementCreateWithoutInventoryUsageDetailInput, MovementUncheckedCreateWithoutInventoryUsageDetailInput>
    connectOrCreate?: MovementCreateOrConnectWithoutInventoryUsageDetailInput
    upsert?: MovementUpsertWithoutInventoryUsageDetailInput
    disconnect?: MovementWhereInput | boolean
    delete?: MovementWhereInput | boolean
    connect?: MovementWhereUniqueInput
    update?: XOR<XOR<MovementUpdateToOneWithWhereWithoutInventoryUsageDetailInput, MovementUpdateWithoutInventoryUsageDetailInput>, MovementUncheckedUpdateWithoutInventoryUsageDetailInput>
  }

  export type ProductUpdateOneRequiredWithoutInventoryUsageDetailNestedInput = {
    create?: XOR<ProductCreateWithoutInventoryUsageDetailInput, ProductUncheckedCreateWithoutInventoryUsageDetailInput>
    connectOrCreate?: ProductCreateOrConnectWithoutInventoryUsageDetailInput
    upsert?: ProductUpsertWithoutInventoryUsageDetailInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutInventoryUsageDetailInput, ProductUpdateWithoutInventoryUsageDetailInput>, ProductUncheckedUpdateWithoutInventoryUsageDetailInput>
  }

  export type InventoryUsageDetailCreateNestedManyWithoutMovementInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutMovementInput, InventoryUsageDetailUncheckedCreateWithoutMovementInput> | InventoryUsageDetailCreateWithoutMovementInput[] | InventoryUsageDetailUncheckedCreateWithoutMovementInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutMovementInput | InventoryUsageDetailCreateOrConnectWithoutMovementInput[]
    createMany?: InventoryUsageDetailCreateManyMovementInputEnvelope
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
  }

  export type ProductCreateNestedOneWithoutMovementInput = {
    create?: XOR<ProductCreateWithoutMovementInput, ProductUncheckedCreateWithoutMovementInput>
    connectOrCreate?: ProductCreateOrConnectWithoutMovementInput
    connect?: ProductWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutMovementInput = {
    create?: XOR<SedeCreateWithoutMovementInput, SedeUncheckedCreateWithoutMovementInput>
    connectOrCreate?: SedeCreateOrConnectWithoutMovementInput
    connect?: SedeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMovementInput = {
    create?: XOR<UserCreateWithoutMovementInput, UserUncheckedCreateWithoutMovementInput>
    connectOrCreate?: UserCreateOrConnectWithoutMovementInput
    connect?: UserWhereUniqueInput
  }

  export type InventoryUsageDetailUncheckedCreateNestedManyWithoutMovementInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutMovementInput, InventoryUsageDetailUncheckedCreateWithoutMovementInput> | InventoryUsageDetailCreateWithoutMovementInput[] | InventoryUsageDetailUncheckedCreateWithoutMovementInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutMovementInput | InventoryUsageDetailCreateOrConnectWithoutMovementInput[]
    createMany?: InventoryUsageDetailCreateManyMovementInputEnvelope
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
  }

  export type EnumMovementTypeFieldUpdateOperationsInput = {
    set?: $Enums.MovementType
  }

  export type InventoryUsageDetailUpdateManyWithoutMovementNestedInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutMovementInput, InventoryUsageDetailUncheckedCreateWithoutMovementInput> | InventoryUsageDetailCreateWithoutMovementInput[] | InventoryUsageDetailUncheckedCreateWithoutMovementInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutMovementInput | InventoryUsageDetailCreateOrConnectWithoutMovementInput[]
    upsert?: InventoryUsageDetailUpsertWithWhereUniqueWithoutMovementInput | InventoryUsageDetailUpsertWithWhereUniqueWithoutMovementInput[]
    createMany?: InventoryUsageDetailCreateManyMovementInputEnvelope
    set?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    disconnect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    delete?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    update?: InventoryUsageDetailUpdateWithWhereUniqueWithoutMovementInput | InventoryUsageDetailUpdateWithWhereUniqueWithoutMovementInput[]
    updateMany?: InventoryUsageDetailUpdateManyWithWhereWithoutMovementInput | InventoryUsageDetailUpdateManyWithWhereWithoutMovementInput[]
    deleteMany?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
  }

  export type ProductUpdateOneRequiredWithoutMovementNestedInput = {
    create?: XOR<ProductCreateWithoutMovementInput, ProductUncheckedCreateWithoutMovementInput>
    connectOrCreate?: ProductCreateOrConnectWithoutMovementInput
    upsert?: ProductUpsertWithoutMovementInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutMovementInput, ProductUpdateWithoutMovementInput>, ProductUncheckedUpdateWithoutMovementInput>
  }

  export type SedeUpdateOneRequiredWithoutMovementNestedInput = {
    create?: XOR<SedeCreateWithoutMovementInput, SedeUncheckedCreateWithoutMovementInput>
    connectOrCreate?: SedeCreateOrConnectWithoutMovementInput
    upsert?: SedeUpsertWithoutMovementInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutMovementInput, SedeUpdateWithoutMovementInput>, SedeUncheckedUpdateWithoutMovementInput>
  }

  export type UserUpdateOneRequiredWithoutMovementNestedInput = {
    create?: XOR<UserCreateWithoutMovementInput, UserUncheckedCreateWithoutMovementInput>
    connectOrCreate?: UserCreateOrConnectWithoutMovementInput
    upsert?: UserUpsertWithoutMovementInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMovementInput, UserUpdateWithoutMovementInput>, UserUncheckedUpdateWithoutMovementInput>
  }

  export type InventoryUsageDetailUncheckedUpdateManyWithoutMovementNestedInput = {
    create?: XOR<InventoryUsageDetailCreateWithoutMovementInput, InventoryUsageDetailUncheckedCreateWithoutMovementInput> | InventoryUsageDetailCreateWithoutMovementInput[] | InventoryUsageDetailUncheckedCreateWithoutMovementInput[]
    connectOrCreate?: InventoryUsageDetailCreateOrConnectWithoutMovementInput | InventoryUsageDetailCreateOrConnectWithoutMovementInput[]
    upsert?: InventoryUsageDetailUpsertWithWhereUniqueWithoutMovementInput | InventoryUsageDetailUpsertWithWhereUniqueWithoutMovementInput[]
    createMany?: InventoryUsageDetailCreateManyMovementInputEnvelope
    set?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    disconnect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    delete?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    connect?: InventoryUsageDetailWhereUniqueInput | InventoryUsageDetailWhereUniqueInput[]
    update?: InventoryUsageDetailUpdateWithWhereUniqueWithoutMovementInput | InventoryUsageDetailUpdateWithWhereUniqueWithoutMovementInput[]
    updateMany?: InventoryUsageDetailUpdateManyWithWhereWithoutMovementInput | InventoryUsageDetailUpdateManyWithWhereWithoutMovementInput[]
    deleteMany?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutStockBySedeInput = {
    create?: XOR<ProductCreateWithoutStockBySedeInput, ProductUncheckedCreateWithoutStockBySedeInput>
    connectOrCreate?: ProductCreateOrConnectWithoutStockBySedeInput
    connect?: ProductWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutStockBySedeInput = {
    create?: XOR<SedeCreateWithoutStockBySedeInput, SedeUncheckedCreateWithoutStockBySedeInput>
    connectOrCreate?: SedeCreateOrConnectWithoutStockBySedeInput
    connect?: SedeWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutStockBySedeNestedInput = {
    create?: XOR<ProductCreateWithoutStockBySedeInput, ProductUncheckedCreateWithoutStockBySedeInput>
    connectOrCreate?: ProductCreateOrConnectWithoutStockBySedeInput
    upsert?: ProductUpsertWithoutStockBySedeInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutStockBySedeInput, ProductUpdateWithoutStockBySedeInput>, ProductUncheckedUpdateWithoutStockBySedeInput>
  }

  export type SedeUpdateOneRequiredWithoutStockBySedeNestedInput = {
    create?: XOR<SedeCreateWithoutStockBySedeInput, SedeUncheckedCreateWithoutStockBySedeInput>
    connectOrCreate?: SedeCreateOrConnectWithoutStockBySedeInput
    upsert?: SedeUpsertWithoutStockBySedeInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutStockBySedeInput, SedeUpdateWithoutStockBySedeInput>, SedeUncheckedUpdateWithoutStockBySedeInput>
  }

  export type ProductCreateNestedOneWithoutProductExpirationInput = {
    create?: XOR<ProductCreateWithoutProductExpirationInput, ProductUncheckedCreateWithoutProductExpirationInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductExpirationInput
    connect?: ProductWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutProductExpirationInput = {
    create?: XOR<SedeCreateWithoutProductExpirationInput, SedeUncheckedCreateWithoutProductExpirationInput>
    connectOrCreate?: SedeCreateOrConnectWithoutProductExpirationInput
    connect?: SedeWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutProductExpirationNestedInput = {
    create?: XOR<ProductCreateWithoutProductExpirationInput, ProductUncheckedCreateWithoutProductExpirationInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductExpirationInput
    upsert?: ProductUpsertWithoutProductExpirationInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductExpirationInput, ProductUpdateWithoutProductExpirationInput>, ProductUncheckedUpdateWithoutProductExpirationInput>
  }

  export type SedeUpdateOneRequiredWithoutProductExpirationNestedInput = {
    create?: XOR<SedeCreateWithoutProductExpirationInput, SedeUncheckedCreateWithoutProductExpirationInput>
    connectOrCreate?: SedeCreateOrConnectWithoutProductExpirationInput
    upsert?: SedeUpsertWithoutProductExpirationInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutProductExpirationInput, SedeUpdateWithoutProductExpirationInput>, SedeUncheckedUpdateWithoutProductExpirationInput>
  }

  export type ProductAllergenCreateNestedManyWithoutAllergenInput = {
    create?: XOR<ProductAllergenCreateWithoutAllergenInput, ProductAllergenUncheckedCreateWithoutAllergenInput> | ProductAllergenCreateWithoutAllergenInput[] | ProductAllergenUncheckedCreateWithoutAllergenInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutAllergenInput | ProductAllergenCreateOrConnectWithoutAllergenInput[]
    createMany?: ProductAllergenCreateManyAllergenInputEnvelope
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
  }

  export type ProductAllergenUncheckedCreateNestedManyWithoutAllergenInput = {
    create?: XOR<ProductAllergenCreateWithoutAllergenInput, ProductAllergenUncheckedCreateWithoutAllergenInput> | ProductAllergenCreateWithoutAllergenInput[] | ProductAllergenUncheckedCreateWithoutAllergenInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutAllergenInput | ProductAllergenCreateOrConnectWithoutAllergenInput[]
    createMany?: ProductAllergenCreateManyAllergenInputEnvelope
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
  }

  export type NullableEnumAlxoidTypeFieldUpdateOperationsInput = {
    set?: $Enums.AlxoidType | null
  }

  export type ProductAllergenUpdateManyWithoutAllergenNestedInput = {
    create?: XOR<ProductAllergenCreateWithoutAllergenInput, ProductAllergenUncheckedCreateWithoutAllergenInput> | ProductAllergenCreateWithoutAllergenInput[] | ProductAllergenUncheckedCreateWithoutAllergenInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutAllergenInput | ProductAllergenCreateOrConnectWithoutAllergenInput[]
    upsert?: ProductAllergenUpsertWithWhereUniqueWithoutAllergenInput | ProductAllergenUpsertWithWhereUniqueWithoutAllergenInput[]
    createMany?: ProductAllergenCreateManyAllergenInputEnvelope
    set?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    disconnect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    delete?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    update?: ProductAllergenUpdateWithWhereUniqueWithoutAllergenInput | ProductAllergenUpdateWithWhereUniqueWithoutAllergenInput[]
    updateMany?: ProductAllergenUpdateManyWithWhereWithoutAllergenInput | ProductAllergenUpdateManyWithWhereWithoutAllergenInput[]
    deleteMany?: ProductAllergenScalarWhereInput | ProductAllergenScalarWhereInput[]
  }

  export type ProductAllergenUncheckedUpdateManyWithoutAllergenNestedInput = {
    create?: XOR<ProductAllergenCreateWithoutAllergenInput, ProductAllergenUncheckedCreateWithoutAllergenInput> | ProductAllergenCreateWithoutAllergenInput[] | ProductAllergenUncheckedCreateWithoutAllergenInput[]
    connectOrCreate?: ProductAllergenCreateOrConnectWithoutAllergenInput | ProductAllergenCreateOrConnectWithoutAllergenInput[]
    upsert?: ProductAllergenUpsertWithWhereUniqueWithoutAllergenInput | ProductAllergenUpsertWithWhereUniqueWithoutAllergenInput[]
    createMany?: ProductAllergenCreateManyAllergenInputEnvelope
    set?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    disconnect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    delete?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    connect?: ProductAllergenWhereUniqueInput | ProductAllergenWhereUniqueInput[]
    update?: ProductAllergenUpdateWithWhereUniqueWithoutAllergenInput | ProductAllergenUpdateWithWhereUniqueWithoutAllergenInput[]
    updateMany?: ProductAllergenUpdateManyWithWhereWithoutAllergenInput | ProductAllergenUpdateManyWithWhereWithoutAllergenInput[]
    deleteMany?: ProductAllergenScalarWhereInput | ProductAllergenScalarWhereInput[]
  }

  export type AllergenCreateNestedOneWithoutProductAllergenInput = {
    create?: XOR<AllergenCreateWithoutProductAllergenInput, AllergenUncheckedCreateWithoutProductAllergenInput>
    connectOrCreate?: AllergenCreateOrConnectWithoutProductAllergenInput
    connect?: AllergenWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutProductAllergenInput = {
    create?: XOR<ProductCreateWithoutProductAllergenInput, ProductUncheckedCreateWithoutProductAllergenInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductAllergenInput
    connect?: ProductWhereUniqueInput
  }

  export type AllergenUpdateOneRequiredWithoutProductAllergenNestedInput = {
    create?: XOR<AllergenCreateWithoutProductAllergenInput, AllergenUncheckedCreateWithoutProductAllergenInput>
    connectOrCreate?: AllergenCreateOrConnectWithoutProductAllergenInput
    upsert?: AllergenUpsertWithoutProductAllergenInput
    connect?: AllergenWhereUniqueInput
    update?: XOR<XOR<AllergenUpdateToOneWithWhereWithoutProductAllergenInput, AllergenUpdateWithoutProductAllergenInput>, AllergenUncheckedUpdateWithoutProductAllergenInput>
  }

  export type ProductUpdateOneRequiredWithoutProductAllergenNestedInput = {
    create?: XOR<ProductCreateWithoutProductAllergenInput, ProductUncheckedCreateWithoutProductAllergenInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductAllergenInput
    upsert?: ProductUpsertWithoutProductAllergenInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductAllergenInput, ProductUpdateWithoutProductAllergenInput>, ProductUncheckedUpdateWithoutProductAllergenInput>
  }

  export type usuariosCreateNestedOneWithoutWhatsapp_configInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_configInput, usuariosUncheckedCreateWithoutWhatsapp_configInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_configInput
    connect?: usuariosWhereUniqueInput
  }

  export type usuariosUpdateOneRequiredWithoutWhatsapp_configNestedInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_configInput, usuariosUncheckedCreateWithoutWhatsapp_configInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_configInput
    upsert?: usuariosUpsertWithoutWhatsapp_configInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutWhatsapp_configInput, usuariosUpdateWithoutWhatsapp_configInput>, usuariosUncheckedUpdateWithoutWhatsapp_configInput>
  }

  export type usuariosCreateNestedOneWithoutWhatsapp_templatesInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_templatesInput, usuariosUncheckedCreateWithoutWhatsapp_templatesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_templatesInput
    connect?: usuariosWhereUniqueInput
  }

  export type usuariosUpdateOneRequiredWithoutWhatsapp_templatesNestedInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_templatesInput, usuariosUncheckedCreateWithoutWhatsapp_templatesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_templatesInput
    upsert?: usuariosUpsertWithoutWhatsapp_templatesInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutWhatsapp_templatesInput, usuariosUpdateWithoutWhatsapp_templatesInput>, usuariosUncheckedUpdateWithoutWhatsapp_templatesInput>
  }

  export type citasCreateNestedOneWithoutWhatsapp_messagesInput = {
    create?: XOR<citasCreateWithoutWhatsapp_messagesInput, citasUncheckedCreateWithoutWhatsapp_messagesInput>
    connectOrCreate?: citasCreateOrConnectWithoutWhatsapp_messagesInput
    connect?: citasWhereUniqueInput
  }

  export type pacientesCreateNestedOneWithoutWhatsapp_messagesInput = {
    create?: XOR<pacientesCreateWithoutWhatsapp_messagesInput, pacientesUncheckedCreateWithoutWhatsapp_messagesInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutWhatsapp_messagesInput
    connect?: pacientesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutWhatsapp_messagesInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_messagesInput, usuariosUncheckedCreateWithoutWhatsapp_messagesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_messagesInput
    connect?: usuariosWhereUniqueInput
  }

  export type EnumWhatsAppMessageStatusFieldUpdateOperationsInput = {
    set?: $Enums.WhatsAppMessageStatus
  }

  export type citasUpdateOneWithoutWhatsapp_messagesNestedInput = {
    create?: XOR<citasCreateWithoutWhatsapp_messagesInput, citasUncheckedCreateWithoutWhatsapp_messagesInput>
    connectOrCreate?: citasCreateOrConnectWithoutWhatsapp_messagesInput
    upsert?: citasUpsertWithoutWhatsapp_messagesInput
    disconnect?: citasWhereInput | boolean
    delete?: citasWhereInput | boolean
    connect?: citasWhereUniqueInput
    update?: XOR<XOR<citasUpdateToOneWithWhereWithoutWhatsapp_messagesInput, citasUpdateWithoutWhatsapp_messagesInput>, citasUncheckedUpdateWithoutWhatsapp_messagesInput>
  }

  export type pacientesUpdateOneWithoutWhatsapp_messagesNestedInput = {
    create?: XOR<pacientesCreateWithoutWhatsapp_messagesInput, pacientesUncheckedCreateWithoutWhatsapp_messagesInput>
    connectOrCreate?: pacientesCreateOrConnectWithoutWhatsapp_messagesInput
    upsert?: pacientesUpsertWithoutWhatsapp_messagesInput
    disconnect?: pacientesWhereInput | boolean
    delete?: pacientesWhereInput | boolean
    connect?: pacientesWhereUniqueInput
    update?: XOR<XOR<pacientesUpdateToOneWithWhereWithoutWhatsapp_messagesInput, pacientesUpdateWithoutWhatsapp_messagesInput>, pacientesUncheckedUpdateWithoutWhatsapp_messagesInput>
  }

  export type usuariosUpdateOneRequiredWithoutWhatsapp_messagesNestedInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_messagesInput, usuariosUncheckedCreateWithoutWhatsapp_messagesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_messagesInput
    upsert?: usuariosUpsertWithoutWhatsapp_messagesInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutWhatsapp_messagesInput, usuariosUpdateWithoutWhatsapp_messagesInput>, usuariosUncheckedUpdateWithoutWhatsapp_messagesInput>
  }

  export type citasCreateNestedOneWithoutWhatsapp_remindersInput = {
    create?: XOR<citasCreateWithoutWhatsapp_remindersInput, citasUncheckedCreateWithoutWhatsapp_remindersInput>
    connectOrCreate?: citasCreateOrConnectWithoutWhatsapp_remindersInput
    connect?: citasWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutWhatsapp_remindersInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_remindersInput, usuariosUncheckedCreateWithoutWhatsapp_remindersInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_remindersInput
    connect?: usuariosWhereUniqueInput
  }

  export type citasUpdateOneRequiredWithoutWhatsapp_remindersNestedInput = {
    create?: XOR<citasCreateWithoutWhatsapp_remindersInput, citasUncheckedCreateWithoutWhatsapp_remindersInput>
    connectOrCreate?: citasCreateOrConnectWithoutWhatsapp_remindersInput
    upsert?: citasUpsertWithoutWhatsapp_remindersInput
    connect?: citasWhereUniqueInput
    update?: XOR<XOR<citasUpdateToOneWithWhereWithoutWhatsapp_remindersInput, citasUpdateWithoutWhatsapp_remindersInput>, citasUncheckedUpdateWithoutWhatsapp_remindersInput>
  }

  export type usuariosUpdateOneRequiredWithoutWhatsapp_remindersNestedInput = {
    create?: XOR<usuariosCreateWithoutWhatsapp_remindersInput, usuariosUncheckedCreateWithoutWhatsapp_remindersInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutWhatsapp_remindersInput
    upsert?: usuariosUpsertWithoutWhatsapp_remindersInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutWhatsapp_remindersInput, usuariosUpdateWithoutWhatsapp_remindersInput>, usuariosUncheckedUpdateWithoutWhatsapp_remindersInput>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumRolFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolFilter<$PrismaModel> | $Enums.Rol
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumRolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolWithAggregatesFilter<$PrismaModel> | $Enums.Rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolFilter<$PrismaModel>
    _max?: NestedEnumRolFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumEstadoCobroFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCobro | EnumEstadoCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCobroFilter<$PrismaModel> | $Enums.EstadoCobro
  }

  export type NestedEnumMetodoPagoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel> | null
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumMetodoPagoNullableFilter<$PrismaModel> | $Enums.MetodoPago | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumEstadoCobroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCobro | EnumEstadoCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCobro[] | ListEnumEstadoCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCobroWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCobro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoCobroFilter<$PrismaModel>
    _max?: NestedEnumEstadoCobroFilter<$PrismaModel>
  }

  export type NestedEnumMetodoPagoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel> | null
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumMetodoPagoNullableWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoNullableFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedEnumTipoCambioFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCambio | EnumTipoCambioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCambioFilter<$PrismaModel> | $Enums.TipoCambio
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumTipoCambioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCambio | EnumTipoCambioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCambio[] | ListEnumTipoCambioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCambioWithAggregatesFilter<$PrismaModel> | $Enums.TipoCambio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoCambioFilter<$PrismaModel>
    _max?: NestedEnumTipoCambioFilter<$PrismaModel>
  }

  export type NestedEnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }

  export type NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }

  export type NestedEnumEstadoCitaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCita | EnumEstadoCitaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCitaFilter<$PrismaModel> | $Enums.EstadoCita
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumEstadoCitaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCita | EnumEstadoCitaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCita[] | ListEnumEstadoCitaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCitaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCita
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoCitaFilter<$PrismaModel>
    _max?: NestedEnumEstadoCitaFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumProductTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeFilter<$PrismaModel> | $Enums.ProductType
  }

  export type NestedEnumProductUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductUnit | EnumProductUnitFieldRefInput<$PrismaModel>
    in?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumProductUnitFilter<$PrismaModel> | $Enums.ProductUnit
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumProductTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductTypeFilter<$PrismaModel>
    _max?: NestedEnumProductTypeFilter<$PrismaModel>
  }

  export type NestedEnumProductUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductUnit | EnumProductUnitFieldRefInput<$PrismaModel>
    in?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductUnit[] | ListEnumProductUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumProductUnitWithAggregatesFilter<$PrismaModel> | $Enums.ProductUnit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductUnitFilter<$PrismaModel>
    _max?: NestedEnumProductUnitFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedEnumTipoTratamientoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTratamiento | EnumTipoTratamientoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTratamientoFilter<$PrismaModel> | $Enums.TipoTratamiento
  }

  export type NestedEnumTipoTratamientoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoTratamiento | EnumTipoTratamientoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoTratamiento[] | ListEnumTipoTratamientoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoTratamientoWithAggregatesFilter<$PrismaModel> | $Enums.TipoTratamiento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoTratamientoFilter<$PrismaModel>
    _max?: NestedEnumTipoTratamientoFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumMovementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeFilter<$PrismaModel> | $Enums.MovementType
  }

  export type NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel> | $Enums.MovementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMovementTypeFilter<$PrismaModel>
    _max?: NestedEnumMovementTypeFilter<$PrismaModel>
  }

  export type NestedEnumAlxoidTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AlxoidType | EnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAlxoidTypeNullableFilter<$PrismaModel> | $Enums.AlxoidType | null
  }

  export type NestedEnumAlxoidTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlxoidType | EnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AlxoidType[] | ListEnumAlxoidTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAlxoidTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.AlxoidType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAlxoidTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumAlxoidTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumWhatsAppMessageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.WhatsAppMessageStatus | EnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumWhatsAppMessageStatusFilter<$PrismaModel> | $Enums.WhatsAppMessageStatus
  }

  export type NestedEnumWhatsAppMessageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WhatsAppMessageStatus | EnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.WhatsAppMessageStatus[] | ListEnumWhatsAppMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumWhatsAppMessageStatusWithAggregatesFilter<$PrismaModel> | $Enums.WhatsAppMessageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWhatsAppMessageStatusFilter<$PrismaModel>
    _max?: NestedEnumWhatsAppMessageStatusFilter<$PrismaModel>
  }

  export type consultoriosCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    citas?: citasCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUncheckedCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    citas?: citasUncheckedCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosUncheckedCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioUncheckedCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosCreateOrConnectWithoutOrganizacionesInput = {
    where: consultoriosWhereUniqueInput
    create: XOR<consultoriosCreateWithoutOrganizacionesInput, consultoriosUncheckedCreateWithoutOrganizacionesInput>
  }

  export type consultoriosCreateManyOrganizacionesInputEnvelope = {
    data: consultoriosCreateManyOrganizacionesInput | consultoriosCreateManyOrganizacionesInput[]
    skipDuplicates?: boolean
  }

  export type pacientesCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutPacientesInput
    citas?: citasCreateNestedManyWithoutPacientesInput
    cobros?: cobrosCreateNestedManyWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutPacientesInput
  }

  export type pacientesUncheckedCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutPacientesInput
    citas?: citasUncheckedCreateNestedManyWithoutPacientesInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutPacientesInput
  }

  export type pacientesCreateOrConnectWithoutOrganizacionesInput = {
    where: pacientesWhereUniqueInput
    create: XOR<pacientesCreateWithoutOrganizacionesInput, pacientesUncheckedCreateWithoutOrganizacionesInput>
  }

  export type pacientesCreateManyOrganizacionesInputEnvelope = {
    data: pacientesCreateManyOrganizacionesInput | pacientesCreateManyOrganizacionesInput[]
    skipDuplicates?: boolean
  }

  export type serviciosCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutServiciosInput
  }

  export type serviciosUncheckedCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutServiciosInput
  }

  export type serviciosCreateOrConnectWithoutOrganizacionesInput = {
    where: serviciosWhereUniqueInput
    create: XOR<serviciosCreateWithoutOrganizacionesInput, serviciosUncheckedCreateWithoutOrganizacionesInput>
  }

  export type serviciosCreateManyOrganizacionesInputEnvelope = {
    data: serviciosCreateManyOrganizacionesInput | serviciosCreateManyOrganizacionesInput[]
    skipDuplicates?: boolean
  }

  export type usuariosCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutOrganizacionesInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutOrganizacionesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutOrganizacionesInput, usuariosUncheckedCreateWithoutOrganizacionesInput>
  }

  export type usuariosCreateManyOrganizacionesInputEnvelope = {
    data: usuariosCreateManyOrganizacionesInput | usuariosCreateManyOrganizacionesInput[]
    skipDuplicates?: boolean
  }

  export type consultoriosUpsertWithWhereUniqueWithoutOrganizacionesInput = {
    where: consultoriosWhereUniqueInput
    update: XOR<consultoriosUpdateWithoutOrganizacionesInput, consultoriosUncheckedUpdateWithoutOrganizacionesInput>
    create: XOR<consultoriosCreateWithoutOrganizacionesInput, consultoriosUncheckedCreateWithoutOrganizacionesInput>
  }

  export type consultoriosUpdateWithWhereUniqueWithoutOrganizacionesInput = {
    where: consultoriosWhereUniqueInput
    data: XOR<consultoriosUpdateWithoutOrganizacionesInput, consultoriosUncheckedUpdateWithoutOrganizacionesInput>
  }

  export type consultoriosUpdateManyWithWhereWithoutOrganizacionesInput = {
    where: consultoriosScalarWhereInput
    data: XOR<consultoriosUpdateManyMutationInput, consultoriosUncheckedUpdateManyWithoutOrganizacionesInput>
  }

  export type consultoriosScalarWhereInput = {
    AND?: consultoriosScalarWhereInput | consultoriosScalarWhereInput[]
    OR?: consultoriosScalarWhereInput[]
    NOT?: consultoriosScalarWhereInput | consultoriosScalarWhereInput[]
    id?: StringFilter<"consultorios"> | string
    nombre?: StringFilter<"consultorios"> | string
    direccion?: StringFilter<"consultorios"> | string
    created_at?: DateTimeFilter<"consultorios"> | Date | string
    updated_at?: DateTimeFilter<"consultorios"> | Date | string
    organizacion_id?: UuidFilter<"consultorios"> | string
  }

  export type pacientesUpsertWithWhereUniqueWithoutOrganizacionesInput = {
    where: pacientesWhereUniqueInput
    update: XOR<pacientesUpdateWithoutOrganizacionesInput, pacientesUncheckedUpdateWithoutOrganizacionesInput>
    create: XOR<pacientesCreateWithoutOrganizacionesInput, pacientesUncheckedCreateWithoutOrganizacionesInput>
  }

  export type pacientesUpdateWithWhereUniqueWithoutOrganizacionesInput = {
    where: pacientesWhereUniqueInput
    data: XOR<pacientesUpdateWithoutOrganizacionesInput, pacientesUncheckedUpdateWithoutOrganizacionesInput>
  }

  export type pacientesUpdateManyWithWhereWithoutOrganizacionesInput = {
    where: pacientesScalarWhereInput
    data: XOR<pacientesUpdateManyMutationInput, pacientesUncheckedUpdateManyWithoutOrganizacionesInput>
  }

  export type pacientesScalarWhereInput = {
    AND?: pacientesScalarWhereInput | pacientesScalarWhereInput[]
    OR?: pacientesScalarWhereInput[]
    NOT?: pacientesScalarWhereInput | pacientesScalarWhereInput[]
    id?: StringFilter<"pacientes"> | string
    nombre?: StringFilter<"pacientes"> | string
    fecha_nacimiento?: DateTimeFilter<"pacientes"> | Date | string
    genero?: StringFilter<"pacientes"> | string
    direccion?: StringNullableFilter<"pacientes"> | string | null
    telefono?: StringFilter<"pacientes"> | string
    email?: StringFilter<"pacientes"> | string
    documento_identidad?: StringNullableFilter<"pacientes"> | string | null
    created_at?: DateTimeFilter<"pacientes"> | Date | string
    updated_at?: DateTimeFilter<"pacientes"> | Date | string
    apellido?: StringFilter<"pacientes"> | string
    organizacion_id?: UuidFilter<"pacientes"> | string
  }

  export type serviciosUpsertWithWhereUniqueWithoutOrganizacionesInput = {
    where: serviciosWhereUniqueInput
    update: XOR<serviciosUpdateWithoutOrganizacionesInput, serviciosUncheckedUpdateWithoutOrganizacionesInput>
    create: XOR<serviciosCreateWithoutOrganizacionesInput, serviciosUncheckedCreateWithoutOrganizacionesInput>
  }

  export type serviciosUpdateWithWhereUniqueWithoutOrganizacionesInput = {
    where: serviciosWhereUniqueInput
    data: XOR<serviciosUpdateWithoutOrganizacionesInput, serviciosUncheckedUpdateWithoutOrganizacionesInput>
  }

  export type serviciosUpdateManyWithWhereWithoutOrganizacionesInput = {
    where: serviciosScalarWhereInput
    data: XOR<serviciosUpdateManyMutationInput, serviciosUncheckedUpdateManyWithoutOrganizacionesInput>
  }

  export type serviciosScalarWhereInput = {
    AND?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
    OR?: serviciosScalarWhereInput[]
    NOT?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
    id?: StringFilter<"servicios"> | string
    nombre?: StringFilter<"servicios"> | string
    descripcion?: StringNullableFilter<"servicios"> | string | null
    precio_base?: FloatFilter<"servicios"> | number
    created_at?: DateTimeFilter<"servicios"> | Date | string
    updated_at?: DateTimeFilter<"servicios"> | Date | string
    organizacion_id?: UuidFilter<"servicios"> | string
  }

  export type usuariosUpsertWithWhereUniqueWithoutOrganizacionesInput = {
    where: usuariosWhereUniqueInput
    update: XOR<usuariosUpdateWithoutOrganizacionesInput, usuariosUncheckedUpdateWithoutOrganizacionesInput>
    create: XOR<usuariosCreateWithoutOrganizacionesInput, usuariosUncheckedCreateWithoutOrganizacionesInput>
  }

  export type usuariosUpdateWithWhereUniqueWithoutOrganizacionesInput = {
    where: usuariosWhereUniqueInput
    data: XOR<usuariosUpdateWithoutOrganizacionesInput, usuariosUncheckedUpdateWithoutOrganizacionesInput>
  }

  export type usuariosUpdateManyWithWhereWithoutOrganizacionesInput = {
    where: usuariosScalarWhereInput
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyWithoutOrganizacionesInput>
  }

  export type usuariosScalarWhereInput = {
    AND?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
    OR?: usuariosScalarWhereInput[]
    NOT?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
    id?: StringFilter<"usuarios"> | string
    nombre?: StringFilter<"usuarios"> | string
    email?: StringFilter<"usuarios"> | string
    telefono?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    created_at?: DateTimeFilter<"usuarios"> | Date | string
    updated_at?: DateTimeFilter<"usuarios"> | Date | string
    rol?: EnumRolFilter<"usuarios"> | $Enums.Rol
    apellido?: StringFilter<"usuarios"> | string
    consultorio_id?: StringFilter<"usuarios"> | string
    googleAccessToken?: StringNullableFilter<"usuarios"> | string | null
    googleRefreshToken?: StringNullableFilter<"usuarios"> | string | null
    googleTokenExpiry?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    googleCalendarId?: StringNullableFilter<"usuarios"> | string | null
    organizacion_id?: UuidFilter<"usuarios"> | string
    puede_editar_cobros?: BoolFilter<"usuarios"> | boolean
    puede_eliminar_cobros?: BoolFilter<"usuarios"> | boolean
    puede_gestionar_usuarios?: BoolFilter<"usuarios"> | boolean
    puede_ver_historial?: BoolFilter<"usuarios"> | boolean
  }

  export type citasCreateWithoutUsuariosInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios: consultoriosCreateNestedOneWithoutCitasInput
    pacientes: pacientesCreateNestedOneWithoutCitasInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutUsuariosInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutUsuariosInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutUsuariosInput, citasUncheckedCreateWithoutUsuariosInput>
  }

  export type citasCreateManyUsuariosInputEnvelope = {
    data: citasCreateManyUsuariosInput | citasCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type cobrosCreateWithoutUsuariosInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutCobrosInput
    pacientes: pacientesCreateNestedOneWithoutCobrosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroCreateNestedManyWithoutCobrosInput
  }

  export type cobrosUncheckedCreateWithoutUsuariosInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    paciente_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutCobrosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedCreateNestedManyWithoutCobrosInput
  }

  export type cobrosCreateOrConnectWithoutUsuariosInput = {
    where: cobrosWhereUniqueInput
    create: XOR<cobrosCreateWithoutUsuariosInput, cobrosUncheckedCreateWithoutUsuariosInput>
  }

  export type cobrosCreateManyUsuariosInputEnvelope = {
    data: cobrosCreateManyUsuariosInput | cobrosCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type disponibilidad_medicoCreateWithoutUsuariosInput = {
    id?: string
    dia_semana: number
    hora_inicio: string
    hora_fin: string
  }

  export type disponibilidad_medicoUncheckedCreateWithoutUsuariosInput = {
    id?: string
    dia_semana: number
    hora_inicio: string
    hora_fin: string
  }

  export type disponibilidad_medicoCreateOrConnectWithoutUsuariosInput = {
    where: disponibilidad_medicoWhereUniqueInput
    create: XOR<disponibilidad_medicoCreateWithoutUsuariosInput, disponibilidad_medicoUncheckedCreateWithoutUsuariosInput>
  }

  export type disponibilidad_medicoCreateManyUsuariosInputEnvelope = {
    data: disponibilidad_medicoCreateManyUsuariosInput | disponibilidad_medicoCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type historial_cobrosCreateWithoutUsuariosInput = {
    id?: string
    created_at?: Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
    cobros: cobrosCreateNestedOneWithoutHistorial_cobrosInput
  }

  export type historial_cobrosUncheckedCreateWithoutUsuariosInput = {
    id?: string
    created_at?: Date | string
    cobro_id: string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
  }

  export type historial_cobrosCreateOrConnectWithoutUsuariosInput = {
    where: historial_cobrosWhereUniqueInput
    create: XOR<historial_cobrosCreateWithoutUsuariosInput, historial_cobrosUncheckedCreateWithoutUsuariosInput>
  }

  export type historial_cobrosCreateManyUsuariosInputEnvelope = {
    data: historial_cobrosCreateManyUsuariosInput | historial_cobrosCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type organizacionesCreateWithoutUsuariosInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosCreateNestedManyWithoutOrganizacionesInput
    pacientes?: pacientesCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesUncheckedCreateWithoutUsuariosInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosUncheckedCreateNestedManyWithoutOrganizacionesInput
    pacientes?: pacientesUncheckedCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosUncheckedCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesCreateOrConnectWithoutUsuariosInput = {
    where: organizacionesWhereUniqueInput
    create: XOR<organizacionesCreateWithoutUsuariosInput, organizacionesUncheckedCreateWithoutUsuariosInput>
  }

  export type consultoriosCreateWithoutUsuariosInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    citas?: citasCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosCreateNestedOneWithoutConsultoriosInput
    organizaciones: organizacionesCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUncheckedCreateWithoutUsuariosInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
    citas?: citasUncheckedCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosUncheckedCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioUncheckedCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosCreateOrConnectWithoutUsuariosInput = {
    where: consultoriosWhereUniqueInput
    create: XOR<consultoriosCreateWithoutUsuariosInput, consultoriosUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_configCreateWithoutUsuariosInput = {
    id?: string
    whatsapp_business_id?: string | null
    phone_number_id?: string | null
    access_token?: string | null
    webhook_verify_token?: string | null
    is_active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type whatsapp_configUncheckedCreateWithoutUsuariosInput = {
    id?: string
    whatsapp_business_id?: string | null
    phone_number_id?: string | null
    access_token?: string | null
    webhook_verify_token?: string | null
    is_active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type whatsapp_configCreateOrConnectWithoutUsuariosInput = {
    where: whatsapp_configWhereUniqueInput
    create: XOR<whatsapp_configCreateWithoutUsuariosInput, whatsapp_configUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_messagesCreateWithoutUsuariosInput = {
    id?: string
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
    citas?: citasCreateNestedOneWithoutWhatsapp_messagesInput
    pacientes?: pacientesCreateNestedOneWithoutWhatsapp_messagesInput
  }

  export type whatsapp_messagesUncheckedCreateWithoutUsuariosInput = {
    id?: string
    paciente_id?: string | null
    cita_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_messagesCreateOrConnectWithoutUsuariosInput = {
    where: whatsapp_messagesWhereUniqueInput
    create: XOR<whatsapp_messagesCreateWithoutUsuariosInput, whatsapp_messagesUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_messagesCreateManyUsuariosInputEnvelope = {
    data: whatsapp_messagesCreateManyUsuariosInput | whatsapp_messagesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type whatsapp_remindersCreateWithoutUsuariosInput = {
    id?: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
    citas: citasCreateNestedOneWithoutWhatsapp_remindersInput
  }

  export type whatsapp_remindersUncheckedCreateWithoutUsuariosInput = {
    id?: string
    cita_id: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_remindersCreateOrConnectWithoutUsuariosInput = {
    where: whatsapp_remindersWhereUniqueInput
    create: XOR<whatsapp_remindersCreateWithoutUsuariosInput, whatsapp_remindersUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_remindersCreateManyUsuariosInputEnvelope = {
    data: whatsapp_remindersCreateManyUsuariosInput | whatsapp_remindersCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type whatsapp_templatesCreateWithoutUsuariosInput = {
    id?: string
    name: string
    language?: string
    category: string
    components: JsonNullValueInput | InputJsonValue
    status?: string
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_templatesUncheckedCreateWithoutUsuariosInput = {
    id?: string
    name: string
    language?: string
    category: string
    components: JsonNullValueInput | InputJsonValue
    status?: string
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_templatesCreateOrConnectWithoutUsuariosInput = {
    where: whatsapp_templatesWhereUniqueInput
    create: XOR<whatsapp_templatesCreateWithoutUsuariosInput, whatsapp_templatesUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_templatesCreateManyUsuariosInputEnvelope = {
    data: whatsapp_templatesCreateManyUsuariosInput | whatsapp_templatesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type citasUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: citasWhereUniqueInput
    update: XOR<citasUpdateWithoutUsuariosInput, citasUncheckedUpdateWithoutUsuariosInput>
    create: XOR<citasCreateWithoutUsuariosInput, citasUncheckedCreateWithoutUsuariosInput>
  }

  export type citasUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: citasWhereUniqueInput
    data: XOR<citasUpdateWithoutUsuariosInput, citasUncheckedUpdateWithoutUsuariosInput>
  }

  export type citasUpdateManyWithWhereWithoutUsuariosInput = {
    where: citasScalarWhereInput
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type citasScalarWhereInput = {
    AND?: citasScalarWhereInput | citasScalarWhereInput[]
    OR?: citasScalarWhereInput[]
    NOT?: citasScalarWhereInput | citasScalarWhereInput[]
    id?: StringFilter<"citas"> | string
    titulo?: StringNullableFilter<"citas"> | string | null
    descripcion?: StringNullableFilter<"citas"> | string | null
    estado?: EnumEstadoCitaFilter<"citas"> | $Enums.EstadoCita
    paciente_id?: StringFilter<"citas"> | string
    usuario_id?: StringFilter<"citas"> | string
    consultorio_id?: StringFilter<"citas"> | string
    created_at?: DateTimeFilter<"citas"> | Date | string
    updated_at?: DateTimeFilter<"citas"> | Date | string
    color?: StringNullableFilter<"citas"> | string | null
    fecha_fin?: DateTimeFilter<"citas"> | Date | string
    fecha_inicio?: DateTimeFilter<"citas"> | Date | string
    es_recurrente?: BoolNullableFilter<"citas"> | boolean | null
    regla_recurrencia?: StringNullableFilter<"citas"> | string | null
    id_serie?: StringNullableFilter<"citas"> | string | null
    googleEventId?: StringNullableFilter<"citas"> | string | null
    exdates?: JsonNullableFilter<"citas">
  }

  export type cobrosUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: cobrosWhereUniqueInput
    update: XOR<cobrosUpdateWithoutUsuariosInput, cobrosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<cobrosCreateWithoutUsuariosInput, cobrosUncheckedCreateWithoutUsuariosInput>
  }

  export type cobrosUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: cobrosWhereUniqueInput
    data: XOR<cobrosUpdateWithoutUsuariosInput, cobrosUncheckedUpdateWithoutUsuariosInput>
  }

  export type cobrosUpdateManyWithWhereWithoutUsuariosInput = {
    where: cobrosScalarWhereInput
    data: XOR<cobrosUpdateManyMutationInput, cobrosUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type cobrosScalarWhereInput = {
    AND?: cobrosScalarWhereInput | cobrosScalarWhereInput[]
    OR?: cobrosScalarWhereInput[]
    NOT?: cobrosScalarWhereInput | cobrosScalarWhereInput[]
    id?: StringFilter<"cobros"> | string
    fecha_cobro?: DateTimeFilter<"cobros"> | Date | string
    monto_total?: FloatFilter<"cobros"> | number
    notas?: StringNullableFilter<"cobros"> | string | null
    created_at?: DateTimeFilter<"cobros"> | Date | string
    updated_at?: DateTimeFilter<"cobros"> | Date | string
    paciente_id?: StringFilter<"cobros"> | string
    usuario_id?: StringFilter<"cobros"> | string
    estado?: EnumEstadoCobroFilter<"cobros"> | $Enums.EstadoCobro
    metodo_pago?: EnumMetodoPagoNullableFilter<"cobros"> | $Enums.MetodoPago | null
  }

  export type disponibilidad_medicoUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: disponibilidad_medicoWhereUniqueInput
    update: XOR<disponibilidad_medicoUpdateWithoutUsuariosInput, disponibilidad_medicoUncheckedUpdateWithoutUsuariosInput>
    create: XOR<disponibilidad_medicoCreateWithoutUsuariosInput, disponibilidad_medicoUncheckedCreateWithoutUsuariosInput>
  }

  export type disponibilidad_medicoUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: disponibilidad_medicoWhereUniqueInput
    data: XOR<disponibilidad_medicoUpdateWithoutUsuariosInput, disponibilidad_medicoUncheckedUpdateWithoutUsuariosInput>
  }

  export type disponibilidad_medicoUpdateManyWithWhereWithoutUsuariosInput = {
    where: disponibilidad_medicoScalarWhereInput
    data: XOR<disponibilidad_medicoUpdateManyMutationInput, disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type disponibilidad_medicoScalarWhereInput = {
    AND?: disponibilidad_medicoScalarWhereInput | disponibilidad_medicoScalarWhereInput[]
    OR?: disponibilidad_medicoScalarWhereInput[]
    NOT?: disponibilidad_medicoScalarWhereInput | disponibilidad_medicoScalarWhereInput[]
    id?: UuidFilter<"disponibilidad_medico"> | string
    usuario_id?: StringFilter<"disponibilidad_medico"> | string
    dia_semana?: IntFilter<"disponibilidad_medico"> | number
    hora_inicio?: StringFilter<"disponibilidad_medico"> | string
    hora_fin?: StringFilter<"disponibilidad_medico"> | string
  }

  export type historial_cobrosUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: historial_cobrosWhereUniqueInput
    update: XOR<historial_cobrosUpdateWithoutUsuariosInput, historial_cobrosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<historial_cobrosCreateWithoutUsuariosInput, historial_cobrosUncheckedCreateWithoutUsuariosInput>
  }

  export type historial_cobrosUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: historial_cobrosWhereUniqueInput
    data: XOR<historial_cobrosUpdateWithoutUsuariosInput, historial_cobrosUncheckedUpdateWithoutUsuariosInput>
  }

  export type historial_cobrosUpdateManyWithWhereWithoutUsuariosInput = {
    where: historial_cobrosScalarWhereInput
    data: XOR<historial_cobrosUpdateManyMutationInput, historial_cobrosUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type historial_cobrosScalarWhereInput = {
    AND?: historial_cobrosScalarWhereInput | historial_cobrosScalarWhereInput[]
    OR?: historial_cobrosScalarWhereInput[]
    NOT?: historial_cobrosScalarWhereInput | historial_cobrosScalarWhereInput[]
    id?: StringFilter<"historial_cobros"> | string
    created_at?: DateTimeFilter<"historial_cobros"> | Date | string
    cobro_id?: StringFilter<"historial_cobros"> | string
    detalles_antes?: JsonNullableFilter<"historial_cobros">
    detalles_despues?: JsonFilter<"historial_cobros">
    tipo_cambio?: EnumTipoCambioFilter<"historial_cobros"> | $Enums.TipoCambio
    usuario_id?: StringFilter<"historial_cobros"> | string
  }

  export type organizacionesUpsertWithoutUsuariosInput = {
    update: XOR<organizacionesUpdateWithoutUsuariosInput, organizacionesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<organizacionesCreateWithoutUsuariosInput, organizacionesUncheckedCreateWithoutUsuariosInput>
    where?: organizacionesWhereInput
  }

  export type organizacionesUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: organizacionesWhereInput
    data: XOR<organizacionesUpdateWithoutUsuariosInput, organizacionesUncheckedUpdateWithoutUsuariosInput>
  }

  export type organizacionesUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUpdateManyWithoutOrganizacionesNestedInput
    pacientes?: pacientesUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUpdateManyWithoutOrganizacionesNestedInput
  }

  export type organizacionesUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUncheckedUpdateManyWithoutOrganizacionesNestedInput
    pacientes?: pacientesUncheckedUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUncheckedUpdateManyWithoutOrganizacionesNestedInput
  }

  export type consultoriosUpsertWithoutUsuariosInput = {
    update: XOR<consultoriosUpdateWithoutUsuariosInput, consultoriosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<consultoriosCreateWithoutUsuariosInput, consultoriosUncheckedCreateWithoutUsuariosInput>
    where?: consultoriosWhereInput
  }

  export type consultoriosUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: consultoriosWhereInput
    data: XOR<consultoriosUpdateWithoutUsuariosInput, consultoriosUncheckedUpdateWithoutUsuariosInput>
  }

  export type consultoriosUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUpdateOneWithoutConsultoriosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    citas?: citasUncheckedUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUncheckedUpdateOneWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUncheckedUpdateManyWithoutConsultoriosNestedInput
  }

  export type whatsapp_configUpsertWithoutUsuariosInput = {
    update: XOR<whatsapp_configUpdateWithoutUsuariosInput, whatsapp_configUncheckedUpdateWithoutUsuariosInput>
    create: XOR<whatsapp_configCreateWithoutUsuariosInput, whatsapp_configUncheckedCreateWithoutUsuariosInput>
    where?: whatsapp_configWhereInput
  }

  export type whatsapp_configUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: whatsapp_configWhereInput
    data: XOR<whatsapp_configUpdateWithoutUsuariosInput, whatsapp_configUncheckedUpdateWithoutUsuariosInput>
  }

  export type whatsapp_configUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    whatsapp_business_id?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number_id?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    webhook_verify_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_configUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    whatsapp_business_id?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number_id?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    webhook_verify_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_messagesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: whatsapp_messagesWhereUniqueInput
    update: XOR<whatsapp_messagesUpdateWithoutUsuariosInput, whatsapp_messagesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<whatsapp_messagesCreateWithoutUsuariosInput, whatsapp_messagesUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_messagesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: whatsapp_messagesWhereUniqueInput
    data: XOR<whatsapp_messagesUpdateWithoutUsuariosInput, whatsapp_messagesUncheckedUpdateWithoutUsuariosInput>
  }

  export type whatsapp_messagesUpdateManyWithWhereWithoutUsuariosInput = {
    where: whatsapp_messagesScalarWhereInput
    data: XOR<whatsapp_messagesUpdateManyMutationInput, whatsapp_messagesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type whatsapp_messagesScalarWhereInput = {
    AND?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
    OR?: whatsapp_messagesScalarWhereInput[]
    NOT?: whatsapp_messagesScalarWhereInput | whatsapp_messagesScalarWhereInput[]
    id?: StringFilter<"whatsapp_messages"> | string
    usuario_id?: StringFilter<"whatsapp_messages"> | string
    paciente_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    cita_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    template_name?: StringNullableFilter<"whatsapp_messages"> | string | null
    message_type?: StringFilter<"whatsapp_messages"> | string
    content?: JsonFilter<"whatsapp_messages">
    phone_number?: StringFilter<"whatsapp_messages"> | string
    status?: EnumWhatsAppMessageStatusFilter<"whatsapp_messages"> | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: StringNullableFilter<"whatsapp_messages"> | string | null
    error_message?: StringNullableFilter<"whatsapp_messages"> | string | null
    sent_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    delivered_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    read_at?: DateTimeNullableFilter<"whatsapp_messages"> | Date | string | null
    created_at?: DateTimeFilter<"whatsapp_messages"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_messages"> | Date | string
  }

  export type whatsapp_remindersUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: whatsapp_remindersWhereUniqueInput
    update: XOR<whatsapp_remindersUpdateWithoutUsuariosInput, whatsapp_remindersUncheckedUpdateWithoutUsuariosInput>
    create: XOR<whatsapp_remindersCreateWithoutUsuariosInput, whatsapp_remindersUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_remindersUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: whatsapp_remindersWhereUniqueInput
    data: XOR<whatsapp_remindersUpdateWithoutUsuariosInput, whatsapp_remindersUncheckedUpdateWithoutUsuariosInput>
  }

  export type whatsapp_remindersUpdateManyWithWhereWithoutUsuariosInput = {
    where: whatsapp_remindersScalarWhereInput
    data: XOR<whatsapp_remindersUpdateManyMutationInput, whatsapp_remindersUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type whatsapp_remindersScalarWhereInput = {
    AND?: whatsapp_remindersScalarWhereInput | whatsapp_remindersScalarWhereInput[]
    OR?: whatsapp_remindersScalarWhereInput[]
    NOT?: whatsapp_remindersScalarWhereInput | whatsapp_remindersScalarWhereInput[]
    id?: StringFilter<"whatsapp_reminders"> | string
    usuario_id?: StringFilter<"whatsapp_reminders"> | string
    cita_id?: StringFilter<"whatsapp_reminders"> | string
    template_name?: StringFilter<"whatsapp_reminders"> | string
    reminder_type?: StringFilter<"whatsapp_reminders"> | string
    scheduled_time?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    is_sent?: BoolFilter<"whatsapp_reminders"> | boolean
    sent_at?: DateTimeNullableFilter<"whatsapp_reminders"> | Date | string | null
    created_at?: DateTimeFilter<"whatsapp_reminders"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_reminders"> | Date | string
  }

  export type whatsapp_templatesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: whatsapp_templatesWhereUniqueInput
    update: XOR<whatsapp_templatesUpdateWithoutUsuariosInput, whatsapp_templatesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<whatsapp_templatesCreateWithoutUsuariosInput, whatsapp_templatesUncheckedCreateWithoutUsuariosInput>
  }

  export type whatsapp_templatesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: whatsapp_templatesWhereUniqueInput
    data: XOR<whatsapp_templatesUpdateWithoutUsuariosInput, whatsapp_templatesUncheckedUpdateWithoutUsuariosInput>
  }

  export type whatsapp_templatesUpdateManyWithWhereWithoutUsuariosInput = {
    where: whatsapp_templatesScalarWhereInput
    data: XOR<whatsapp_templatesUpdateManyMutationInput, whatsapp_templatesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type whatsapp_templatesScalarWhereInput = {
    AND?: whatsapp_templatesScalarWhereInput | whatsapp_templatesScalarWhereInput[]
    OR?: whatsapp_templatesScalarWhereInput[]
    NOT?: whatsapp_templatesScalarWhereInput | whatsapp_templatesScalarWhereInput[]
    id?: StringFilter<"whatsapp_templates"> | string
    usuario_id?: StringFilter<"whatsapp_templates"> | string
    name?: StringFilter<"whatsapp_templates"> | string
    language?: StringFilter<"whatsapp_templates"> | string
    category?: StringFilter<"whatsapp_templates"> | string
    components?: JsonFilter<"whatsapp_templates">
    status?: StringFilter<"whatsapp_templates"> | string
    created_at?: DateTimeFilter<"whatsapp_templates"> | Date | string
    updated_at?: DateTimeFilter<"whatsapp_templates"> | Date | string
  }

  export type InventoryUsageCreateWithoutPacientesInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sede: SedeCreateNestedOneWithoutInventoryUsageInput
    user: UserCreateNestedOneWithoutInventoryUsageInput
    details?: InventoryUsageDetailCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageUncheckedCreateWithoutPacientesInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    sedeId: string
    updatedAt?: Date | string
    userId: string
    details?: InventoryUsageDetailUncheckedCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageCreateOrConnectWithoutPacientesInput = {
    where: InventoryUsageWhereUniqueInput
    create: XOR<InventoryUsageCreateWithoutPacientesInput, InventoryUsageUncheckedCreateWithoutPacientesInput>
  }

  export type InventoryUsageCreateManyPacientesInputEnvelope = {
    data: InventoryUsageCreateManyPacientesInput | InventoryUsageCreateManyPacientesInput[]
    skipDuplicates?: boolean
  }

  export type citasCreateWithoutPacientesInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios: consultoriosCreateNestedOneWithoutCitasInput
    usuarios: usuariosCreateNestedOneWithoutCitasInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutPacientesInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    usuario_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutPacientesInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutPacientesInput, citasUncheckedCreateWithoutPacientesInput>
  }

  export type citasCreateManyPacientesInputEnvelope = {
    data: citasCreateManyPacientesInput | citasCreateManyPacientesInput[]
    skipDuplicates?: boolean
  }

  export type cobrosCreateWithoutPacientesInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutCobrosInput
    usuarios: usuariosCreateNestedOneWithoutCobrosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroCreateNestedManyWithoutCobrosInput
  }

  export type cobrosUncheckedCreateWithoutPacientesInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutCobrosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedCreateNestedManyWithoutCobrosInput
  }

  export type cobrosCreateOrConnectWithoutPacientesInput = {
    where: cobrosWhereUniqueInput
    create: XOR<cobrosCreateWithoutPacientesInput, cobrosUncheckedCreateWithoutPacientesInput>
  }

  export type cobrosCreateManyPacientesInputEnvelope = {
    data: cobrosCreateManyPacientesInput | cobrosCreateManyPacientesInput[]
    skipDuplicates?: boolean
  }

  export type organizacionesCreateWithoutPacientesInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesUncheckedCreateWithoutPacientesInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosUncheckedCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosUncheckedCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesCreateOrConnectWithoutPacientesInput = {
    where: organizacionesWhereUniqueInput
    create: XOR<organizacionesCreateWithoutPacientesInput, organizacionesUncheckedCreateWithoutPacientesInput>
  }

  export type whatsapp_messagesCreateWithoutPacientesInput = {
    id?: string
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
    citas?: citasCreateNestedOneWithoutWhatsapp_messagesInput
    usuarios: usuariosCreateNestedOneWithoutWhatsapp_messagesInput
  }

  export type whatsapp_messagesUncheckedCreateWithoutPacientesInput = {
    id?: string
    usuario_id: string
    cita_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_messagesCreateOrConnectWithoutPacientesInput = {
    where: whatsapp_messagesWhereUniqueInput
    create: XOR<whatsapp_messagesCreateWithoutPacientesInput, whatsapp_messagesUncheckedCreateWithoutPacientesInput>
  }

  export type whatsapp_messagesCreateManyPacientesInputEnvelope = {
    data: whatsapp_messagesCreateManyPacientesInput | whatsapp_messagesCreateManyPacientesInput[]
    skipDuplicates?: boolean
  }

  export type InventoryUsageUpsertWithWhereUniqueWithoutPacientesInput = {
    where: InventoryUsageWhereUniqueInput
    update: XOR<InventoryUsageUpdateWithoutPacientesInput, InventoryUsageUncheckedUpdateWithoutPacientesInput>
    create: XOR<InventoryUsageCreateWithoutPacientesInput, InventoryUsageUncheckedCreateWithoutPacientesInput>
  }

  export type InventoryUsageUpdateWithWhereUniqueWithoutPacientesInput = {
    where: InventoryUsageWhereUniqueInput
    data: XOR<InventoryUsageUpdateWithoutPacientesInput, InventoryUsageUncheckedUpdateWithoutPacientesInput>
  }

  export type InventoryUsageUpdateManyWithWhereWithoutPacientesInput = {
    where: InventoryUsageScalarWhereInput
    data: XOR<InventoryUsageUpdateManyMutationInput, InventoryUsageUncheckedUpdateManyWithoutPacientesInput>
  }

  export type InventoryUsageScalarWhereInput = {
    AND?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
    OR?: InventoryUsageScalarWhereInput[]
    NOT?: InventoryUsageScalarWhereInput | InventoryUsageScalarWhereInput[]
    id?: StringFilter<"InventoryUsage"> | string
    nombrePaciente?: StringFilter<"InventoryUsage"> | string
    tipoTratamiento?: EnumTipoTratamientoFilter<"InventoryUsage"> | $Enums.TipoTratamiento
    observaciones?: StringNullableFilter<"InventoryUsage"> | string | null
    tuvoReaccion?: BoolFilter<"InventoryUsage"> | boolean
    descripcionReaccion?: StringNullableFilter<"InventoryUsage"> | string | null
    createdAt?: DateTimeFilter<"InventoryUsage"> | Date | string
    sedeId?: StringFilter<"InventoryUsage"> | string
    updatedAt?: DateTimeFilter<"InventoryUsage"> | Date | string
    userId?: StringFilter<"InventoryUsage"> | string
    pacienteId?: StringNullableFilter<"InventoryUsage"> | string | null
  }

  export type citasUpsertWithWhereUniqueWithoutPacientesInput = {
    where: citasWhereUniqueInput
    update: XOR<citasUpdateWithoutPacientesInput, citasUncheckedUpdateWithoutPacientesInput>
    create: XOR<citasCreateWithoutPacientesInput, citasUncheckedCreateWithoutPacientesInput>
  }

  export type citasUpdateWithWhereUniqueWithoutPacientesInput = {
    where: citasWhereUniqueInput
    data: XOR<citasUpdateWithoutPacientesInput, citasUncheckedUpdateWithoutPacientesInput>
  }

  export type citasUpdateManyWithWhereWithoutPacientesInput = {
    where: citasScalarWhereInput
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyWithoutPacientesInput>
  }

  export type cobrosUpsertWithWhereUniqueWithoutPacientesInput = {
    where: cobrosWhereUniqueInput
    update: XOR<cobrosUpdateWithoutPacientesInput, cobrosUncheckedUpdateWithoutPacientesInput>
    create: XOR<cobrosCreateWithoutPacientesInput, cobrosUncheckedCreateWithoutPacientesInput>
  }

  export type cobrosUpdateWithWhereUniqueWithoutPacientesInput = {
    where: cobrosWhereUniqueInput
    data: XOR<cobrosUpdateWithoutPacientesInput, cobrosUncheckedUpdateWithoutPacientesInput>
  }

  export type cobrosUpdateManyWithWhereWithoutPacientesInput = {
    where: cobrosScalarWhereInput
    data: XOR<cobrosUpdateManyMutationInput, cobrosUncheckedUpdateManyWithoutPacientesInput>
  }

  export type organizacionesUpsertWithoutPacientesInput = {
    update: XOR<organizacionesUpdateWithoutPacientesInput, organizacionesUncheckedUpdateWithoutPacientesInput>
    create: XOR<organizacionesCreateWithoutPacientesInput, organizacionesUncheckedCreateWithoutPacientesInput>
    where?: organizacionesWhereInput
  }

  export type organizacionesUpdateToOneWithWhereWithoutPacientesInput = {
    where?: organizacionesWhereInput
    data: XOR<organizacionesUpdateWithoutPacientesInput, organizacionesUncheckedUpdateWithoutPacientesInput>
  }

  export type organizacionesUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUpdateManyWithoutOrganizacionesNestedInput
  }

  export type organizacionesUncheckedUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUncheckedUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUncheckedUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutOrganizacionesNestedInput
  }

  export type whatsapp_messagesUpsertWithWhereUniqueWithoutPacientesInput = {
    where: whatsapp_messagesWhereUniqueInput
    update: XOR<whatsapp_messagesUpdateWithoutPacientesInput, whatsapp_messagesUncheckedUpdateWithoutPacientesInput>
    create: XOR<whatsapp_messagesCreateWithoutPacientesInput, whatsapp_messagesUncheckedCreateWithoutPacientesInput>
  }

  export type whatsapp_messagesUpdateWithWhereUniqueWithoutPacientesInput = {
    where: whatsapp_messagesWhereUniqueInput
    data: XOR<whatsapp_messagesUpdateWithoutPacientesInput, whatsapp_messagesUncheckedUpdateWithoutPacientesInput>
  }

  export type whatsapp_messagesUpdateManyWithWhereWithoutPacientesInput = {
    where: whatsapp_messagesScalarWhereInput
    data: XOR<whatsapp_messagesUpdateManyMutationInput, whatsapp_messagesUncheckedUpdateManyWithoutPacientesInput>
  }

  export type citasCreateWithoutConsultoriosInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    pacientes: pacientesCreateNestedOneWithoutCitasInput
    usuarios: usuariosCreateNestedOneWithoutCitasInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutConsultoriosInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    usuario_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutConsultoriosInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutConsultoriosInput, citasUncheckedCreateWithoutConsultoriosInput>
  }

  export type citasCreateManyConsultoriosInputEnvelope = {
    data: citasCreateManyConsultoriosInput | citasCreateManyConsultoriosInput[]
    skipDuplicates?: boolean
  }

  export type cobro_conceptosCreateWithoutConsultoriosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    precio_unitario: number
    cobros: cobrosCreateNestedOneWithoutCobro_conceptosInput
    servicios: serviciosCreateNestedOneWithoutCobro_conceptosInput
  }

  export type cobro_conceptosUncheckedCreateWithoutConsultoriosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_id: string
    precio_unitario: number
    servicio_id: string
  }

  export type cobro_conceptosCreateOrConnectWithoutConsultoriosInput = {
    where: cobro_conceptosWhereUniqueInput
    create: XOR<cobro_conceptosCreateWithoutConsultoriosInput, cobro_conceptosUncheckedCreateWithoutConsultoriosInput>
  }

  export type cobro_conceptosCreateManyConsultoriosInputEnvelope = {
    data: cobro_conceptosCreateManyConsultoriosInput | cobro_conceptosCreateManyConsultoriosInput[]
    skipDuplicates?: boolean
  }

  export type configuracion_permisosCreateWithoutConsultoriosInput = {
    id?: string
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type configuracion_permisosUncheckedCreateWithoutConsultoriosInput = {
    id?: string
    secretaria_editar_cobros?: boolean
    secretaria_eliminar_cobros?: boolean
    enfermera_entradas_inventario?: boolean
    enfermera_salidas_inventario?: boolean
    secretaria_entradas_inventario?: boolean
    secretaria_salidas_inventario?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type configuracion_permisosCreateOrConnectWithoutConsultoriosInput = {
    where: configuracion_permisosWhereUniqueInput
    create: XOR<configuracion_permisosCreateWithoutConsultoriosInput, configuracion_permisosUncheckedCreateWithoutConsultoriosInput>
  }

  export type organizacionesCreateWithoutConsultoriosInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pacientes?: pacientesCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesUncheckedCreateWithoutConsultoriosInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pacientes?: pacientesUncheckedCreateNestedManyWithoutOrganizacionesInput
    servicios?: serviciosUncheckedCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesCreateOrConnectWithoutConsultoriosInput = {
    where: organizacionesWhereUniqueInput
    create: XOR<organizacionesCreateWithoutConsultoriosInput, organizacionesUncheckedCreateWithoutConsultoriosInput>
  }

  export type precios_consultorioCreateWithoutConsultoriosInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    concepto: string
    precio: number
  }

  export type precios_consultorioUncheckedCreateWithoutConsultoriosInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    concepto: string
    precio: number
  }

  export type precios_consultorioCreateOrConnectWithoutConsultoriosInput = {
    where: precios_consultorioWhereUniqueInput
    create: XOR<precios_consultorioCreateWithoutConsultoriosInput, precios_consultorioUncheckedCreateWithoutConsultoriosInput>
  }

  export type precios_consultorioCreateManyConsultoriosInputEnvelope = {
    data: precios_consultorioCreateManyConsultoriosInput | precios_consultorioCreateManyConsultoriosInput[]
    skipDuplicates?: boolean
  }

  export type usuariosCreateWithoutConsultoriosInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutConsultoriosInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutConsultoriosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutConsultoriosInput, usuariosUncheckedCreateWithoutConsultoriosInput>
  }

  export type usuariosCreateManyConsultoriosInputEnvelope = {
    data: usuariosCreateManyConsultoriosInput | usuariosCreateManyConsultoriosInput[]
    skipDuplicates?: boolean
  }

  export type citasUpsertWithWhereUniqueWithoutConsultoriosInput = {
    where: citasWhereUniqueInput
    update: XOR<citasUpdateWithoutConsultoriosInput, citasUncheckedUpdateWithoutConsultoriosInput>
    create: XOR<citasCreateWithoutConsultoriosInput, citasUncheckedCreateWithoutConsultoriosInput>
  }

  export type citasUpdateWithWhereUniqueWithoutConsultoriosInput = {
    where: citasWhereUniqueInput
    data: XOR<citasUpdateWithoutConsultoriosInput, citasUncheckedUpdateWithoutConsultoriosInput>
  }

  export type citasUpdateManyWithWhereWithoutConsultoriosInput = {
    where: citasScalarWhereInput
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyWithoutConsultoriosInput>
  }

  export type cobro_conceptosUpsertWithWhereUniqueWithoutConsultoriosInput = {
    where: cobro_conceptosWhereUniqueInput
    update: XOR<cobro_conceptosUpdateWithoutConsultoriosInput, cobro_conceptosUncheckedUpdateWithoutConsultoriosInput>
    create: XOR<cobro_conceptosCreateWithoutConsultoriosInput, cobro_conceptosUncheckedCreateWithoutConsultoriosInput>
  }

  export type cobro_conceptosUpdateWithWhereUniqueWithoutConsultoriosInput = {
    where: cobro_conceptosWhereUniqueInput
    data: XOR<cobro_conceptosUpdateWithoutConsultoriosInput, cobro_conceptosUncheckedUpdateWithoutConsultoriosInput>
  }

  export type cobro_conceptosUpdateManyWithWhereWithoutConsultoriosInput = {
    where: cobro_conceptosScalarWhereInput
    data: XOR<cobro_conceptosUpdateManyMutationInput, cobro_conceptosUncheckedUpdateManyWithoutConsultoriosInput>
  }

  export type cobro_conceptosScalarWhereInput = {
    AND?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
    OR?: cobro_conceptosScalarWhereInput[]
    NOT?: cobro_conceptosScalarWhereInput | cobro_conceptosScalarWhereInput[]
    id?: StringFilter<"cobro_conceptos"> | string
    cantidad?: IntFilter<"cobro_conceptos"> | number
    subtotal?: FloatFilter<"cobro_conceptos"> | number
    created_at?: DateTimeFilter<"cobro_conceptos"> | Date | string
    updated_at?: DateTimeFilter<"cobro_conceptos"> | Date | string
    cobro_id?: StringFilter<"cobro_conceptos"> | string
    consultorio_id?: StringFilter<"cobro_conceptos"> | string
    precio_unitario?: FloatFilter<"cobro_conceptos"> | number
    servicio_id?: StringFilter<"cobro_conceptos"> | string
  }

  export type configuracion_permisosUpsertWithoutConsultoriosInput = {
    update: XOR<configuracion_permisosUpdateWithoutConsultoriosInput, configuracion_permisosUncheckedUpdateWithoutConsultoriosInput>
    create: XOR<configuracion_permisosCreateWithoutConsultoriosInput, configuracion_permisosUncheckedCreateWithoutConsultoriosInput>
    where?: configuracion_permisosWhereInput
  }

  export type configuracion_permisosUpdateToOneWithWhereWithoutConsultoriosInput = {
    where?: configuracion_permisosWhereInput
    data: XOR<configuracion_permisosUpdateWithoutConsultoriosInput, configuracion_permisosUncheckedUpdateWithoutConsultoriosInput>
  }

  export type configuracion_permisosUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    secretaria_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    secretaria_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    enfermera_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    enfermera_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracion_permisosUncheckedUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    secretaria_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    secretaria_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    enfermera_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    enfermera_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_entradas_inventario?: BoolFieldUpdateOperationsInput | boolean
    secretaria_salidas_inventario?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type organizacionesUpsertWithoutConsultoriosInput = {
    update: XOR<organizacionesUpdateWithoutConsultoriosInput, organizacionesUncheckedUpdateWithoutConsultoriosInput>
    create: XOR<organizacionesCreateWithoutConsultoriosInput, organizacionesUncheckedCreateWithoutConsultoriosInput>
    where?: organizacionesWhereInput
  }

  export type organizacionesUpdateToOneWithWhereWithoutConsultoriosInput = {
    where?: organizacionesWhereInput
    data: XOR<organizacionesUpdateWithoutConsultoriosInput, organizacionesUncheckedUpdateWithoutConsultoriosInput>
  }

  export type organizacionesUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pacientes?: pacientesUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUpdateManyWithoutOrganizacionesNestedInput
  }

  export type organizacionesUncheckedUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pacientes?: pacientesUncheckedUpdateManyWithoutOrganizacionesNestedInput
    servicios?: serviciosUncheckedUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutOrganizacionesNestedInput
  }

  export type precios_consultorioUpsertWithWhereUniqueWithoutConsultoriosInput = {
    where: precios_consultorioWhereUniqueInput
    update: XOR<precios_consultorioUpdateWithoutConsultoriosInput, precios_consultorioUncheckedUpdateWithoutConsultoriosInput>
    create: XOR<precios_consultorioCreateWithoutConsultoriosInput, precios_consultorioUncheckedCreateWithoutConsultoriosInput>
  }

  export type precios_consultorioUpdateWithWhereUniqueWithoutConsultoriosInput = {
    where: precios_consultorioWhereUniqueInput
    data: XOR<precios_consultorioUpdateWithoutConsultoriosInput, precios_consultorioUncheckedUpdateWithoutConsultoriosInput>
  }

  export type precios_consultorioUpdateManyWithWhereWithoutConsultoriosInput = {
    where: precios_consultorioScalarWhereInput
    data: XOR<precios_consultorioUpdateManyMutationInput, precios_consultorioUncheckedUpdateManyWithoutConsultoriosInput>
  }

  export type precios_consultorioScalarWhereInput = {
    AND?: precios_consultorioScalarWhereInput | precios_consultorioScalarWhereInput[]
    OR?: precios_consultorioScalarWhereInput[]
    NOT?: precios_consultorioScalarWhereInput | precios_consultorioScalarWhereInput[]
    id?: StringFilter<"precios_consultorio"> | string
    created_at?: DateTimeFilter<"precios_consultorio"> | Date | string
    updated_at?: DateTimeFilter<"precios_consultorio"> | Date | string
    concepto?: StringFilter<"precios_consultorio"> | string
    consultorio_id?: StringFilter<"precios_consultorio"> | string
    precio?: FloatFilter<"precios_consultorio"> | number
  }

  export type usuariosUpsertWithWhereUniqueWithoutConsultoriosInput = {
    where: usuariosWhereUniqueInput
    update: XOR<usuariosUpdateWithoutConsultoriosInput, usuariosUncheckedUpdateWithoutConsultoriosInput>
    create: XOR<usuariosCreateWithoutConsultoriosInput, usuariosUncheckedCreateWithoutConsultoriosInput>
  }

  export type usuariosUpdateWithWhereUniqueWithoutConsultoriosInput = {
    where: usuariosWhereUniqueInput
    data: XOR<usuariosUpdateWithoutConsultoriosInput, usuariosUncheckedUpdateWithoutConsultoriosInput>
  }

  export type usuariosUpdateManyWithWhereWithoutConsultoriosInput = {
    where: usuariosScalarWhereInput
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyWithoutConsultoriosInput>
  }

  export type cobro_conceptosCreateWithoutCobrosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    precio_unitario: number
    consultorios: consultoriosCreateNestedOneWithoutCobro_conceptosInput
    servicios: serviciosCreateNestedOneWithoutCobro_conceptosInput
  }

  export type cobro_conceptosUncheckedCreateWithoutCobrosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    consultorio_id: string
    precio_unitario: number
    servicio_id: string
  }

  export type cobro_conceptosCreateOrConnectWithoutCobrosInput = {
    where: cobro_conceptosWhereUniqueInput
    create: XOR<cobro_conceptosCreateWithoutCobrosInput, cobro_conceptosUncheckedCreateWithoutCobrosInput>
  }

  export type cobro_conceptosCreateManyCobrosInputEnvelope = {
    data: cobro_conceptosCreateManyCobrosInput | cobro_conceptosCreateManyCobrosInput[]
    skipDuplicates?: boolean
  }

  export type pacientesCreateWithoutCobrosInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutPacientesInput
    citas?: citasCreateNestedManyWithoutPacientesInput
    organizaciones: organizacionesCreateNestedOneWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutPacientesInput
  }

  export type pacientesUncheckedCreateWithoutCobrosInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    organizacion_id: string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutPacientesInput
    citas?: citasUncheckedCreateNestedManyWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutPacientesInput
  }

  export type pacientesCreateOrConnectWithoutCobrosInput = {
    where: pacientesWhereUniqueInput
    create: XOR<pacientesCreateWithoutCobrosInput, pacientesUncheckedCreateWithoutCobrosInput>
  }

  export type usuariosCreateWithoutCobrosInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutCobrosInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutCobrosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutCobrosInput, usuariosUncheckedCreateWithoutCobrosInput>
  }

  export type historial_cobrosCreateWithoutCobrosInput = {
    id?: string
    created_at?: Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
    usuarios: usuariosCreateNestedOneWithoutHistorial_cobrosInput
  }

  export type historial_cobrosUncheckedCreateWithoutCobrosInput = {
    id?: string
    created_at?: Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
    usuario_id: string
  }

  export type historial_cobrosCreateOrConnectWithoutCobrosInput = {
    where: historial_cobrosWhereUniqueInput
    create: XOR<historial_cobrosCreateWithoutCobrosInput, historial_cobrosUncheckedCreateWithoutCobrosInput>
  }

  export type historial_cobrosCreateManyCobrosInputEnvelope = {
    data: historial_cobrosCreateManyCobrosInput | historial_cobrosCreateManyCobrosInput[]
    skipDuplicates?: boolean
  }

  export type metodos_pago_cobroCreateWithoutCobrosInput = {
    id?: string
    metodo_pago: $Enums.MetodoPago
    monto: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type metodos_pago_cobroUncheckedCreateWithoutCobrosInput = {
    id?: string
    metodo_pago: $Enums.MetodoPago
    monto: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type metodos_pago_cobroCreateOrConnectWithoutCobrosInput = {
    where: metodos_pago_cobroWhereUniqueInput
    create: XOR<metodos_pago_cobroCreateWithoutCobrosInput, metodos_pago_cobroUncheckedCreateWithoutCobrosInput>
  }

  export type metodos_pago_cobroCreateManyCobrosInputEnvelope = {
    data: metodos_pago_cobroCreateManyCobrosInput | metodos_pago_cobroCreateManyCobrosInput[]
    skipDuplicates?: boolean
  }

  export type cobro_conceptosUpsertWithWhereUniqueWithoutCobrosInput = {
    where: cobro_conceptosWhereUniqueInput
    update: XOR<cobro_conceptosUpdateWithoutCobrosInput, cobro_conceptosUncheckedUpdateWithoutCobrosInput>
    create: XOR<cobro_conceptosCreateWithoutCobrosInput, cobro_conceptosUncheckedCreateWithoutCobrosInput>
  }

  export type cobro_conceptosUpdateWithWhereUniqueWithoutCobrosInput = {
    where: cobro_conceptosWhereUniqueInput
    data: XOR<cobro_conceptosUpdateWithoutCobrosInput, cobro_conceptosUncheckedUpdateWithoutCobrosInput>
  }

  export type cobro_conceptosUpdateManyWithWhereWithoutCobrosInput = {
    where: cobro_conceptosScalarWhereInput
    data: XOR<cobro_conceptosUpdateManyMutationInput, cobro_conceptosUncheckedUpdateManyWithoutCobrosInput>
  }

  export type pacientesUpsertWithoutCobrosInput = {
    update: XOR<pacientesUpdateWithoutCobrosInput, pacientesUncheckedUpdateWithoutCobrosInput>
    create: XOR<pacientesCreateWithoutCobrosInput, pacientesUncheckedCreateWithoutCobrosInput>
    where?: pacientesWhereInput
  }

  export type pacientesUpdateToOneWithWhereWithoutCobrosInput = {
    where?: pacientesWhereInput
    data: XOR<pacientesUpdateWithoutCobrosInput, pacientesUncheckedUpdateWithoutCobrosInput>
  }

  export type pacientesUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutPacientesNestedInput
    citas?: citasUpdateManyWithoutPacientesNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutPacientesNestedInput
  }

  export type pacientesUncheckedUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutPacientesNestedInput
    citas?: citasUncheckedUpdateManyWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutPacientesNestedInput
  }

  export type usuariosUpsertWithoutCobrosInput = {
    update: XOR<usuariosUpdateWithoutCobrosInput, usuariosUncheckedUpdateWithoutCobrosInput>
    create: XOR<usuariosCreateWithoutCobrosInput, usuariosUncheckedCreateWithoutCobrosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutCobrosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutCobrosInput, usuariosUncheckedUpdateWithoutCobrosInput>
  }

  export type usuariosUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type historial_cobrosUpsertWithWhereUniqueWithoutCobrosInput = {
    where: historial_cobrosWhereUniqueInput
    update: XOR<historial_cobrosUpdateWithoutCobrosInput, historial_cobrosUncheckedUpdateWithoutCobrosInput>
    create: XOR<historial_cobrosCreateWithoutCobrosInput, historial_cobrosUncheckedCreateWithoutCobrosInput>
  }

  export type historial_cobrosUpdateWithWhereUniqueWithoutCobrosInput = {
    where: historial_cobrosWhereUniqueInput
    data: XOR<historial_cobrosUpdateWithoutCobrosInput, historial_cobrosUncheckedUpdateWithoutCobrosInput>
  }

  export type historial_cobrosUpdateManyWithWhereWithoutCobrosInput = {
    where: historial_cobrosScalarWhereInput
    data: XOR<historial_cobrosUpdateManyMutationInput, historial_cobrosUncheckedUpdateManyWithoutCobrosInput>
  }

  export type metodos_pago_cobroUpsertWithWhereUniqueWithoutCobrosInput = {
    where: metodos_pago_cobroWhereUniqueInput
    update: XOR<metodos_pago_cobroUpdateWithoutCobrosInput, metodos_pago_cobroUncheckedUpdateWithoutCobrosInput>
    create: XOR<metodos_pago_cobroCreateWithoutCobrosInput, metodos_pago_cobroUncheckedCreateWithoutCobrosInput>
  }

  export type metodos_pago_cobroUpdateWithWhereUniqueWithoutCobrosInput = {
    where: metodos_pago_cobroWhereUniqueInput
    data: XOR<metodos_pago_cobroUpdateWithoutCobrosInput, metodos_pago_cobroUncheckedUpdateWithoutCobrosInput>
  }

  export type metodos_pago_cobroUpdateManyWithWhereWithoutCobrosInput = {
    where: metodos_pago_cobroScalarWhereInput
    data: XOR<metodos_pago_cobroUpdateManyMutationInput, metodos_pago_cobroUncheckedUpdateManyWithoutCobrosInput>
  }

  export type metodos_pago_cobroScalarWhereInput = {
    AND?: metodos_pago_cobroScalarWhereInput | metodos_pago_cobroScalarWhereInput[]
    OR?: metodos_pago_cobroScalarWhereInput[]
    NOT?: metodos_pago_cobroScalarWhereInput | metodos_pago_cobroScalarWhereInput[]
    id?: StringFilter<"metodos_pago_cobro"> | string
    cobro_id?: StringFilter<"metodos_pago_cobro"> | string
    metodo_pago?: EnumMetodoPagoFilter<"metodos_pago_cobro"> | $Enums.MetodoPago
    monto?: FloatFilter<"metodos_pago_cobro"> | number
    created_at?: DateTimeFilter<"metodos_pago_cobro"> | Date | string
    updated_at?: DateTimeFilter<"metodos_pago_cobro"> | Date | string
  }

  export type cobrosCreateWithoutCobro_conceptosInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    pacientes: pacientesCreateNestedOneWithoutCobrosInput
    usuarios: usuariosCreateNestedOneWithoutCobrosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroCreateNestedManyWithoutCobrosInput
  }

  export type cobrosUncheckedCreateWithoutCobro_conceptosInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    paciente_id: string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedCreateNestedManyWithoutCobrosInput
  }

  export type cobrosCreateOrConnectWithoutCobro_conceptosInput = {
    where: cobrosWhereUniqueInput
    create: XOR<cobrosCreateWithoutCobro_conceptosInput, cobrosUncheckedCreateWithoutCobro_conceptosInput>
  }

  export type consultoriosCreateWithoutCobro_conceptosInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    citas?: citasCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosCreateNestedOneWithoutConsultoriosInput
    organizaciones: organizacionesCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUncheckedCreateWithoutCobro_conceptosInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
    citas?: citasUncheckedCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosUncheckedCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioUncheckedCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosCreateOrConnectWithoutCobro_conceptosInput = {
    where: consultoriosWhereUniqueInput
    create: XOR<consultoriosCreateWithoutCobro_conceptosInput, consultoriosUncheckedCreateWithoutCobro_conceptosInput>
  }

  export type serviciosCreateWithoutCobro_conceptosInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
    organizaciones: organizacionesCreateNestedOneWithoutServiciosInput
  }

  export type serviciosUncheckedCreateWithoutCobro_conceptosInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
  }

  export type serviciosCreateOrConnectWithoutCobro_conceptosInput = {
    where: serviciosWhereUniqueInput
    create: XOR<serviciosCreateWithoutCobro_conceptosInput, serviciosUncheckedCreateWithoutCobro_conceptosInput>
  }

  export type cobrosUpsertWithoutCobro_conceptosInput = {
    update: XOR<cobrosUpdateWithoutCobro_conceptosInput, cobrosUncheckedUpdateWithoutCobro_conceptosInput>
    create: XOR<cobrosCreateWithoutCobro_conceptosInput, cobrosUncheckedCreateWithoutCobro_conceptosInput>
    where?: cobrosWhereInput
  }

  export type cobrosUpdateToOneWithWhereWithoutCobro_conceptosInput = {
    where?: cobrosWhereInput
    data: XOR<cobrosUpdateWithoutCobro_conceptosInput, cobrosUncheckedUpdateWithoutCobro_conceptosInput>
  }

  export type cobrosUpdateWithoutCobro_conceptosInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    pacientes?: pacientesUpdateOneRequiredWithoutCobrosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateWithoutCobro_conceptosInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedUpdateManyWithoutCobrosNestedInput
  }

  export type consultoriosUpsertWithoutCobro_conceptosInput = {
    update: XOR<consultoriosUpdateWithoutCobro_conceptosInput, consultoriosUncheckedUpdateWithoutCobro_conceptosInput>
    create: XOR<consultoriosCreateWithoutCobro_conceptosInput, consultoriosUncheckedCreateWithoutCobro_conceptosInput>
    where?: consultoriosWhereInput
  }

  export type consultoriosUpdateToOneWithWhereWithoutCobro_conceptosInput = {
    where?: consultoriosWhereInput
    data: XOR<consultoriosUpdateWithoutCobro_conceptosInput, consultoriosUncheckedUpdateWithoutCobro_conceptosInput>
  }

  export type consultoriosUpdateWithoutCobro_conceptosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUpdateOneWithoutConsultoriosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateWithoutCobro_conceptosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    citas?: citasUncheckedUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUncheckedUpdateOneWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUncheckedUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutConsultoriosNestedInput
  }

  export type serviciosUpsertWithoutCobro_conceptosInput = {
    update: XOR<serviciosUpdateWithoutCobro_conceptosInput, serviciosUncheckedUpdateWithoutCobro_conceptosInput>
    create: XOR<serviciosCreateWithoutCobro_conceptosInput, serviciosUncheckedCreateWithoutCobro_conceptosInput>
    where?: serviciosWhereInput
  }

  export type serviciosUpdateToOneWithWhereWithoutCobro_conceptosInput = {
    where?: serviciosWhereInput
    data: XOR<serviciosUpdateWithoutCobro_conceptosInput, serviciosUncheckedUpdateWithoutCobro_conceptosInput>
  }

  export type serviciosUpdateWithoutCobro_conceptosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizaciones?: organizacionesUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type serviciosUncheckedUpdateWithoutCobro_conceptosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
  }

  export type cobrosCreateWithoutHistorial_cobrosInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutCobrosInput
    pacientes: pacientesCreateNestedOneWithoutCobrosInput
    usuarios: usuariosCreateNestedOneWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroCreateNestedManyWithoutCobrosInput
  }

  export type cobrosUncheckedCreateWithoutHistorial_cobrosInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    paciente_id: string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutCobrosInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedCreateNestedManyWithoutCobrosInput
  }

  export type cobrosCreateOrConnectWithoutHistorial_cobrosInput = {
    where: cobrosWhereUniqueInput
    create: XOR<cobrosCreateWithoutHistorial_cobrosInput, cobrosUncheckedCreateWithoutHistorial_cobrosInput>
  }

  export type usuariosCreateWithoutHistorial_cobrosInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutHistorial_cobrosInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutHistorial_cobrosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutHistorial_cobrosInput, usuariosUncheckedCreateWithoutHistorial_cobrosInput>
  }

  export type cobrosUpsertWithoutHistorial_cobrosInput = {
    update: XOR<cobrosUpdateWithoutHistorial_cobrosInput, cobrosUncheckedUpdateWithoutHistorial_cobrosInput>
    create: XOR<cobrosCreateWithoutHistorial_cobrosInput, cobrosUncheckedCreateWithoutHistorial_cobrosInput>
    where?: cobrosWhereInput
  }

  export type cobrosUpdateToOneWithWhereWithoutHistorial_cobrosInput = {
    where?: cobrosWhereInput
    data: XOR<cobrosUpdateWithoutHistorial_cobrosInput, cobrosUncheckedUpdateWithoutHistorial_cobrosInput>
  }

  export type cobrosUpdateWithoutHistorial_cobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutCobrosNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCobrosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateWithoutHistorial_cobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedUpdateManyWithoutCobrosNestedInput
  }

  export type usuariosUpsertWithoutHistorial_cobrosInput = {
    update: XOR<usuariosUpdateWithoutHistorial_cobrosInput, usuariosUncheckedUpdateWithoutHistorial_cobrosInput>
    create: XOR<usuariosCreateWithoutHistorial_cobrosInput, usuariosUncheckedCreateWithoutHistorial_cobrosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutHistorial_cobrosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutHistorial_cobrosInput, usuariosUncheckedUpdateWithoutHistorial_cobrosInput>
  }

  export type usuariosUpdateWithoutHistorial_cobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutHistorial_cobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type cobrosCreateWithoutMetodos_pago_cobroInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutCobrosInput
    pacientes: pacientesCreateNestedOneWithoutCobrosInput
    usuarios: usuariosCreateNestedOneWithoutCobrosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutCobrosInput
  }

  export type cobrosUncheckedCreateWithoutMetodos_pago_cobroInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    paciente_id: string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutCobrosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutCobrosInput
  }

  export type cobrosCreateOrConnectWithoutMetodos_pago_cobroInput = {
    where: cobrosWhereUniqueInput
    create: XOR<cobrosCreateWithoutMetodos_pago_cobroInput, cobrosUncheckedCreateWithoutMetodos_pago_cobroInput>
  }

  export type cobrosUpsertWithoutMetodos_pago_cobroInput = {
    update: XOR<cobrosUpdateWithoutMetodos_pago_cobroInput, cobrosUncheckedUpdateWithoutMetodos_pago_cobroInput>
    create: XOR<cobrosCreateWithoutMetodos_pago_cobroInput, cobrosUncheckedCreateWithoutMetodos_pago_cobroInput>
    where?: cobrosWhereInput
  }

  export type cobrosUpdateToOneWithWhereWithoutMetodos_pago_cobroInput = {
    where?: cobrosWhereInput
    data: XOR<cobrosUpdateWithoutMetodos_pago_cobroInput, cobrosUncheckedUpdateWithoutMetodos_pago_cobroInput>
  }

  export type cobrosUpdateWithoutMetodos_pago_cobroInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutCobrosNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCobrosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateWithoutMetodos_pago_cobroInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutCobrosNestedInput
  }

  export type cobro_conceptosCreateWithoutServiciosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    precio_unitario: number
    cobros: cobrosCreateNestedOneWithoutCobro_conceptosInput
    consultorios: consultoriosCreateNestedOneWithoutCobro_conceptosInput
  }

  export type cobro_conceptosUncheckedCreateWithoutServiciosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_id: string
    consultorio_id: string
    precio_unitario: number
  }

  export type cobro_conceptosCreateOrConnectWithoutServiciosInput = {
    where: cobro_conceptosWhereUniqueInput
    create: XOR<cobro_conceptosCreateWithoutServiciosInput, cobro_conceptosUncheckedCreateWithoutServiciosInput>
  }

  export type cobro_conceptosCreateManyServiciosInputEnvelope = {
    data: cobro_conceptosCreateManyServiciosInput | cobro_conceptosCreateManyServiciosInput[]
    skipDuplicates?: boolean
  }

  export type organizacionesCreateWithoutServiciosInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosCreateNestedManyWithoutOrganizacionesInput
    pacientes?: pacientesCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesUncheckedCreateWithoutServiciosInput = {
    id?: string
    nombre: string
    ruc?: string | null
    direccion?: string | null
    telefono?: string | null
    email?: string | null
    logo_url?: string | null
    color_primario?: string | null
    color_secundario?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    consultorios?: consultoriosUncheckedCreateNestedManyWithoutOrganizacionesInput
    pacientes?: pacientesUncheckedCreateNestedManyWithoutOrganizacionesInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutOrganizacionesInput
  }

  export type organizacionesCreateOrConnectWithoutServiciosInput = {
    where: organizacionesWhereUniqueInput
    create: XOR<organizacionesCreateWithoutServiciosInput, organizacionesUncheckedCreateWithoutServiciosInput>
  }

  export type cobro_conceptosUpsertWithWhereUniqueWithoutServiciosInput = {
    where: cobro_conceptosWhereUniqueInput
    update: XOR<cobro_conceptosUpdateWithoutServiciosInput, cobro_conceptosUncheckedUpdateWithoutServiciosInput>
    create: XOR<cobro_conceptosCreateWithoutServiciosInput, cobro_conceptosUncheckedCreateWithoutServiciosInput>
  }

  export type cobro_conceptosUpdateWithWhereUniqueWithoutServiciosInput = {
    where: cobro_conceptosWhereUniqueInput
    data: XOR<cobro_conceptosUpdateWithoutServiciosInput, cobro_conceptosUncheckedUpdateWithoutServiciosInput>
  }

  export type cobro_conceptosUpdateManyWithWhereWithoutServiciosInput = {
    where: cobro_conceptosScalarWhereInput
    data: XOR<cobro_conceptosUpdateManyMutationInput, cobro_conceptosUncheckedUpdateManyWithoutServiciosInput>
  }

  export type organizacionesUpsertWithoutServiciosInput = {
    update: XOR<organizacionesUpdateWithoutServiciosInput, organizacionesUncheckedUpdateWithoutServiciosInput>
    create: XOR<organizacionesCreateWithoutServiciosInput, organizacionesUncheckedCreateWithoutServiciosInput>
    where?: organizacionesWhereInput
  }

  export type organizacionesUpdateToOneWithWhereWithoutServiciosInput = {
    where?: organizacionesWhereInput
    data: XOR<organizacionesUpdateWithoutServiciosInput, organizacionesUncheckedUpdateWithoutServiciosInput>
  }

  export type organizacionesUpdateWithoutServiciosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUpdateManyWithoutOrganizacionesNestedInput
    pacientes?: pacientesUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUpdateManyWithoutOrganizacionesNestedInput
  }

  export type organizacionesUncheckedUpdateWithoutServiciosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    color_primario?: NullableStringFieldUpdateOperationsInput | string | null
    color_secundario?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultorios?: consultoriosUncheckedUpdateManyWithoutOrganizacionesNestedInput
    pacientes?: pacientesUncheckedUpdateManyWithoutOrganizacionesNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutOrganizacionesNestedInput
  }

  export type consultoriosCreateWithoutPrecios_consultorioInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    citas?: citasCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosCreateNestedOneWithoutConsultoriosInput
    organizaciones: organizacionesCreateNestedOneWithoutConsultoriosInput
    usuarios?: usuariosCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUncheckedCreateWithoutPrecios_consultorioInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
    citas?: citasUncheckedCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosUncheckedCreateNestedOneWithoutConsultoriosInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosCreateOrConnectWithoutPrecios_consultorioInput = {
    where: consultoriosWhereUniqueInput
    create: XOR<consultoriosCreateWithoutPrecios_consultorioInput, consultoriosUncheckedCreateWithoutPrecios_consultorioInput>
  }

  export type consultoriosUpsertWithoutPrecios_consultorioInput = {
    update: XOR<consultoriosUpdateWithoutPrecios_consultorioInput, consultoriosUncheckedUpdateWithoutPrecios_consultorioInput>
    create: XOR<consultoriosCreateWithoutPrecios_consultorioInput, consultoriosUncheckedCreateWithoutPrecios_consultorioInput>
    where?: consultoriosWhereInput
  }

  export type consultoriosUpdateToOneWithWhereWithoutPrecios_consultorioInput = {
    where?: consultoriosWhereInput
    data: XOR<consultoriosUpdateWithoutPrecios_consultorioInput, consultoriosUncheckedUpdateWithoutPrecios_consultorioInput>
  }

  export type consultoriosUpdateWithoutPrecios_consultorioInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUpdateOneWithoutConsultoriosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutConsultoriosNestedInput
    usuarios?: usuariosUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateWithoutPrecios_consultorioInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    citas?: citasUncheckedUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUncheckedUpdateOneWithoutConsultoriosNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosCreateWithoutConfiguracion_permisosInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    citas?: citasCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutConsultoriosInput
    organizaciones: organizacionesCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUncheckedCreateWithoutConfiguracion_permisosInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
    citas?: citasUncheckedCreateNestedManyWithoutConsultoriosInput
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioUncheckedCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosCreateOrConnectWithoutConfiguracion_permisosInput = {
    where: consultoriosWhereUniqueInput
    create: XOR<consultoriosCreateWithoutConfiguracion_permisosInput, consultoriosUncheckedCreateWithoutConfiguracion_permisosInput>
  }

  export type consultoriosUpsertWithoutConfiguracion_permisosInput = {
    update: XOR<consultoriosUpdateWithoutConfiguracion_permisosInput, consultoriosUncheckedUpdateWithoutConfiguracion_permisosInput>
    create: XOR<consultoriosCreateWithoutConfiguracion_permisosInput, consultoriosUncheckedCreateWithoutConfiguracion_permisosInput>
    where?: consultoriosWhereInput
  }

  export type consultoriosUpdateToOneWithWhereWithoutConfiguracion_permisosInput = {
    where?: consultoriosWhereInput
    data: XOR<consultoriosUpdateWithoutConfiguracion_permisosInput, consultoriosUncheckedUpdateWithoutConfiguracion_permisosInput>
  }

  export type consultoriosUpdateWithoutConfiguracion_permisosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutConsultoriosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateWithoutConfiguracion_permisosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    citas?: citasUncheckedUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUncheckedUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosCreateWithoutCitasInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    cobro_conceptos?: cobro_conceptosCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosCreateNestedOneWithoutConsultoriosInput
    organizaciones: organizacionesCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosUncheckedCreateWithoutCitasInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
    organizacion_id: string
    cobro_conceptos?: cobro_conceptosUncheckedCreateNestedManyWithoutConsultoriosInput
    configuracion_permisos?: configuracion_permisosUncheckedCreateNestedOneWithoutConsultoriosInput
    precios_consultorio?: precios_consultorioUncheckedCreateNestedManyWithoutConsultoriosInput
    usuarios?: usuariosUncheckedCreateNestedManyWithoutConsultoriosInput
  }

  export type consultoriosCreateOrConnectWithoutCitasInput = {
    where: consultoriosWhereUniqueInput
    create: XOR<consultoriosCreateWithoutCitasInput, consultoriosUncheckedCreateWithoutCitasInput>
  }

  export type pacientesCreateWithoutCitasInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutPacientesInput
    cobros?: cobrosCreateNestedManyWithoutPacientesInput
    organizaciones: organizacionesCreateNestedOneWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutPacientesInput
  }

  export type pacientesUncheckedCreateWithoutCitasInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    organizacion_id: string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutPacientesInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutPacientesInput
  }

  export type pacientesCreateOrConnectWithoutCitasInput = {
    where: pacientesWhereUniqueInput
    create: XOR<pacientesCreateWithoutCitasInput, pacientesUncheckedCreateWithoutCitasInput>
  }

  export type usuariosCreateWithoutCitasInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutCitasInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutCitasInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutCitasInput, usuariosUncheckedCreateWithoutCitasInput>
  }

  export type whatsapp_messagesCreateWithoutCitasInput = {
    id?: string
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
    pacientes?: pacientesCreateNestedOneWithoutWhatsapp_messagesInput
    usuarios: usuariosCreateNestedOneWithoutWhatsapp_messagesInput
  }

  export type whatsapp_messagesUncheckedCreateWithoutCitasInput = {
    id?: string
    usuario_id: string
    paciente_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_messagesCreateOrConnectWithoutCitasInput = {
    where: whatsapp_messagesWhereUniqueInput
    create: XOR<whatsapp_messagesCreateWithoutCitasInput, whatsapp_messagesUncheckedCreateWithoutCitasInput>
  }

  export type whatsapp_messagesCreateManyCitasInputEnvelope = {
    data: whatsapp_messagesCreateManyCitasInput | whatsapp_messagesCreateManyCitasInput[]
    skipDuplicates?: boolean
  }

  export type whatsapp_remindersCreateWithoutCitasInput = {
    id?: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
    usuarios: usuariosCreateNestedOneWithoutWhatsapp_remindersInput
  }

  export type whatsapp_remindersUncheckedCreateWithoutCitasInput = {
    id?: string
    usuario_id: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_remindersCreateOrConnectWithoutCitasInput = {
    where: whatsapp_remindersWhereUniqueInput
    create: XOR<whatsapp_remindersCreateWithoutCitasInput, whatsapp_remindersUncheckedCreateWithoutCitasInput>
  }

  export type whatsapp_remindersCreateManyCitasInputEnvelope = {
    data: whatsapp_remindersCreateManyCitasInput | whatsapp_remindersCreateManyCitasInput[]
    skipDuplicates?: boolean
  }

  export type consultoriosUpsertWithoutCitasInput = {
    update: XOR<consultoriosUpdateWithoutCitasInput, consultoriosUncheckedUpdateWithoutCitasInput>
    create: XOR<consultoriosCreateWithoutCitasInput, consultoriosUncheckedCreateWithoutCitasInput>
    where?: consultoriosWhereInput
  }

  export type consultoriosUpdateToOneWithWhereWithoutCitasInput = {
    where?: consultoriosWhereInput
    data: XOR<consultoriosUpdateWithoutCitasInput, consultoriosUncheckedUpdateWithoutCitasInput>
  }

  export type consultoriosUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUpdateOneWithoutConsultoriosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUncheckedUpdateOneWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUncheckedUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutConsultoriosNestedInput
  }

  export type pacientesUpsertWithoutCitasInput = {
    update: XOR<pacientesUpdateWithoutCitasInput, pacientesUncheckedUpdateWithoutCitasInput>
    create: XOR<pacientesCreateWithoutCitasInput, pacientesUncheckedCreateWithoutCitasInput>
    where?: pacientesWhereInput
  }

  export type pacientesUpdateToOneWithWhereWithoutCitasInput = {
    where?: pacientesWhereInput
    data: XOR<pacientesUpdateWithoutCitasInput, pacientesUncheckedUpdateWithoutCitasInput>
  }

  export type pacientesUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUpdateManyWithoutPacientesNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutPacientesNestedInput
  }

  export type pacientesUncheckedUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutPacientesNestedInput
  }

  export type usuariosUpsertWithoutCitasInput = {
    update: XOR<usuariosUpdateWithoutCitasInput, usuariosUncheckedUpdateWithoutCitasInput>
    create: XOR<usuariosCreateWithoutCitasInput, usuariosUncheckedCreateWithoutCitasInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutCitasInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutCitasInput, usuariosUncheckedUpdateWithoutCitasInput>
  }

  export type usuariosUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type whatsapp_messagesUpsertWithWhereUniqueWithoutCitasInput = {
    where: whatsapp_messagesWhereUniqueInput
    update: XOR<whatsapp_messagesUpdateWithoutCitasInput, whatsapp_messagesUncheckedUpdateWithoutCitasInput>
    create: XOR<whatsapp_messagesCreateWithoutCitasInput, whatsapp_messagesUncheckedCreateWithoutCitasInput>
  }

  export type whatsapp_messagesUpdateWithWhereUniqueWithoutCitasInput = {
    where: whatsapp_messagesWhereUniqueInput
    data: XOR<whatsapp_messagesUpdateWithoutCitasInput, whatsapp_messagesUncheckedUpdateWithoutCitasInput>
  }

  export type whatsapp_messagesUpdateManyWithWhereWithoutCitasInput = {
    where: whatsapp_messagesScalarWhereInput
    data: XOR<whatsapp_messagesUpdateManyMutationInput, whatsapp_messagesUncheckedUpdateManyWithoutCitasInput>
  }

  export type whatsapp_remindersUpsertWithWhereUniqueWithoutCitasInput = {
    where: whatsapp_remindersWhereUniqueInput
    update: XOR<whatsapp_remindersUpdateWithoutCitasInput, whatsapp_remindersUncheckedUpdateWithoutCitasInput>
    create: XOR<whatsapp_remindersCreateWithoutCitasInput, whatsapp_remindersUncheckedCreateWithoutCitasInput>
  }

  export type whatsapp_remindersUpdateWithWhereUniqueWithoutCitasInput = {
    where: whatsapp_remindersWhereUniqueInput
    data: XOR<whatsapp_remindersUpdateWithoutCitasInput, whatsapp_remindersUncheckedUpdateWithoutCitasInput>
  }

  export type whatsapp_remindersUpdateManyWithWhereWithoutCitasInput = {
    where: whatsapp_remindersScalarWhereInput
    data: XOR<whatsapp_remindersUpdateManyMutationInput, whatsapp_remindersUncheckedUpdateManyWithoutCitasInput>
  }

  export type usuariosCreateWithoutDisponibilidad_medicoInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutDisponibilidad_medicoInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutDisponibilidad_medicoInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutDisponibilidad_medicoInput, usuariosUncheckedCreateWithoutDisponibilidad_medicoInput>
  }

  export type usuariosUpsertWithoutDisponibilidad_medicoInput = {
    update: XOR<usuariosUpdateWithoutDisponibilidad_medicoInput, usuariosUncheckedUpdateWithoutDisponibilidad_medicoInput>
    create: XOR<usuariosCreateWithoutDisponibilidad_medicoInput, usuariosUncheckedCreateWithoutDisponibilidad_medicoInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutDisponibilidad_medicoInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutDisponibilidad_medicoInput, usuariosUncheckedUpdateWithoutDisponibilidad_medicoInput>
  }

  export type usuariosUpdateWithoutDisponibilidad_medicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutDisponibilidad_medicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type InventoryUsageDetailCreateWithoutProductInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
    inventoryUsage: InventoryUsageCreateNestedOneWithoutDetailsInput
    movement?: MovementCreateNestedOneWithoutInventoryUsageDetailInput
  }

  export type InventoryUsageDetailUncheckedCreateWithoutProductInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    inventoryUsageId: string
    movementId?: string | null
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailCreateOrConnectWithoutProductInput = {
    where: InventoryUsageDetailWhereUniqueInput
    create: XOR<InventoryUsageDetailCreateWithoutProductInput, InventoryUsageDetailUncheckedCreateWithoutProductInput>
  }

  export type InventoryUsageDetailCreateManyProductInputEnvelope = {
    data: InventoryUsageDetailCreateManyProductInput | InventoryUsageDetailCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type MovementCreateWithoutProductInput = {
    id?: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutMovementInput
    sede: SedeCreateNestedOneWithoutMovementInput
    user: UserCreateNestedOneWithoutMovementInput
  }

  export type MovementUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    sedeId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutMovementInput
  }

  export type MovementCreateOrConnectWithoutProductInput = {
    where: MovementWhereUniqueInput
    create: XOR<MovementCreateWithoutProductInput, MovementUncheckedCreateWithoutProductInput>
  }

  export type MovementCreateManyProductInputEnvelope = {
    data: MovementCreateManyProductInput | MovementCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductAllergenCreateWithoutProductInput = {
    id?: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
    allergen: AllergenCreateNestedOneWithoutProductAllergenInput
  }

  export type ProductAllergenUncheckedCreateWithoutProductInput = {
    id?: string
    allergenId: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductAllergenCreateOrConnectWithoutProductInput = {
    where: ProductAllergenWhereUniqueInput
    create: XOR<ProductAllergenCreateWithoutProductInput, ProductAllergenUncheckedCreateWithoutProductInput>
  }

  export type ProductAllergenCreateManyProductInputEnvelope = {
    data: ProductAllergenCreateManyProductInput | ProductAllergenCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductExpirationCreateWithoutProductInput = {
    id?: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sede: SedeCreateNestedOneWithoutProductExpirationInput
  }

  export type ProductExpirationUncheckedCreateWithoutProductInput = {
    id?: string
    sedeId: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductExpirationCreateOrConnectWithoutProductInput = {
    where: ProductExpirationWhereUniqueInput
    create: XOR<ProductExpirationCreateWithoutProductInput, ProductExpirationUncheckedCreateWithoutProductInput>
  }

  export type ProductExpirationCreateManyProductInputEnvelope = {
    data: ProductExpirationCreateManyProductInput | ProductExpirationCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type StockBySedeCreateWithoutProductInput = {
    id?: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    sede: SedeCreateNestedOneWithoutStockBySedeInput
  }

  export type StockBySedeUncheckedCreateWithoutProductInput = {
    id?: string
    sedeId: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBySedeCreateOrConnectWithoutProductInput = {
    where: StockBySedeWhereUniqueInput
    create: XOR<StockBySedeCreateWithoutProductInput, StockBySedeUncheckedCreateWithoutProductInput>
  }

  export type StockBySedeCreateManyProductInputEnvelope = {
    data: StockBySedeCreateManyProductInput | StockBySedeCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type InventoryUsageDetailUpsertWithWhereUniqueWithoutProductInput = {
    where: InventoryUsageDetailWhereUniqueInput
    update: XOR<InventoryUsageDetailUpdateWithoutProductInput, InventoryUsageDetailUncheckedUpdateWithoutProductInput>
    create: XOR<InventoryUsageDetailCreateWithoutProductInput, InventoryUsageDetailUncheckedCreateWithoutProductInput>
  }

  export type InventoryUsageDetailUpdateWithWhereUniqueWithoutProductInput = {
    where: InventoryUsageDetailWhereUniqueInput
    data: XOR<InventoryUsageDetailUpdateWithoutProductInput, InventoryUsageDetailUncheckedUpdateWithoutProductInput>
  }

  export type InventoryUsageDetailUpdateManyWithWhereWithoutProductInput = {
    where: InventoryUsageDetailScalarWhereInput
    data: XOR<InventoryUsageDetailUpdateManyMutationInput, InventoryUsageDetailUncheckedUpdateManyWithoutProductInput>
  }

  export type InventoryUsageDetailScalarWhereInput = {
    AND?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
    OR?: InventoryUsageDetailScalarWhereInput[]
    NOT?: InventoryUsageDetailScalarWhereInput | InventoryUsageDetailScalarWhereInput[]
    id?: StringFilter<"InventoryUsageDetail"> | string
    createdAt?: DateTimeFilter<"InventoryUsageDetail"> | Date | string
    doses?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    frascoLevel?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    inventoryUsageId?: StringFilter<"InventoryUsageDetail"> | string
    movementId?: StringNullableFilter<"InventoryUsageDetail"> | string | null
    productId?: StringFilter<"InventoryUsageDetail"> | string
    quantity?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFilter<"InventoryUsageDetail"> | Decimal | DecimalJsLike | number | string
    units?: IntNullableFilter<"InventoryUsageDetail"> | number | null
    updatedAt?: DateTimeFilter<"InventoryUsageDetail"> | Date | string
  }

  export type MovementUpsertWithWhereUniqueWithoutProductInput = {
    where: MovementWhereUniqueInput
    update: XOR<MovementUpdateWithoutProductInput, MovementUncheckedUpdateWithoutProductInput>
    create: XOR<MovementCreateWithoutProductInput, MovementUncheckedCreateWithoutProductInput>
  }

  export type MovementUpdateWithWhereUniqueWithoutProductInput = {
    where: MovementWhereUniqueInput
    data: XOR<MovementUpdateWithoutProductInput, MovementUncheckedUpdateWithoutProductInput>
  }

  export type MovementUpdateManyWithWhereWithoutProductInput = {
    where: MovementScalarWhereInput
    data: XOR<MovementUpdateManyMutationInput, MovementUncheckedUpdateManyWithoutProductInput>
  }

  export type MovementScalarWhereInput = {
    AND?: MovementScalarWhereInput | MovementScalarWhereInput[]
    OR?: MovementScalarWhereInput[]
    NOT?: MovementScalarWhereInput | MovementScalarWhereInput[]
    id?: StringFilter<"Movement"> | string
    userId?: StringFilter<"Movement"> | string
    sedeId?: StringFilter<"Movement"> | string
    productId?: StringFilter<"Movement"> | string
    type?: EnumMovementTypeFilter<"Movement"> | $Enums.MovementType
    quantity?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"Movement"> | Decimal | DecimalJsLike | number | string
    batchNumber?: StringNullableFilter<"Movement"> | string | null
    expiryDate?: DateTimeNullableFilter<"Movement"> | Date | string | null
    createdAt?: DateTimeFilter<"Movement"> | Date | string
  }

  export type ProductAllergenUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductAllergenWhereUniqueInput
    update: XOR<ProductAllergenUpdateWithoutProductInput, ProductAllergenUncheckedUpdateWithoutProductInput>
    create: XOR<ProductAllergenCreateWithoutProductInput, ProductAllergenUncheckedCreateWithoutProductInput>
  }

  export type ProductAllergenUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductAllergenWhereUniqueInput
    data: XOR<ProductAllergenUpdateWithoutProductInput, ProductAllergenUncheckedUpdateWithoutProductInput>
  }

  export type ProductAllergenUpdateManyWithWhereWithoutProductInput = {
    where: ProductAllergenScalarWhereInput
    data: XOR<ProductAllergenUpdateManyMutationInput, ProductAllergenUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductAllergenScalarWhereInput = {
    AND?: ProductAllergenScalarWhereInput | ProductAllergenScalarWhereInput[]
    OR?: ProductAllergenScalarWhereInput[]
    NOT?: ProductAllergenScalarWhereInput | ProductAllergenScalarWhereInput[]
    id?: StringFilter<"ProductAllergen"> | string
    productId?: StringFilter<"ProductAllergen"> | string
    allergenId?: StringFilter<"ProductAllergen"> | string
    mlPerDose?: DecimalFilter<"ProductAllergen"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"ProductAllergen"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAllergen"> | Date | string
  }

  export type ProductExpirationUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductExpirationWhereUniqueInput
    update: XOR<ProductExpirationUpdateWithoutProductInput, ProductExpirationUncheckedUpdateWithoutProductInput>
    create: XOR<ProductExpirationCreateWithoutProductInput, ProductExpirationUncheckedCreateWithoutProductInput>
  }

  export type ProductExpirationUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductExpirationWhereUniqueInput
    data: XOR<ProductExpirationUpdateWithoutProductInput, ProductExpirationUncheckedUpdateWithoutProductInput>
  }

  export type ProductExpirationUpdateManyWithWhereWithoutProductInput = {
    where: ProductExpirationScalarWhereInput
    data: XOR<ProductExpirationUpdateManyMutationInput, ProductExpirationUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductExpirationScalarWhereInput = {
    AND?: ProductExpirationScalarWhereInput | ProductExpirationScalarWhereInput[]
    OR?: ProductExpirationScalarWhereInput[]
    NOT?: ProductExpirationScalarWhereInput | ProductExpirationScalarWhereInput[]
    id?: StringFilter<"ProductExpiration"> | string
    productId?: StringFilter<"ProductExpiration"> | string
    sedeId?: StringFilter<"ProductExpiration"> | string
    batchNumber?: StringFilter<"ProductExpiration"> | string
    expiryDate?: DateTimeFilter<"ProductExpiration"> | Date | string
    quantity?: IntFilter<"ProductExpiration"> | number
    createdAt?: DateTimeFilter<"ProductExpiration"> | Date | string
    updatedAt?: DateTimeFilter<"ProductExpiration"> | Date | string
  }

  export type StockBySedeUpsertWithWhereUniqueWithoutProductInput = {
    where: StockBySedeWhereUniqueInput
    update: XOR<StockBySedeUpdateWithoutProductInput, StockBySedeUncheckedUpdateWithoutProductInput>
    create: XOR<StockBySedeCreateWithoutProductInput, StockBySedeUncheckedCreateWithoutProductInput>
  }

  export type StockBySedeUpdateWithWhereUniqueWithoutProductInput = {
    where: StockBySedeWhereUniqueInput
    data: XOR<StockBySedeUpdateWithoutProductInput, StockBySedeUncheckedUpdateWithoutProductInput>
  }

  export type StockBySedeUpdateManyWithWhereWithoutProductInput = {
    where: StockBySedeScalarWhereInput
    data: XOR<StockBySedeUpdateManyMutationInput, StockBySedeUncheckedUpdateManyWithoutProductInput>
  }

  export type StockBySedeScalarWhereInput = {
    AND?: StockBySedeScalarWhereInput | StockBySedeScalarWhereInput[]
    OR?: StockBySedeScalarWhereInput[]
    NOT?: StockBySedeScalarWhereInput | StockBySedeScalarWhereInput[]
    id?: StringFilter<"StockBySede"> | string
    productId?: StringFilter<"StockBySede"> | string
    sedeId?: StringFilter<"StockBySede"> | string
    quantity?: DecimalFilter<"StockBySede"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"StockBySede"> | Date | string
    updatedAt?: DateTimeFilter<"StockBySede"> | Date | string
  }

  export type InventoryUsageCreateWithoutSedeInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    pacientes?: pacientesCreateNestedOneWithoutInventoryUsageInput
    user: UserCreateNestedOneWithoutInventoryUsageInput
    details?: InventoryUsageDetailCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageUncheckedCreateWithoutSedeInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    pacienteId?: string | null
    details?: InventoryUsageDetailUncheckedCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageCreateOrConnectWithoutSedeInput = {
    where: InventoryUsageWhereUniqueInput
    create: XOR<InventoryUsageCreateWithoutSedeInput, InventoryUsageUncheckedCreateWithoutSedeInput>
  }

  export type InventoryUsageCreateManySedeInputEnvelope = {
    data: InventoryUsageCreateManySedeInput | InventoryUsageCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type MovementCreateWithoutSedeInput = {
    id?: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutMovementInput
    product: ProductCreateNestedOneWithoutMovementInput
    user: UserCreateNestedOneWithoutMovementInput
  }

  export type MovementUncheckedCreateWithoutSedeInput = {
    id?: string
    userId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutMovementInput
  }

  export type MovementCreateOrConnectWithoutSedeInput = {
    where: MovementWhereUniqueInput
    create: XOR<MovementCreateWithoutSedeInput, MovementUncheckedCreateWithoutSedeInput>
  }

  export type MovementCreateManySedeInputEnvelope = {
    data: MovementCreateManySedeInput | MovementCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type ProductExpirationCreateWithoutSedeInput = {
    id?: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductExpirationInput
  }

  export type ProductExpirationUncheckedCreateWithoutSedeInput = {
    id?: string
    productId: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductExpirationCreateOrConnectWithoutSedeInput = {
    where: ProductExpirationWhereUniqueInput
    create: XOR<ProductExpirationCreateWithoutSedeInput, ProductExpirationUncheckedCreateWithoutSedeInput>
  }

  export type ProductExpirationCreateManySedeInputEnvelope = {
    data: ProductExpirationCreateManySedeInput | ProductExpirationCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type StockBySedeCreateWithoutSedeInput = {
    id?: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutStockBySedeInput
  }

  export type StockBySedeUncheckedCreateWithoutSedeInput = {
    id?: string
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBySedeCreateOrConnectWithoutSedeInput = {
    where: StockBySedeWhereUniqueInput
    create: XOR<StockBySedeCreateWithoutSedeInput, StockBySedeUncheckedCreateWithoutSedeInput>
  }

  export type StockBySedeCreateManySedeInputEnvelope = {
    data: StockBySedeCreateManySedeInput | StockBySedeCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutSedeInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutUserInput
    Movement?: MovementCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSedeInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutUserInput
    Movement?: MovementUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSedeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSedeInput, UserUncheckedCreateWithoutSedeInput>
  }

  export type UserCreateManySedeInputEnvelope = {
    data: UserCreateManySedeInput | UserCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type InventoryUsageUpsertWithWhereUniqueWithoutSedeInput = {
    where: InventoryUsageWhereUniqueInput
    update: XOR<InventoryUsageUpdateWithoutSedeInput, InventoryUsageUncheckedUpdateWithoutSedeInput>
    create: XOR<InventoryUsageCreateWithoutSedeInput, InventoryUsageUncheckedCreateWithoutSedeInput>
  }

  export type InventoryUsageUpdateWithWhereUniqueWithoutSedeInput = {
    where: InventoryUsageWhereUniqueInput
    data: XOR<InventoryUsageUpdateWithoutSedeInput, InventoryUsageUncheckedUpdateWithoutSedeInput>
  }

  export type InventoryUsageUpdateManyWithWhereWithoutSedeInput = {
    where: InventoryUsageScalarWhereInput
    data: XOR<InventoryUsageUpdateManyMutationInput, InventoryUsageUncheckedUpdateManyWithoutSedeInput>
  }

  export type MovementUpsertWithWhereUniqueWithoutSedeInput = {
    where: MovementWhereUniqueInput
    update: XOR<MovementUpdateWithoutSedeInput, MovementUncheckedUpdateWithoutSedeInput>
    create: XOR<MovementCreateWithoutSedeInput, MovementUncheckedCreateWithoutSedeInput>
  }

  export type MovementUpdateWithWhereUniqueWithoutSedeInput = {
    where: MovementWhereUniqueInput
    data: XOR<MovementUpdateWithoutSedeInput, MovementUncheckedUpdateWithoutSedeInput>
  }

  export type MovementUpdateManyWithWhereWithoutSedeInput = {
    where: MovementScalarWhereInput
    data: XOR<MovementUpdateManyMutationInput, MovementUncheckedUpdateManyWithoutSedeInput>
  }

  export type ProductExpirationUpsertWithWhereUniqueWithoutSedeInput = {
    where: ProductExpirationWhereUniqueInput
    update: XOR<ProductExpirationUpdateWithoutSedeInput, ProductExpirationUncheckedUpdateWithoutSedeInput>
    create: XOR<ProductExpirationCreateWithoutSedeInput, ProductExpirationUncheckedCreateWithoutSedeInput>
  }

  export type ProductExpirationUpdateWithWhereUniqueWithoutSedeInput = {
    where: ProductExpirationWhereUniqueInput
    data: XOR<ProductExpirationUpdateWithoutSedeInput, ProductExpirationUncheckedUpdateWithoutSedeInput>
  }

  export type ProductExpirationUpdateManyWithWhereWithoutSedeInput = {
    where: ProductExpirationScalarWhereInput
    data: XOR<ProductExpirationUpdateManyMutationInput, ProductExpirationUncheckedUpdateManyWithoutSedeInput>
  }

  export type StockBySedeUpsertWithWhereUniqueWithoutSedeInput = {
    where: StockBySedeWhereUniqueInput
    update: XOR<StockBySedeUpdateWithoutSedeInput, StockBySedeUncheckedUpdateWithoutSedeInput>
    create: XOR<StockBySedeCreateWithoutSedeInput, StockBySedeUncheckedCreateWithoutSedeInput>
  }

  export type StockBySedeUpdateWithWhereUniqueWithoutSedeInput = {
    where: StockBySedeWhereUniqueInput
    data: XOR<StockBySedeUpdateWithoutSedeInput, StockBySedeUncheckedUpdateWithoutSedeInput>
  }

  export type StockBySedeUpdateManyWithWhereWithoutSedeInput = {
    where: StockBySedeScalarWhereInput
    data: XOR<StockBySedeUpdateManyMutationInput, StockBySedeUncheckedUpdateManyWithoutSedeInput>
  }

  export type UserUpsertWithWhereUniqueWithoutSedeInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutSedeInput, UserUncheckedUpdateWithoutSedeInput>
    create: XOR<UserCreateWithoutSedeInput, UserUncheckedCreateWithoutSedeInput>
  }

  export type UserUpdateWithWhereUniqueWithoutSedeInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutSedeInput, UserUncheckedUpdateWithoutSedeInput>
  }

  export type UserUpdateManyWithWhereWithoutSedeInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutSedeInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    sedeId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type InventoryUsageCreateWithoutUserInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    pacientes?: pacientesCreateNestedOneWithoutInventoryUsageInput
    sede: SedeCreateNestedOneWithoutInventoryUsageInput
    details?: InventoryUsageDetailCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageUncheckedCreateWithoutUserInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    sedeId: string
    updatedAt?: Date | string
    pacienteId?: string | null
    details?: InventoryUsageDetailUncheckedCreateNestedManyWithoutInventoryUsageInput
  }

  export type InventoryUsageCreateOrConnectWithoutUserInput = {
    where: InventoryUsageWhereUniqueInput
    create: XOR<InventoryUsageCreateWithoutUserInput, InventoryUsageUncheckedCreateWithoutUserInput>
  }

  export type InventoryUsageCreateManyUserInputEnvelope = {
    data: InventoryUsageCreateManyUserInput | InventoryUsageCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MovementCreateWithoutUserInput = {
    id?: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutMovementInput
    product: ProductCreateNestedOneWithoutMovementInput
    sede: SedeCreateNestedOneWithoutMovementInput
  }

  export type MovementUncheckedCreateWithoutUserInput = {
    id?: string
    sedeId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutMovementInput
  }

  export type MovementCreateOrConnectWithoutUserInput = {
    where: MovementWhereUniqueInput
    create: XOR<MovementCreateWithoutUserInput, MovementUncheckedCreateWithoutUserInput>
  }

  export type MovementCreateManyUserInputEnvelope = {
    data: MovementCreateManyUserInput | MovementCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SedeCreateWithoutUserInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutSedeInput
    Movement?: MovementCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutSedeInput
    Movement?: MovementUncheckedCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutUserInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutUserInput, SedeUncheckedCreateWithoutUserInput>
  }

  export type InventoryUsageUpsertWithWhereUniqueWithoutUserInput = {
    where: InventoryUsageWhereUniqueInput
    update: XOR<InventoryUsageUpdateWithoutUserInput, InventoryUsageUncheckedUpdateWithoutUserInput>
    create: XOR<InventoryUsageCreateWithoutUserInput, InventoryUsageUncheckedCreateWithoutUserInput>
  }

  export type InventoryUsageUpdateWithWhereUniqueWithoutUserInput = {
    where: InventoryUsageWhereUniqueInput
    data: XOR<InventoryUsageUpdateWithoutUserInput, InventoryUsageUncheckedUpdateWithoutUserInput>
  }

  export type InventoryUsageUpdateManyWithWhereWithoutUserInput = {
    where: InventoryUsageScalarWhereInput
    data: XOR<InventoryUsageUpdateManyMutationInput, InventoryUsageUncheckedUpdateManyWithoutUserInput>
  }

  export type MovementUpsertWithWhereUniqueWithoutUserInput = {
    where: MovementWhereUniqueInput
    update: XOR<MovementUpdateWithoutUserInput, MovementUncheckedUpdateWithoutUserInput>
    create: XOR<MovementCreateWithoutUserInput, MovementUncheckedCreateWithoutUserInput>
  }

  export type MovementUpdateWithWhereUniqueWithoutUserInput = {
    where: MovementWhereUniqueInput
    data: XOR<MovementUpdateWithoutUserInput, MovementUncheckedUpdateWithoutUserInput>
  }

  export type MovementUpdateManyWithWhereWithoutUserInput = {
    where: MovementScalarWhereInput
    data: XOR<MovementUpdateManyMutationInput, MovementUncheckedUpdateManyWithoutUserInput>
  }

  export type SedeUpsertWithoutUserInput = {
    update: XOR<SedeUpdateWithoutUserInput, SedeUncheckedUpdateWithoutUserInput>
    create: XOR<SedeCreateWithoutUserInput, SedeUncheckedCreateWithoutUserInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutUserInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutUserInput, SedeUncheckedUpdateWithoutUserInput>
  }

  export type SedeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutSedeNestedInput
    Movement?: MovementUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutSedeNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type pacientesCreateWithoutInventoryUsageInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    citas?: citasCreateNestedManyWithoutPacientesInput
    cobros?: cobrosCreateNestedManyWithoutPacientesInput
    organizaciones: organizacionesCreateNestedOneWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutPacientesInput
  }

  export type pacientesUncheckedCreateWithoutInventoryUsageInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    organizacion_id: string
    citas?: citasUncheckedCreateNestedManyWithoutPacientesInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutPacientesInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutPacientesInput
  }

  export type pacientesCreateOrConnectWithoutInventoryUsageInput = {
    where: pacientesWhereUniqueInput
    create: XOR<pacientesCreateWithoutInventoryUsageInput, pacientesUncheckedCreateWithoutInventoryUsageInput>
  }

  export type SedeCreateWithoutInventoryUsageInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    Movement?: MovementCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeCreateNestedManyWithoutSedeInput
    User?: UserCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutInventoryUsageInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    Movement?: MovementUncheckedCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutSedeInput
    User?: UserUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutInventoryUsageInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutInventoryUsageInput, SedeUncheckedCreateWithoutInventoryUsageInput>
  }

  export type UserCreateWithoutInventoryUsageInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
    Movement?: MovementCreateNestedManyWithoutUserInput
    Sede: SedeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInventoryUsageInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    sedeId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    Movement?: MovementUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInventoryUsageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInventoryUsageInput, UserUncheckedCreateWithoutInventoryUsageInput>
  }

  export type InventoryUsageDetailCreateWithoutInventoryUsageInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
    movement?: MovementCreateNestedOneWithoutInventoryUsageDetailInput
    product: ProductCreateNestedOneWithoutInventoryUsageDetailInput
  }

  export type InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    movementId?: string | null
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailCreateOrConnectWithoutInventoryUsageInput = {
    where: InventoryUsageDetailWhereUniqueInput
    create: XOR<InventoryUsageDetailCreateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput>
  }

  export type InventoryUsageDetailCreateManyInventoryUsageInputEnvelope = {
    data: InventoryUsageDetailCreateManyInventoryUsageInput | InventoryUsageDetailCreateManyInventoryUsageInput[]
    skipDuplicates?: boolean
  }

  export type pacientesUpsertWithoutInventoryUsageInput = {
    update: XOR<pacientesUpdateWithoutInventoryUsageInput, pacientesUncheckedUpdateWithoutInventoryUsageInput>
    create: XOR<pacientesCreateWithoutInventoryUsageInput, pacientesUncheckedCreateWithoutInventoryUsageInput>
    where?: pacientesWhereInput
  }

  export type pacientesUpdateToOneWithWhereWithoutInventoryUsageInput = {
    where?: pacientesWhereInput
    data: XOR<pacientesUpdateWithoutInventoryUsageInput, pacientesUncheckedUpdateWithoutInventoryUsageInput>
  }

  export type pacientesUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    citas?: citasUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUpdateManyWithoutPacientesNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutPacientesNestedInput
  }

  export type pacientesUncheckedUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    citas?: citasUncheckedUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutPacientesNestedInput
  }

  export type SedeUpsertWithoutInventoryUsageInput = {
    update: XOR<SedeUpdateWithoutInventoryUsageInput, SedeUncheckedUpdateWithoutInventoryUsageInput>
    create: XOR<SedeCreateWithoutInventoryUsageInput, SedeUncheckedCreateWithoutInventoryUsageInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutInventoryUsageInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutInventoryUsageInput, SedeUncheckedUpdateWithoutInventoryUsageInput>
  }

  export type SedeUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Movement?: MovementUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutSedeNestedInput
    User?: UserUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Movement?: MovementUncheckedUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutSedeNestedInput
    User?: UserUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type UserUpsertWithoutInventoryUsageInput = {
    update: XOR<UserUpdateWithoutInventoryUsageInput, UserUncheckedUpdateWithoutInventoryUsageInput>
    create: XOR<UserCreateWithoutInventoryUsageInput, UserUncheckedCreateWithoutInventoryUsageInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInventoryUsageInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInventoryUsageInput, UserUncheckedUpdateWithoutInventoryUsageInput>
  }

  export type UserUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Movement?: MovementUpdateManyWithoutUserNestedInput
    Sede?: SedeUpdateOneRequiredWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    sedeId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Movement?: MovementUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InventoryUsageDetailUpsertWithWhereUniqueWithoutInventoryUsageInput = {
    where: InventoryUsageDetailWhereUniqueInput
    update: XOR<InventoryUsageDetailUpdateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedUpdateWithoutInventoryUsageInput>
    create: XOR<InventoryUsageDetailCreateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedCreateWithoutInventoryUsageInput>
  }

  export type InventoryUsageDetailUpdateWithWhereUniqueWithoutInventoryUsageInput = {
    where: InventoryUsageDetailWhereUniqueInput
    data: XOR<InventoryUsageDetailUpdateWithoutInventoryUsageInput, InventoryUsageDetailUncheckedUpdateWithoutInventoryUsageInput>
  }

  export type InventoryUsageDetailUpdateManyWithWhereWithoutInventoryUsageInput = {
    where: InventoryUsageDetailScalarWhereInput
    data: XOR<InventoryUsageDetailUpdateManyMutationInput, InventoryUsageDetailUncheckedUpdateManyWithoutInventoryUsageInput>
  }

  export type InventoryUsageCreateWithoutDetailsInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    pacientes?: pacientesCreateNestedOneWithoutInventoryUsageInput
    sede: SedeCreateNestedOneWithoutInventoryUsageInput
    user: UserCreateNestedOneWithoutInventoryUsageInput
  }

  export type InventoryUsageUncheckedCreateWithoutDetailsInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    sedeId: string
    updatedAt?: Date | string
    userId: string
    pacienteId?: string | null
  }

  export type InventoryUsageCreateOrConnectWithoutDetailsInput = {
    where: InventoryUsageWhereUniqueInput
    create: XOR<InventoryUsageCreateWithoutDetailsInput, InventoryUsageUncheckedCreateWithoutDetailsInput>
  }

  export type MovementCreateWithoutInventoryUsageDetailInput = {
    id?: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
    product: ProductCreateNestedOneWithoutMovementInput
    sede: SedeCreateNestedOneWithoutMovementInput
    user: UserCreateNestedOneWithoutMovementInput
  }

  export type MovementUncheckedCreateWithoutInventoryUsageDetailInput = {
    id?: string
    userId: string
    sedeId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
  }

  export type MovementCreateOrConnectWithoutInventoryUsageDetailInput = {
    where: MovementWhereUniqueInput
    create: XOR<MovementCreateWithoutInventoryUsageDetailInput, MovementUncheckedCreateWithoutInventoryUsageDetailInput>
  }

  export type ProductCreateWithoutInventoryUsageDetailInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    Movement?: MovementCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutInventoryUsageDetailInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    Movement?: MovementUncheckedCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenUncheckedCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutInventoryUsageDetailInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutInventoryUsageDetailInput, ProductUncheckedCreateWithoutInventoryUsageDetailInput>
  }

  export type InventoryUsageUpsertWithoutDetailsInput = {
    update: XOR<InventoryUsageUpdateWithoutDetailsInput, InventoryUsageUncheckedUpdateWithoutDetailsInput>
    create: XOR<InventoryUsageCreateWithoutDetailsInput, InventoryUsageUncheckedCreateWithoutDetailsInput>
    where?: InventoryUsageWhereInput
  }

  export type InventoryUsageUpdateToOneWithWhereWithoutDetailsInput = {
    where?: InventoryUsageWhereInput
    data: XOR<InventoryUsageUpdateWithoutDetailsInput, InventoryUsageUncheckedUpdateWithoutDetailsInput>
  }

  export type InventoryUsageUpdateWithoutDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes?: pacientesUpdateOneWithoutInventoryUsageNestedInput
    sede?: SedeUpdateOneRequiredWithoutInventoryUsageNestedInput
    user?: UserUpdateOneRequiredWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateWithoutDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sedeId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    pacienteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MovementUpsertWithoutInventoryUsageDetailInput = {
    update: XOR<MovementUpdateWithoutInventoryUsageDetailInput, MovementUncheckedUpdateWithoutInventoryUsageDetailInput>
    create: XOR<MovementCreateWithoutInventoryUsageDetailInput, MovementUncheckedCreateWithoutInventoryUsageDetailInput>
    where?: MovementWhereInput
  }

  export type MovementUpdateToOneWithWhereWithoutInventoryUsageDetailInput = {
    where?: MovementWhereInput
    data: XOR<MovementUpdateWithoutInventoryUsageDetailInput, MovementUncheckedUpdateWithoutInventoryUsageDetailInput>
  }

  export type MovementUpdateWithoutInventoryUsageDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutMovementNestedInput
    sede?: SedeUpdateOneRequiredWithoutMovementNestedInput
    user?: UserUpdateOneRequiredWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateWithoutInventoryUsageDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpsertWithoutInventoryUsageDetailInput = {
    update: XOR<ProductUpdateWithoutInventoryUsageDetailInput, ProductUncheckedUpdateWithoutInventoryUsageDetailInput>
    create: XOR<ProductCreateWithoutInventoryUsageDetailInput, ProductUncheckedCreateWithoutInventoryUsageDetailInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutInventoryUsageDetailInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutInventoryUsageDetailInput, ProductUncheckedUpdateWithoutInventoryUsageDetailInput>
  }

  export type ProductUpdateWithoutInventoryUsageDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    Movement?: MovementUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutInventoryUsageDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    Movement?: MovementUncheckedUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUncheckedUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutProductNestedInput
  }

  export type InventoryUsageDetailCreateWithoutMovementInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
    inventoryUsage: InventoryUsageCreateNestedOneWithoutDetailsInput
    product: ProductCreateNestedOneWithoutInventoryUsageDetailInput
  }

  export type InventoryUsageDetailUncheckedCreateWithoutMovementInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    inventoryUsageId: string
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailCreateOrConnectWithoutMovementInput = {
    where: InventoryUsageDetailWhereUniqueInput
    create: XOR<InventoryUsageDetailCreateWithoutMovementInput, InventoryUsageDetailUncheckedCreateWithoutMovementInput>
  }

  export type InventoryUsageDetailCreateManyMovementInputEnvelope = {
    data: InventoryUsageDetailCreateManyMovementInput | InventoryUsageDetailCreateManyMovementInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutMovementInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutMovementInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenUncheckedCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutMovementInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutMovementInput, ProductUncheckedCreateWithoutMovementInput>
  }

  export type SedeCreateWithoutMovementInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeCreateNestedManyWithoutSedeInput
    User?: UserCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutMovementInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutSedeInput
    User?: UserUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutMovementInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutMovementInput, SedeUncheckedCreateWithoutMovementInput>
  }

  export type UserCreateWithoutMovementInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutUserInput
    Sede: SedeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutMovementInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    sedeId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutMovementInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMovementInput, UserUncheckedCreateWithoutMovementInput>
  }

  export type InventoryUsageDetailUpsertWithWhereUniqueWithoutMovementInput = {
    where: InventoryUsageDetailWhereUniqueInput
    update: XOR<InventoryUsageDetailUpdateWithoutMovementInput, InventoryUsageDetailUncheckedUpdateWithoutMovementInput>
    create: XOR<InventoryUsageDetailCreateWithoutMovementInput, InventoryUsageDetailUncheckedCreateWithoutMovementInput>
  }

  export type InventoryUsageDetailUpdateWithWhereUniqueWithoutMovementInput = {
    where: InventoryUsageDetailWhereUniqueInput
    data: XOR<InventoryUsageDetailUpdateWithoutMovementInput, InventoryUsageDetailUncheckedUpdateWithoutMovementInput>
  }

  export type InventoryUsageDetailUpdateManyWithWhereWithoutMovementInput = {
    where: InventoryUsageDetailScalarWhereInput
    data: XOR<InventoryUsageDetailUpdateManyMutationInput, InventoryUsageDetailUncheckedUpdateManyWithoutMovementInput>
  }

  export type ProductUpsertWithoutMovementInput = {
    update: XOR<ProductUpdateWithoutMovementInput, ProductUncheckedUpdateWithoutMovementInput>
    create: XOR<ProductCreateWithoutMovementInput, ProductUncheckedCreateWithoutMovementInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutMovementInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutMovementInput, ProductUncheckedUpdateWithoutMovementInput>
  }

  export type ProductUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUncheckedUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutProductNestedInput
  }

  export type SedeUpsertWithoutMovementInput = {
    update: XOR<SedeUpdateWithoutMovementInput, SedeUncheckedUpdateWithoutMovementInput>
    create: XOR<SedeCreateWithoutMovementInput, SedeUncheckedCreateWithoutMovementInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutMovementInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutMovementInput, SedeUncheckedUpdateWithoutMovementInput>
  }

  export type SedeUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutSedeNestedInput
    User?: UserUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutSedeNestedInput
    User?: UserUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type UserUpsertWithoutMovementInput = {
    update: XOR<UserUpdateWithoutMovementInput, UserUncheckedUpdateWithoutMovementInput>
    create: XOR<UserCreateWithoutMovementInput, UserUncheckedCreateWithoutMovementInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMovementInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMovementInput, UserUncheckedUpdateWithoutMovementInput>
  }

  export type UserUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutUserNestedInput
    Sede?: SedeUpdateOneRequiredWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    sedeId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductCreateWithoutStockBySedeInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutProductInput
    Movement?: MovementCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutStockBySedeInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutProductInput
    Movement?: MovementUncheckedCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenUncheckedCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutStockBySedeInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutStockBySedeInput, ProductUncheckedCreateWithoutStockBySedeInput>
  }

  export type SedeCreateWithoutStockBySedeInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutSedeInput
    Movement?: MovementCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutSedeInput
    User?: UserCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutStockBySedeInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutSedeInput
    Movement?: MovementUncheckedCreateNestedManyWithoutSedeInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutSedeInput
    User?: UserUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutStockBySedeInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutStockBySedeInput, SedeUncheckedCreateWithoutStockBySedeInput>
  }

  export type ProductUpsertWithoutStockBySedeInput = {
    update: XOR<ProductUpdateWithoutStockBySedeInput, ProductUncheckedUpdateWithoutStockBySedeInput>
    create: XOR<ProductCreateWithoutStockBySedeInput, ProductUncheckedCreateWithoutStockBySedeInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutStockBySedeInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutStockBySedeInput, ProductUncheckedUpdateWithoutStockBySedeInput>
  }

  export type ProductUpdateWithoutStockBySedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutProductNestedInput
    Movement?: MovementUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutStockBySedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutProductNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUncheckedUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type SedeUpsertWithoutStockBySedeInput = {
    update: XOR<SedeUpdateWithoutStockBySedeInput, SedeUncheckedUpdateWithoutStockBySedeInput>
    create: XOR<SedeCreateWithoutStockBySedeInput, SedeUncheckedCreateWithoutStockBySedeInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutStockBySedeInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutStockBySedeInput, SedeUncheckedUpdateWithoutStockBySedeInput>
  }

  export type SedeUpdateWithoutStockBySedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutSedeNestedInput
    Movement?: MovementUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutSedeNestedInput
    User?: UserUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutStockBySedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutSedeNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutSedeNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutSedeNestedInput
    User?: UserUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type ProductCreateWithoutProductExpirationInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutProductInput
    Movement?: MovementCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductExpirationInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutProductInput
    Movement?: MovementUncheckedCreateNestedManyWithoutProductInput
    ProductAllergen?: ProductAllergenUncheckedCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductExpirationInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductExpirationInput, ProductUncheckedCreateWithoutProductExpirationInput>
  }

  export type SedeCreateWithoutProductExpirationInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutSedeInput
    Movement?: MovementCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeCreateNestedManyWithoutSedeInput
    User?: UserCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutProductExpirationInput = {
    id?: string
    name: string
    address: string
    createdAt?: Date | string
    updatedAt?: Date | string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutSedeInput
    Movement?: MovementUncheckedCreateNestedManyWithoutSedeInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutSedeInput
    User?: UserUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutProductExpirationInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutProductExpirationInput, SedeUncheckedCreateWithoutProductExpirationInput>
  }

  export type ProductUpsertWithoutProductExpirationInput = {
    update: XOR<ProductUpdateWithoutProductExpirationInput, ProductUncheckedUpdateWithoutProductExpirationInput>
    create: XOR<ProductCreateWithoutProductExpirationInput, ProductUncheckedCreateWithoutProductExpirationInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductExpirationInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductExpirationInput, ProductUncheckedUpdateWithoutProductExpirationInput>
  }

  export type ProductUpdateWithoutProductExpirationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutProductNestedInput
    Movement?: MovementUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductExpirationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutProductNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutProductNestedInput
    ProductAllergen?: ProductAllergenUncheckedUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutProductNestedInput
  }

  export type SedeUpsertWithoutProductExpirationInput = {
    update: XOR<SedeUpdateWithoutProductExpirationInput, SedeUncheckedUpdateWithoutProductExpirationInput>
    create: XOR<SedeCreateWithoutProductExpirationInput, SedeUncheckedCreateWithoutProductExpirationInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutProductExpirationInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutProductExpirationInput, SedeUncheckedUpdateWithoutProductExpirationInput>
  }

  export type SedeUpdateWithoutProductExpirationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutSedeNestedInput
    Movement?: MovementUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutSedeNestedInput
    User?: UserUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutProductExpirationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutSedeNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutSedeNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutSedeNestedInput
    User?: UserUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type ProductAllergenCreateWithoutAllergenInput = {
    id?: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
    product: ProductCreateNestedOneWithoutProductAllergenInput
  }

  export type ProductAllergenUncheckedCreateWithoutAllergenInput = {
    id?: string
    productId: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductAllergenCreateOrConnectWithoutAllergenInput = {
    where: ProductAllergenWhereUniqueInput
    create: XOR<ProductAllergenCreateWithoutAllergenInput, ProductAllergenUncheckedCreateWithoutAllergenInput>
  }

  export type ProductAllergenCreateManyAllergenInputEnvelope = {
    data: ProductAllergenCreateManyAllergenInput | ProductAllergenCreateManyAllergenInput[]
    skipDuplicates?: boolean
  }

  export type ProductAllergenUpsertWithWhereUniqueWithoutAllergenInput = {
    where: ProductAllergenWhereUniqueInput
    update: XOR<ProductAllergenUpdateWithoutAllergenInput, ProductAllergenUncheckedUpdateWithoutAllergenInput>
    create: XOR<ProductAllergenCreateWithoutAllergenInput, ProductAllergenUncheckedCreateWithoutAllergenInput>
  }

  export type ProductAllergenUpdateWithWhereUniqueWithoutAllergenInput = {
    where: ProductAllergenWhereUniqueInput
    data: XOR<ProductAllergenUpdateWithoutAllergenInput, ProductAllergenUncheckedUpdateWithoutAllergenInput>
  }

  export type ProductAllergenUpdateManyWithWhereWithoutAllergenInput = {
    where: ProductAllergenScalarWhereInput
    data: XOR<ProductAllergenUpdateManyMutationInput, ProductAllergenUncheckedUpdateManyWithoutAllergenInput>
  }

  export type AllergenCreateWithoutProductAllergenInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    alxoidType?: $Enums.AlxoidType | null
    isAlxoidExclusive?: boolean
  }

  export type AllergenUncheckedCreateWithoutProductAllergenInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    alxoidType?: $Enums.AlxoidType | null
    isAlxoidExclusive?: boolean
  }

  export type AllergenCreateOrConnectWithoutProductAllergenInput = {
    where: AllergenWhereUniqueInput
    create: XOR<AllergenCreateWithoutProductAllergenInput, AllergenUncheckedCreateWithoutProductAllergenInput>
  }

  export type ProductCreateWithoutProductAllergenInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailCreateNestedManyWithoutProductInput
    Movement?: MovementCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductAllergenInput = {
    id?: string
    name: string
    type: $Enums.ProductType
    unit: $Enums.ProductUnit
    description?: string | null
    costPerUnit: Decimal | DecimalJsLike | number | string
    minStockLevel: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedCreateNestedManyWithoutProductInput
    Movement?: MovementUncheckedCreateNestedManyWithoutProductInput
    ProductExpiration?: ProductExpirationUncheckedCreateNestedManyWithoutProductInput
    StockBySede?: StockBySedeUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductAllergenInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductAllergenInput, ProductUncheckedCreateWithoutProductAllergenInput>
  }

  export type AllergenUpsertWithoutProductAllergenInput = {
    update: XOR<AllergenUpdateWithoutProductAllergenInput, AllergenUncheckedUpdateWithoutProductAllergenInput>
    create: XOR<AllergenCreateWithoutProductAllergenInput, AllergenUncheckedCreateWithoutProductAllergenInput>
    where?: AllergenWhereInput
  }

  export type AllergenUpdateToOneWithWhereWithoutProductAllergenInput = {
    where?: AllergenWhereInput
    data: XOR<AllergenUpdateWithoutProductAllergenInput, AllergenUncheckedUpdateWithoutProductAllergenInput>
  }

  export type AllergenUpdateWithoutProductAllergenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alxoidType?: NullableEnumAlxoidTypeFieldUpdateOperationsInput | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AllergenUncheckedUpdateWithoutProductAllergenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alxoidType?: NullableEnumAlxoidTypeFieldUpdateOperationsInput | $Enums.AlxoidType | null
    isAlxoidExclusive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductUpsertWithoutProductAllergenInput = {
    update: XOR<ProductUpdateWithoutProductAllergenInput, ProductUncheckedUpdateWithoutProductAllergenInput>
    create: XOR<ProductCreateWithoutProductAllergenInput, ProductUncheckedCreateWithoutProductAllergenInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductAllergenInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductAllergenInput, ProductUncheckedUpdateWithoutProductAllergenInput>
  }

  export type ProductUpdateWithoutProductAllergenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutProductNestedInput
    Movement?: MovementUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductAllergenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    unit?: EnumProductUnitFieldUpdateOperationsInput | $Enums.ProductUnit
    description?: NullableStringFieldUpdateOperationsInput | string | null
    costPerUnit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutProductNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutProductNestedInput
    ProductExpiration?: ProductExpirationUncheckedUpdateManyWithoutProductNestedInput
    StockBySede?: StockBySedeUncheckedUpdateManyWithoutProductNestedInput
  }

  export type usuariosCreateWithoutWhatsapp_configInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutWhatsapp_configInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutWhatsapp_configInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutWhatsapp_configInput, usuariosUncheckedCreateWithoutWhatsapp_configInput>
  }

  export type usuariosUpsertWithoutWhatsapp_configInput = {
    update: XOR<usuariosUpdateWithoutWhatsapp_configInput, usuariosUncheckedUpdateWithoutWhatsapp_configInput>
    create: XOR<usuariosCreateWithoutWhatsapp_configInput, usuariosUncheckedCreateWithoutWhatsapp_configInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutWhatsapp_configInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutWhatsapp_configInput, usuariosUncheckedUpdateWithoutWhatsapp_configInput>
  }

  export type usuariosUpdateWithoutWhatsapp_configInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutWhatsapp_configInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateWithoutWhatsapp_templatesInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutWhatsapp_templatesInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutWhatsapp_templatesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutWhatsapp_templatesInput, usuariosUncheckedCreateWithoutWhatsapp_templatesInput>
  }

  export type usuariosUpsertWithoutWhatsapp_templatesInput = {
    update: XOR<usuariosUpdateWithoutWhatsapp_templatesInput, usuariosUncheckedUpdateWithoutWhatsapp_templatesInput>
    create: XOR<usuariosCreateWithoutWhatsapp_templatesInput, usuariosUncheckedCreateWithoutWhatsapp_templatesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutWhatsapp_templatesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutWhatsapp_templatesInput, usuariosUncheckedUpdateWithoutWhatsapp_templatesInput>
  }

  export type usuariosUpdateWithoutWhatsapp_templatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutWhatsapp_templatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type citasCreateWithoutWhatsapp_messagesInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios: consultoriosCreateNestedOneWithoutCitasInput
    pacientes: pacientesCreateNestedOneWithoutCitasInput
    usuarios: usuariosCreateNestedOneWithoutCitasInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutWhatsapp_messagesInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    usuario_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutWhatsapp_messagesInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutWhatsapp_messagesInput, citasUncheckedCreateWithoutWhatsapp_messagesInput>
  }

  export type pacientesCreateWithoutWhatsapp_messagesInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    InventoryUsage?: InventoryUsageCreateNestedManyWithoutPacientesInput
    citas?: citasCreateNestedManyWithoutPacientesInput
    cobros?: cobrosCreateNestedManyWithoutPacientesInput
    organizaciones: organizacionesCreateNestedOneWithoutPacientesInput
  }

  export type pacientesUncheckedCreateWithoutWhatsapp_messagesInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
    organizacion_id: string
    InventoryUsage?: InventoryUsageUncheckedCreateNestedManyWithoutPacientesInput
    citas?: citasUncheckedCreateNestedManyWithoutPacientesInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutPacientesInput
  }

  export type pacientesCreateOrConnectWithoutWhatsapp_messagesInput = {
    where: pacientesWhereUniqueInput
    create: XOR<pacientesCreateWithoutWhatsapp_messagesInput, pacientesUncheckedCreateWithoutWhatsapp_messagesInput>
  }

  export type usuariosCreateWithoutWhatsapp_messagesInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutWhatsapp_messagesInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_reminders?: whatsapp_remindersUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutWhatsapp_messagesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutWhatsapp_messagesInput, usuariosUncheckedCreateWithoutWhatsapp_messagesInput>
  }

  export type citasUpsertWithoutWhatsapp_messagesInput = {
    update: XOR<citasUpdateWithoutWhatsapp_messagesInput, citasUncheckedUpdateWithoutWhatsapp_messagesInput>
    create: XOR<citasCreateWithoutWhatsapp_messagesInput, citasUncheckedCreateWithoutWhatsapp_messagesInput>
    where?: citasWhereInput
  }

  export type citasUpdateToOneWithWhereWithoutWhatsapp_messagesInput = {
    where?: citasWhereInput
    data: XOR<citasUpdateWithoutWhatsapp_messagesInput, citasUncheckedUpdateWithoutWhatsapp_messagesInput>
  }

  export type citasUpdateWithoutWhatsapp_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios?: consultoriosUpdateOneRequiredWithoutCitasNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCitasNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutWhatsapp_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type pacientesUpsertWithoutWhatsapp_messagesInput = {
    update: XOR<pacientesUpdateWithoutWhatsapp_messagesInput, pacientesUncheckedUpdateWithoutWhatsapp_messagesInput>
    create: XOR<pacientesCreateWithoutWhatsapp_messagesInput, pacientesUncheckedCreateWithoutWhatsapp_messagesInput>
    where?: pacientesWhereInput
  }

  export type pacientesUpdateToOneWithWhereWithoutWhatsapp_messagesInput = {
    where?: pacientesWhereInput
    data: XOR<pacientesUpdateWithoutWhatsapp_messagesInput, pacientesUncheckedUpdateWithoutWhatsapp_messagesInput>
  }

  export type pacientesUpdateWithoutWhatsapp_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutPacientesNestedInput
    citas?: citasUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUpdateManyWithoutPacientesNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutPacientesNestedInput
  }

  export type pacientesUncheckedUpdateWithoutWhatsapp_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    organizacion_id?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutPacientesNestedInput
    citas?: citasUncheckedUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutPacientesNestedInput
  }

  export type usuariosUpsertWithoutWhatsapp_messagesInput = {
    update: XOR<usuariosUpdateWithoutWhatsapp_messagesInput, usuariosUncheckedUpdateWithoutWhatsapp_messagesInput>
    create: XOR<usuariosCreateWithoutWhatsapp_messagesInput, usuariosUncheckedCreateWithoutWhatsapp_messagesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutWhatsapp_messagesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutWhatsapp_messagesInput, usuariosUncheckedUpdateWithoutWhatsapp_messagesInput>
  }

  export type usuariosUpdateWithoutWhatsapp_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutWhatsapp_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type citasCreateWithoutWhatsapp_remindersInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios: consultoriosCreateNestedOneWithoutCitasInput
    pacientes: pacientesCreateNestedOneWithoutCitasInput
    usuarios: usuariosCreateNestedOneWithoutCitasInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutWhatsapp_remindersInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    usuario_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutWhatsapp_remindersInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutWhatsapp_remindersInput, citasUncheckedCreateWithoutWhatsapp_remindersInput>
  }

  export type usuariosCreateWithoutWhatsapp_remindersInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosCreateNestedManyWithoutUsuariosInput
    organizaciones: organizacionesCreateNestedOneWithoutUsuariosInput
    consultorios: consultoriosCreateNestedOneWithoutUsuariosInput
    whatsapp_config?: whatsapp_configCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutWhatsapp_remindersInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
    citas?: citasUncheckedCreateNestedManyWithoutUsuariosInput
    cobros?: cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedCreateNestedManyWithoutUsuariosInput
    historial_cobros?: historial_cobrosUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_config?: whatsapp_configUncheckedCreateNestedOneWithoutUsuariosInput
    whatsapp_messages?: whatsapp_messagesUncheckedCreateNestedManyWithoutUsuariosInput
    whatsapp_templates?: whatsapp_templatesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutWhatsapp_remindersInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutWhatsapp_remindersInput, usuariosUncheckedCreateWithoutWhatsapp_remindersInput>
  }

  export type citasUpsertWithoutWhatsapp_remindersInput = {
    update: XOR<citasUpdateWithoutWhatsapp_remindersInput, citasUncheckedUpdateWithoutWhatsapp_remindersInput>
    create: XOR<citasCreateWithoutWhatsapp_remindersInput, citasUncheckedCreateWithoutWhatsapp_remindersInput>
    where?: citasWhereInput
  }

  export type citasUpdateToOneWithWhereWithoutWhatsapp_remindersInput = {
    where?: citasWhereInput
    data: XOR<citasUpdateWithoutWhatsapp_remindersInput, citasUncheckedUpdateWithoutWhatsapp_remindersInput>
  }

  export type citasUpdateWithoutWhatsapp_remindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios?: consultoriosUpdateOneRequiredWithoutCitasNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCitasNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCitasNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutWhatsapp_remindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type usuariosUpsertWithoutWhatsapp_remindersInput = {
    update: XOR<usuariosUpdateWithoutWhatsapp_remindersInput, usuariosUncheckedUpdateWithoutWhatsapp_remindersInput>
    create: XOR<usuariosCreateWithoutWhatsapp_remindersInput, usuariosUncheckedCreateWithoutWhatsapp_remindersInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutWhatsapp_remindersInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutWhatsapp_remindersInput, usuariosUncheckedUpdateWithoutWhatsapp_remindersInput>
  }

  export type usuariosUpdateWithoutWhatsapp_remindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutWhatsapp_remindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type consultoriosCreateManyOrganizacionesInput = {
    id?: string
    nombre: string
    direccion: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type pacientesCreateManyOrganizacionesInput = {
    id?: string
    nombre: string
    fecha_nacimiento: Date | string
    genero: string
    direccion?: string | null
    telefono: string
    email: string
    documento_identidad?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    apellido: string
  }

  export type serviciosCreateManyOrganizacionesInput = {
    id?: string
    nombre: string
    descripcion?: string | null
    precio_base: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usuariosCreateManyOrganizacionesInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    consultorio_id: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
  }

  export type consultoriosUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUpdateOneWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUncheckedUpdateManyWithoutConsultoriosNestedInput
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutConsultoriosNestedInput
    configuracion_permisos?: configuracion_permisosUncheckedUpdateOneWithoutConsultoriosNestedInput
    precios_consultorio?: precios_consultorioUncheckedUpdateManyWithoutConsultoriosNestedInput
    usuarios?: usuariosUncheckedUpdateManyWithoutConsultoriosNestedInput
  }

  export type consultoriosUncheckedUpdateManyWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pacientesUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutPacientesNestedInput
    citas?: citasUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUpdateManyWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutPacientesNestedInput
  }

  export type pacientesUncheckedUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutPacientesNestedInput
    citas?: citasUncheckedUpdateManyWithoutPacientesNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutPacientesNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutPacientesNestedInput
  }

  export type pacientesUncheckedUpdateManyWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    documento_identidad?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    apellido?: StringFieldUpdateOperationsInput | string
  }

  export type serviciosUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutServiciosNestedInput
  }

  export type serviciosUncheckedUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutServiciosNestedInput
  }

  export type serviciosUncheckedUpdateManyWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio_base?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usuariosUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateManyWithoutOrganizacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
  }

  export type citasCreateManyUsuariosInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type cobrosCreateManyUsuariosInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    paciente_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
  }

  export type disponibilidad_medicoCreateManyUsuariosInput = {
    id?: string
    dia_semana: number
    hora_inicio: string
    hora_fin: string
  }

  export type historial_cobrosCreateManyUsuariosInput = {
    id?: string
    created_at?: Date | string
    cobro_id: string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
  }

  export type whatsapp_messagesCreateManyUsuariosInput = {
    id?: string
    paciente_id?: string | null
    cita_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_remindersCreateManyUsuariosInput = {
    id?: string
    cita_id: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_templatesCreateManyUsuariosInput = {
    id?: string
    name: string
    language?: string
    category: string
    components: JsonNullValueInput | InputJsonValue
    status?: string
    created_at?: Date | string
    updated_at: Date | string
  }

  export type citasUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios?: consultoriosUpdateOneRequiredWithoutCitasNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCitasNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateManyWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type cobrosUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutCobrosNestedInput
    pacientes?: pacientesUpdateOneRequiredWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateManyWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
  }

  export type disponibilidad_medicoUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    dia_semana?: IntFieldUpdateOperationsInput | number
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
  }

  export type disponibilidad_medicoUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    dia_semana?: IntFieldUpdateOperationsInput | number
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
  }

  export type disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    dia_semana?: IntFieldUpdateOperationsInput | number
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cobrosUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
    cobros?: cobrosUpdateOneRequiredWithoutHistorial_cobrosNestedInput
  }

  export type historial_cobrosUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
  }

  export type historial_cobrosUncheckedUpdateManyWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
  }

  export type whatsapp_messagesUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateOneWithoutWhatsapp_messagesNestedInput
    pacientes?: pacientesUpdateOneWithoutWhatsapp_messagesNestedInput
  }

  export type whatsapp_messagesUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    paciente_id?: NullableStringFieldUpdateOperationsInput | string | null
    cita_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_messagesUncheckedUpdateManyWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    paciente_id?: NullableStringFieldUpdateOperationsInput | string | null
    cita_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_remindersUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateOneRequiredWithoutWhatsapp_remindersNestedInput
  }

  export type whatsapp_remindersUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cita_id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_remindersUncheckedUpdateManyWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cita_id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_templatesUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    components?: JsonNullValueInput | InputJsonValue
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_templatesUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    components?: JsonNullValueInput | InputJsonValue
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_templatesUncheckedUpdateManyWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    components?: JsonNullValueInput | InputJsonValue
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageCreateManyPacientesInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    sedeId: string
    updatedAt?: Date | string
    userId: string
  }

  export type citasCreateManyPacientesInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    usuario_id: string
    consultorio_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type cobrosCreateManyPacientesInput = {
    id?: string
    fecha_cobro: Date | string
    monto_total: number
    notas?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    usuario_id: string
    estado: $Enums.EstadoCobro
    metodo_pago?: $Enums.MetodoPago | null
  }

  export type whatsapp_messagesCreateManyPacientesInput = {
    id?: string
    usuario_id: string
    cita_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type InventoryUsageUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sede?: SedeUpdateOneRequiredWithoutInventoryUsageNestedInput
    user?: UserUpdateOneRequiredWithoutInventoryUsageNestedInput
    details?: InventoryUsageDetailUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sedeId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    details?: InventoryUsageDetailUncheckedUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateManyWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sedeId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type citasUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    consultorios?: consultoriosUpdateOneRequiredWithoutCitasNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCitasNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    usuario_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateManyWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    usuario_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type cobrosUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUpdateManyWithoutCobrosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
    cobro_conceptos?: cobro_conceptosUncheckedUpdateManyWithoutCobrosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutCobrosNestedInput
    metodos_pago_cobro?: metodos_pago_cobroUncheckedUpdateManyWithoutCobrosNestedInput
  }

  export type cobrosUncheckedUpdateManyWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_cobro?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_total?: FloatFieldUpdateOperationsInput | number
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoCobroFieldUpdateOperationsInput | $Enums.EstadoCobro
    metodo_pago?: NullableEnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago | null
  }

  export type whatsapp_messagesUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    citas?: citasUpdateOneWithoutWhatsapp_messagesNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutWhatsapp_messagesNestedInput
  }

  export type whatsapp_messagesUncheckedUpdateWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    cita_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_messagesUncheckedUpdateManyWithoutPacientesInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    cita_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type citasCreateManyConsultoriosInput = {
    id?: string
    titulo?: string | null
    descripcion?: string | null
    estado: $Enums.EstadoCita
    paciente_id: string
    usuario_id: string
    created_at?: Date | string
    updated_at: Date | string
    color?: string | null
    fecha_fin: Date | string
    fecha_inicio: Date | string
    es_recurrente?: boolean | null
    regla_recurrencia?: string | null
    id_serie?: string | null
    googleEventId?: string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type cobro_conceptosCreateManyConsultoriosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_id: string
    precio_unitario: number
    servicio_id: string
  }

  export type precios_consultorioCreateManyConsultoriosInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    concepto: string
    precio: number
  }

  export type usuariosCreateManyConsultoriosInput = {
    id?: string
    nombre: string
    email: string
    telefono: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string
    rol: $Enums.Rol
    apellido: string
    googleAccessToken?: string | null
    googleRefreshToken?: string | null
    googleTokenExpiry?: Date | string | null
    googleCalendarId?: string | null
    organizacion_id: string
    puede_editar_cobros?: boolean
    puede_eliminar_cobros?: boolean
    puede_gestionar_usuarios?: boolean
    puede_ver_historial?: boolean
  }

  export type citasUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    pacientes?: pacientesUpdateOneRequiredWithoutCitasNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCitasNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutCitasNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateManyWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoCitaFieldUpdateOperationsInput | $Enums.EstadoCita
    paciente_id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    es_recurrente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    regla_recurrencia?: NullableStringFieldUpdateOperationsInput | string | null
    id_serie?: NullableStringFieldUpdateOperationsInput | string | null
    googleEventId?: NullableStringFieldUpdateOperationsInput | string | null
    exdates?: NullableJsonNullValueInput | InputJsonValue
  }

  export type cobro_conceptosUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    cobros?: cobrosUpdateOneRequiredWithoutCobro_conceptosNestedInput
    servicios?: serviciosUpdateOneRequiredWithoutCobro_conceptosNestedInput
  }

  export type cobro_conceptosUncheckedUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    servicio_id?: StringFieldUpdateOperationsInput | string
  }

  export type cobro_conceptosUncheckedUpdateManyWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    servicio_id?: StringFieldUpdateOperationsInput | string
  }

  export type precios_consultorioUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    concepto?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
  }

  export type precios_consultorioUncheckedUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    concepto?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
  }

  export type precios_consultorioUncheckedUpdateManyWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    concepto?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
  }

  export type usuariosUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUpdateManyWithoutUsuariosNestedInput
    organizaciones?: organizacionesUpdateOneRequiredWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
    citas?: citasUncheckedUpdateManyWithoutUsuariosNestedInput
    cobros?: cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    disponibilidad_medico?: disponibilidad_medicoUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_cobros?: historial_cobrosUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_config?: whatsapp_configUncheckedUpdateOneWithoutUsuariosNestedInput
    whatsapp_messages?: whatsapp_messagesUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_reminders?: whatsapp_remindersUncheckedUpdateManyWithoutUsuariosNestedInput
    whatsapp_templates?: whatsapp_templatesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateManyWithoutConsultoriosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    apellido?: StringFieldUpdateOperationsInput | string
    googleAccessToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleRefreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    googleTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    googleCalendarId?: NullableStringFieldUpdateOperationsInput | string | null
    organizacion_id?: StringFieldUpdateOperationsInput | string
    puede_editar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_eliminar_cobros?: BoolFieldUpdateOperationsInput | boolean
    puede_gestionar_usuarios?: BoolFieldUpdateOperationsInput | boolean
    puede_ver_historial?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cobro_conceptosCreateManyCobrosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    consultorio_id: string
    precio_unitario: number
    servicio_id: string
  }

  export type historial_cobrosCreateManyCobrosInput = {
    id?: string
    created_at?: Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues: JsonNullValueInput | InputJsonValue
    tipo_cambio: $Enums.TipoCambio
    usuario_id: string
  }

  export type metodos_pago_cobroCreateManyCobrosInput = {
    id?: string
    metodo_pago: $Enums.MetodoPago
    monto: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cobro_conceptosUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    consultorios?: consultoriosUpdateOneRequiredWithoutCobro_conceptosNestedInput
    servicios?: serviciosUpdateOneRequiredWithoutCobro_conceptosNestedInput
  }

  export type cobro_conceptosUncheckedUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    servicio_id?: StringFieldUpdateOperationsInput | string
  }

  export type cobro_conceptosUncheckedUpdateManyWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    servicio_id?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cobrosUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
    usuarios?: usuariosUpdateOneRequiredWithoutHistorial_cobrosNestedInput
  }

  export type historial_cobrosUncheckedUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
    usuario_id?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cobrosUncheckedUpdateManyWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles_antes?: NullableJsonNullValueInput | InputJsonValue
    detalles_despues?: JsonNullValueInput | InputJsonValue
    tipo_cambio?: EnumTipoCambioFieldUpdateOperationsInput | $Enums.TipoCambio
    usuario_id?: StringFieldUpdateOperationsInput | string
  }

  export type metodos_pago_cobroUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    monto?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type metodos_pago_cobroUncheckedUpdateWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    monto?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type metodos_pago_cobroUncheckedUpdateManyWithoutCobrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    monto?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cobro_conceptosCreateManyServiciosInput = {
    id?: string
    cantidad: number
    subtotal: number
    created_at?: Date | string
    updated_at?: Date | string
    cobro_id: string
    consultorio_id: string
    precio_unitario: number
  }

  export type cobro_conceptosUpdateWithoutServiciosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    cobros?: cobrosUpdateOneRequiredWithoutCobro_conceptosNestedInput
    consultorios?: consultoriosUpdateOneRequiredWithoutCobro_conceptosNestedInput
  }

  export type cobro_conceptosUncheckedUpdateWithoutServiciosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type cobro_conceptosUncheckedUpdateManyWithoutServiciosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cobro_id?: StringFieldUpdateOperationsInput | string
    consultorio_id?: StringFieldUpdateOperationsInput | string
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type whatsapp_messagesCreateManyCitasInput = {
    id?: string
    usuario_id: string
    paciente_id?: string | null
    template_name?: string | null
    message_type: string
    content: JsonNullValueInput | InputJsonValue
    phone_number: string
    status: $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: string | null
    error_message?: string | null
    sent_at?: Date | string | null
    delivered_at?: Date | string | null
    read_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_remindersCreateManyCitasInput = {
    id?: string
    usuario_id: string
    template_name: string
    reminder_type: string
    scheduled_time: Date | string
    is_sent?: boolean
    sent_at?: Date | string | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type whatsapp_messagesUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes?: pacientesUpdateOneWithoutWhatsapp_messagesNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutWhatsapp_messagesNestedInput
  }

  export type whatsapp_messagesUncheckedUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    paciente_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_messagesUncheckedUpdateManyWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    paciente_id?: NullableStringFieldUpdateOperationsInput | string | null
    template_name?: NullableStringFieldUpdateOperationsInput | string | null
    message_type?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    phone_number?: StringFieldUpdateOperationsInput | string
    status?: EnumWhatsAppMessageStatusFieldUpdateOperationsInput | $Enums.WhatsAppMessageStatus
    whatsapp_message_id?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    read_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_remindersUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: usuariosUpdateOneRequiredWithoutWhatsapp_remindersNestedInput
  }

  export type whatsapp_remindersUncheckedUpdateWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type whatsapp_remindersUncheckedUpdateManyWithoutCitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario_id?: StringFieldUpdateOperationsInput | string
    template_name?: StringFieldUpdateOperationsInput | string
    reminder_type?: StringFieldUpdateOperationsInput | string
    scheduled_time?: DateTimeFieldUpdateOperationsInput | Date | string
    is_sent?: BoolFieldUpdateOperationsInput | boolean
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailCreateManyProductInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    inventoryUsageId: string
    movementId?: string | null
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type MovementCreateManyProductInput = {
    id?: string
    userId: string
    sedeId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
  }

  export type ProductAllergenCreateManyProductInput = {
    id?: string
    allergenId: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductExpirationCreateManyProductInput = {
    id?: string
    sedeId: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBySedeCreateManyProductInput = {
    id?: string
    sedeId: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryUsage?: InventoryUsageUpdateOneRequiredWithoutDetailsNestedInput
    movement?: MovementUpdateOneWithoutInventoryUsageDetailNestedInput
  }

  export type InventoryUsageDetailUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    inventoryUsageId?: StringFieldUpdateOperationsInput | string
    movementId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    inventoryUsageId?: StringFieldUpdateOperationsInput | string
    movementId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovementUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutMovementNestedInput
    sede?: SedeUpdateOneRequiredWithoutMovementNestedInput
    user?: UserUpdateOneRequiredWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAllergenUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    allergen?: AllergenUpdateOneRequiredWithoutProductAllergenNestedInput
  }

  export type ProductAllergenUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    allergenId?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAllergenUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    allergenId?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductExpirationUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sede?: SedeUpdateOneRequiredWithoutProductExpirationNestedInput
  }

  export type ProductExpirationUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductExpirationUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBySedeUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sede?: SedeUpdateOneRequiredWithoutStockBySedeNestedInput
  }

  export type StockBySedeUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBySedeUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageCreateManySedeInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    pacienteId?: string | null
  }

  export type MovementCreateManySedeInput = {
    id?: string
    userId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
  }

  export type ProductExpirationCreateManySedeInput = {
    id?: string
    productId: string
    batchNumber: string
    expiryDate: Date | string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBySedeCreateManySedeInput = {
    id?: string
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateManySedeInput = {
    id?: string
    email: string
    name: string
    role: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryUsageUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes?: pacientesUpdateOneWithoutInventoryUsageNestedInput
    user?: UserUpdateOneRequiredWithoutInventoryUsageNestedInput
    details?: InventoryUsageDetailUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    pacienteId?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InventoryUsageDetailUncheckedUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateManyWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    pacienteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MovementUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutMovementNestedInput
    product?: ProductUpdateOneRequiredWithoutMovementNestedInput
    user?: UserUpdateOneRequiredWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateManyWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductExpirationUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductExpirationNestedInput
  }

  export type ProductExpirationUncheckedUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductExpirationUncheckedUpdateManyWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    batchNumber?: StringFieldUpdateOperationsInput | string
    expiryDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBySedeUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutStockBySedeNestedInput
  }

  export type StockBySedeUncheckedUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBySedeUncheckedUpdateManyWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUpdateManyWithoutUserNestedInput
    Movement?: MovementUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsage?: InventoryUsageUncheckedUpdateManyWithoutUserNestedInput
    Movement?: MovementUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutSedeInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageCreateManyUserInput = {
    id?: string
    nombrePaciente: string
    tipoTratamiento: $Enums.TipoTratamiento
    observaciones?: string | null
    tuvoReaccion: boolean
    descripcionReaccion?: string | null
    createdAt?: Date | string
    sedeId: string
    updatedAt?: Date | string
    pacienteId?: string | null
  }

  export type MovementCreateManyUserInput = {
    id?: string
    sedeId: string
    productId: string
    type: $Enums.MovementType
    quantity: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    batchNumber?: string | null
    expiryDate?: Date | string | null
    createdAt?: Date | string
  }

  export type InventoryUsageUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes?: pacientesUpdateOneWithoutInventoryUsageNestedInput
    sede?: SedeUpdateOneRequiredWithoutInventoryUsageNestedInput
    details?: InventoryUsageDetailUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sedeId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pacienteId?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InventoryUsageDetailUncheckedUpdateManyWithoutInventoryUsageNestedInput
  }

  export type InventoryUsageUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombrePaciente?: StringFieldUpdateOperationsInput | string
    tipoTratamiento?: EnumTipoTratamientoFieldUpdateOperationsInput | $Enums.TipoTratamiento
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    tuvoReaccion?: BoolFieldUpdateOperationsInput | boolean
    descripcionReaccion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sedeId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pacienteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MovementUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUpdateManyWithoutMovementNestedInput
    product?: ProductUpdateOneRequiredWithoutMovementNestedInput
    sede?: SedeUpdateOneRequiredWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    InventoryUsageDetail?: InventoryUsageDetailUncheckedUpdateManyWithoutMovementNestedInput
  }

  export type MovementUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sedeId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailCreateManyInventoryUsageInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    movementId?: string | null
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movement?: MovementUpdateOneWithoutInventoryUsageDetailNestedInput
    product?: ProductUpdateOneRequiredWithoutInventoryUsageDetailNestedInput
  }

  export type InventoryUsageDetailUncheckedUpdateWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    movementId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailUncheckedUpdateManyWithoutInventoryUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    movementId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailCreateManyMovementInput = {
    id?: string
    createdAt?: Date | string
    doses?: number | null
    frascoLevel?: number | null
    inventoryUsageId: string
    productId: string
    quantity: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    unitCost: Decimal | DecimalJsLike | number | string
    units?: number | null
    updatedAt?: Date | string
  }

  export type InventoryUsageDetailUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryUsage?: InventoryUsageUpdateOneRequiredWithoutDetailsNestedInput
    product?: ProductUpdateOneRequiredWithoutInventoryUsageDetailNestedInput
  }

  export type InventoryUsageDetailUncheckedUpdateWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    inventoryUsageId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryUsageDetailUncheckedUpdateManyWithoutMovementInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doses?: NullableIntFieldUpdateOperationsInput | number | null
    frascoLevel?: NullableIntFieldUpdateOperationsInput | number | null
    inventoryUsageId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    units?: NullableIntFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAllergenCreateManyAllergenInput = {
    id?: string
    productId: string
    mlPerDose: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductAllergenUpdateWithoutAllergenInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductAllergenNestedInput
  }

  export type ProductAllergenUncheckedUpdateWithoutAllergenInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAllergenUncheckedUpdateManyWithoutAllergenInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    mlPerDose?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}